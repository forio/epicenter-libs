{"version":3,"sources":["webpack://epicenter/webpack/universalModuleDefinition","webpack://epicenter/webpack/bootstrap","webpack://epicenter/./node_modules/@babel/runtime/regenerator/index.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/createClass.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/inherits.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/get.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/typeof.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://epicenter/./node_modules/cometd/cometd.js","webpack://epicenter/./node_modules/cometd/AckExtension.js","webpack://epicenter/./node_modules/cometd/ReloadExtension.js","webpack://epicenter/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/superPropBase.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/construct.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://epicenter/./node_modules/regenerator-runtime/runtime.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://epicenter/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://epicenter/./src/utils/constants.js","webpack://epicenter/./src/utils/helpers.js","webpack://epicenter/./src/utils/store.js","webpack://epicenter/./src/utils/cookies.js","webpack://epicenter/./src/utils/error.js","webpack://epicenter/./src/utils/fault.js","webpack://epicenter/./src/utils/result.js","webpack://epicenter/./src/adapters/account.js","webpack://epicenter/./src/adapters/authentication.js","webpack://epicenter/./src/adapters/presence.js","webpack://epicenter/./src/adapters/project.js","webpack://epicenter/./src/adapters/run.js","webpack://epicenter/./src/adapters/cometd.js","webpack://epicenter/./src/adapters/channel.js","webpack://epicenter/./src/utils/error-manager.js","webpack://epicenter/./src/utils/identification.js","webpack://epicenter/./src/utils/router.js","webpack://epicenter/./src/config.js","webpack://epicenter/./src/epicenter.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","args","arguments","apply","err","undefined","obj","configurable","writable","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","protoProps","staticProps","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_typeof","assertThisInitialized","subClass","superClass","constructor","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","superPropBase","_get","receiver","Reflect","base","desc","getOwnPropertyDescriptor","arrayWithoutHoles","iterableToArray","nonIterableSpread","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","has","set","Wrapper","iterator","objectWithoutPropertiesLoose","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","_setPrototypeOf","Scheduler","_ids","_tasks","register","funktion","id","unregister","setTimeout","delay","window","clearTimeout","WorkerScheduler","onmessage","e","cmd","data","type","postMessage","Utils","isString","String","isArray","Array","inArray","element","array","TransportRegistry","_types","_transports","getTransportTypes","slice","findTransportTypes","version","crossDomain","url","result","accept","push","negotiateTransport","types","j","transport","add","index","existing","splice","find","remove","clear","reset","init","Transport","_type","_cometd","_url","registered","cometd","unregistered","_debug","_mixin","getConfiguration","getAdvice","convertToMessages","response","JSON","parse","x","getType","getURL","setURL","send","envelope","metaConnect","abort","toString","derive","baseObject","F","RequestTransport","_super","_self","_requestIds","_metaConnectRequest","_requests","_envelopes","_coalesceEnvelopes","envelopeAndRequest","newEnvelope","newRequest","sync","shift","messages","concat","_transportSend","request","transportSend","expired","maxDelay","maxNetworkDelay","timeout","errorMessage","failure","reason","xhr","httpCode","xhrStatus","abortXHR","complete","onFailure","_queueSend","requestId","maxConnections","_metaConnectComplete","_complete","success","nextEnvelope","nextRequest","autoBatch","_metaConnectSend","transportSuccess","responses","onSuccess","transportFailure","metaConnectRequest","state","readyState","XMLHttpRequest","UNSENT","status","LongPollingTransport","_supportsCrossDomain","newXMLHttpRequest","xhrSend","packet","context","_copyContext","withCredentials","open","headers","headerName","setRequestHeader","onload","responseText","onError","statusText","onabort","onerror","body","sameStack","requestHeaders","stringify","received","exception","CallbackPollingTransport","jsonp","_failTransportFn","jsonpSend","head","document","getElementsByTagName","script","createElement","callbackName","removeChild","encodeURIComponent","src","async","appendChild","start","lengths","json","urlLength","encodeURI","maxLength","maxURILength","envelopeToSend","begin","end","join","xx","WebSocketTransport","_webSocketSupported","_webSocketConnected","_stickyReconnect","_context","_connecting","_connected","_successCallback","_forceClose","event","webSocketClose","code","onClose","_sameContext","_storeEnvelope","messageIds","message","envelopes","_websocketConnect","replace","protocol","webSocket","WebSocket","stickyReconnect","connectTimeout","connectTimer","onclose","onopen","onOpen","_warn","wsMessage","onMessage","_webSocketSend","timeouts","_send","_notifySuccess","_notifyFailure","close","test","channel","removed","ids","split","websocketCode","websocketEnabled","_z85EncodeTable","_z85DecodeTable","CometD","_transport","_handshakeProps","_handshakeCallback","_handleMessages","_handleFailure","_scheduler","_name","_crossDomain","_status","_messageId","_clientId","_batch","_messageQueue","_internalBatch","_listenerId","_listeners","_backoff","_scheduledSend","_extensions","_advice","_callbacks","_remoteCalls","_reestablish","_unconnectTime","_handshakeMessages","_metaConnect","_config","useWorkerScheduler","backoffIncrement","maxBackoff","logLevel","appendMessageTypeToURL","urls","advice","interval","reconnect","maxInterval","_fieldValue","_isString","_isFunction","_zeroPad","Math","pow","_log","level","console","logger","now","Date","getHours","getMinutes","getSeconds","getMilliseconds","_splitURL","RegExp","exec","_configure","configuration","urlParts","hostAndPort","uri","afterURI","_isCrossDomain","_info","uriSegments","lastSegmentIndex","match","Worker","Blob","URL","substring","lastIndexOf","blob","blobURL","createObjectURL","worker","_removeListener","subscription","subscriptions","listener","_removeSubscription","_clearSubscriptions","_setStatus","newStatus","_isDisconnected","_nextMessageId","_applyExtension","scope","callback","outgoing","handler","onExtensionException","_applyOutgoingExtensions","extension","_notify","onListenerException","_notifyListeners","channelParts","last","channelPart","_cancelDelayedSend","_delayedSend","operation","time","extraPath","messageId","clientId","rcvdMessages","conduit","getTransport","connectionType","_resetBackoff","_flushBatch","_delayedConnect","bayeuxMessage","_connect","_updateAdvice","newAdvice","_disconnect","_notifyTransportException","oldTransport","newTransport","onTransportException","_handshake","handshakeProps","handshakeCallback","transportTypes","minimumVersion","supportedConnectionTypes","_putCallback","_notifyCallback","onCallbackException","_handleCallback","_getCallback","_handleRemoteCall","_handleTransportFailure","failureInfo","action","_delayedHandshake","_failHandshake","onTransportFailure","_handshakeFailure","cause","_matchMetaConnect","connect","_failConnect","_connectFailure","_failDisconnect","_disconnectFailure","_failSubscribe","_subscribeFailure","_failUnsubscribe","_unsubscribeFailure","_failMessage","_messageFailure","_receive","incoming","_applyIncomingExtensions","successful","reestablish","_handshakeResponse","_connectResponse","_disconnectResponse","_subscribeResponse","_unsubscribeResponse","_messageResponse","_hasSubscriptions","_resolveScopedCallback","delegate","method","_addListener","isListener","deep","objects","propName","prop","targ","location","host","failureHandler","transports","getTransportRegistry","getBackoffPeriod","oldTransportType","newTransportType","increaseBackoffPeriod","getTime","expiration","resetBackoffPeriod","receive","failureMessage","registerTransport","unregisterTransport","unregisterTransports","findTransport","configure","handshake","disconnect","disconnectProps","disconnectCallback","startBatch","endBatch","_endBatch","batch","addListener","removeListener","clearListeners","subscribe","subscribeProps","subscribeCallback","unsubscribe","unsubscribeProps","unsubscribeCallback","resubscribe","clearSubscriptions","publish","content","publishProps","publishCallback","publishBinary","meta","ArrayBuffer","ext","binary","remoteCall","callProps","remoteCallBinary","getStatus","isDisconnected","setBackoffIncrement","period","getBackoffIncrement","setLogLevel","registerExtension","existingExtension","unregisterExtension","getExtension","getName","getClientId","Z85","encode","bytes","buffer","Uint8Array","byteLength","remainder","padding","view","DataView","isPadding","getUint8","divisor","floor","decode","string","charIdx","byteIdx","charCodeAt","setUint8","AckExtension","_serverSupportsAcks","text","ackField","ack","enabled","ackEnabled","ReloadExtension","_state","_reloading","_reload","config","handshakeResponse","sessionStorage","setItem","reload","getItem","oldState","removeItem","_similarState","transportType","__self__","fetch","DOMException","support","viewClasses","isArrayBufferView","isView","normalizeName","toLowerCase","normalizeValue","iteratorFor","items","next","Headers","map","forEach","append","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","Error","arrayBuffer","readAsText","chars","fromCharCode","readArrayBufferAsText","formData","oldValue","thisArg","keys","values","entries","methods","Request","input","options","upcased","credentials","signal","toUpperCase","referrer","form","trim","decodeURIComponent","Response","bodyInit","ok","clone","redirectStatuses","redirect","RangeError","stack","aborted","abortXhr","rawHeaders","getAllResponseHeaders","line","parts","responseURL","ontimeout","responseType","addEventListener","onreadystatechange","removeEventListener","polyfill","default","_arr","_n","_d","_e","_s","_i","ReferenceError","Function","isNativeReflectConstruct","sham","Proxy","_construct","Parent","a","sourceKeys","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","doneResult","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","iter","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","arr2","from","BROWSER_STORAGE_TYPE","SCOPE_BOUNDARY","PROJECT","GROUP","EPISODE","WORLD","RITUAL","NONE","REANIMATE","EXORCISE","PUSH_CATEGORY","CHAT","CONSENSUS","CONTROL","PRESENCE","LOBBY","RUN","SYSTEM","LOCK_TYPE","MONITER","AUTHOR","SUPPORT","FACILITATOR","REVIEWER","USER","LEADER","PARTICIPANT","ANONYMOUS","isBrowser","isNode","prefix","pre","str","startsWith","Store","store","_store","nodeMap","NodeStore","SessionStore","CookieStore","defaults","domain","hostname","path","cookies","getExpiration","vEnd","Number","Infinity","toUTCString","cookie","secure","samesite","expireStr","domainStr","pathStr","secureStr","samesiteStr","hasItem","aKeys","nLen","nIdx","EpicenterError","Fault","information","rest","Result","createAccount","objectType","shortName","adminKey","subscriptionPlan","billingInterval","Router","post","updateAccount","patch","removeAccount","accountShortName","withAccountShortName","logout","identification","session","cometdAdapter","login","password","groupKey","others","projectShortName","withProjectShortName","includeAuthorization","inert","upgrade","sso","getSession","getLocalSession","forGroup","forWorld","worldKey","channelsEnabled","optionals","model","scopeBoundary","scopeKey","readLock","writeLock","ephemeral","trackingKey","modelContext","executionContext","defaultLock","userKey","permit","morphology","modelFile","runKey","restore","rewind","steps","rewindCount","update","marked","hidden","closed","hasMultiple","uriComponent","withSearchParams","query","filter","sort","first","max","projections","variables","statement","metadata","attr","router","introspect","ritual","searchParams","warn","getVariables","include","getVariable","variable","updateVariables","getMetadata","updateMetadata","actionList","serial","operations","normalizedOps","item","params","reduce","promiseChain","getWithStrategy","strategy","initOperations","runs","newRun","AUTH_TOKEN_KEY","CometdError","reply","includes","customCometd","initialized","defaultCometd","apiProtocol","apiHost","apiVersion","onunload","checkEnabled","token","requireAcknowledgement","handshakeReply","errorManager","empty","disconnectReply","channels","subscriptionProps","handleCometdUpdate","promises","subscribeReply","all","publishReply","unsubscribeReply","Channel","pushCategory","validateScope","handleByLoginMethod","defaultValue","ref","access","authAdapter","href","handleByRelog","identifier","retry","handleFn","handlers","unshift","retryFn","findIndex","remainingHandlers","_handlers","COOKIE","SESSION","SESSION_KEY","storeType","consumeSSO","mySession","isLocal","isCustomDomain","pathname","getStore","description","getSessionPath","Authorization","cache","contentType","server","withServer","withVersion","search","_server","_version","_accountShortName","_projectShortName","_searchParams","flatMap","v","loadBrowser","loadNode","account","project","_apiProtocol","endsWith","_apiHost","_apiVersion","VERSION"],"mappings":"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","file":"epicenter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"epicenter\"] = factory();\n\telse\n\t\troot[\"epicenter\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","/*\n * Copyright (c) 2008-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* CometD Version 3.1.12 */\n\n(function(root, factory) {\n    if (typeof exports === 'object') {\n        // CommonJS.\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD.\n        define([], factory);\n    } else {\n        // Globals.\n        root.org = root.org || {};\n        root.org.cometd = factory();\n    }\n}(this, function() {\n    /**\n     * Browsers may throttle the Window scheduler,\n     * so we may replace it with a Worker scheduler.\n     */\n    var Scheduler = function() {\n        var _ids = 0;\n        var _tasks = {};\n        this.register = function(funktion) {\n            var id = ++_ids;\n            _tasks[id] = funktion;\n            return id;\n        };\n        this.unregister = function(id) {\n            var funktion = _tasks[id];\n            delete _tasks[id];\n            return funktion;\n        };\n        this.setTimeout = function(funktion, delay) {\n            return window.setTimeout(funktion, delay);\n        };\n        this.clearTimeout = function(id) {\n            window.clearTimeout(id);\n        };\n    };\n\n    /**\n     * The scheduler code that will run in the Worker.\n     * Workers have a built-in `self` variable similar to `window`.\n     */\n    function WorkerScheduler() {\n        var _tasks = {};\n        self.onmessage = function(e) {\n            var cmd = e.data;\n            var id = _tasks[cmd.id];\n            switch (cmd.type) {\n                case 'setTimeout':\n                    _tasks[cmd.id] = self.setTimeout(function() {\n                        delete _tasks[cmd.id];\n                        self.postMessage({\n                            id: cmd.id\n                        });\n                    }, cmd.delay);\n                    break;\n                case 'clearTimeout':\n                    delete _tasks[cmd.id];\n                    if (id) {\n                        self.clearTimeout(id);\n                    }\n                    break;\n                default:\n                    throw 'Unknown command ' + cmd.type;\n            }\n        };\n    }\n\n\n    /**\n     * Utility functions.\n     */\n    var Utils = {\n        isString: function(value) {\n            if (value === undefined || value === null) {\n                return false;\n            }\n            return typeof value === 'string' || value instanceof String;\n        },\n        isArray: function(value) {\n            if (value === undefined || value === null) {\n                return false;\n            }\n            return value instanceof Array;\n        },\n        /**\n         * Returns whether the given element is contained into the given array.\n         * @param element the element to check presence for\n         * @param array the array to check for the element presence\n         * @return the index of the element, if present, or a negative index if the element is not present\n         */\n        inArray: function(element, array) {\n            for (var i = 0; i < array.length; ++i) {\n                if (element === array[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    };\n\n\n    /**\n     * A registry for transports used by the CometD object.\n     */\n    var TransportRegistry = function() {\n        var _types = [];\n        var _transports = {};\n\n        this.getTransportTypes = function() {\n            return _types.slice(0);\n        };\n\n        this.findTransportTypes = function(version, crossDomain, url) {\n            var result = [];\n            for (var i = 0; i < _types.length; ++i) {\n                var type = _types[i];\n                if (_transports[type].accept(version, crossDomain, url) === true) {\n                    result.push(type);\n                }\n            }\n            return result;\n        };\n\n        this.negotiateTransport = function(types, version, crossDomain, url) {\n            for (var i = 0; i < _types.length; ++i) {\n                var type = _types[i];\n                for (var j = 0; j < types.length; ++j) {\n                    if (type === types[j]) {\n                        var transport = _transports[type];\n                        if (transport.accept(version, crossDomain, url) === true) {\n                            return transport;\n                        }\n                    }\n                }\n            }\n            return null;\n        };\n\n        this.add = function(type, transport, index) {\n            var existing = false;\n            for (var i = 0; i < _types.length; ++i) {\n                if (_types[i] === type) {\n                    existing = true;\n                    break;\n                }\n            }\n\n            if (!existing) {\n                if (typeof index !== 'number') {\n                    _types.push(type);\n                } else {\n                    _types.splice(index, 0, type);\n                }\n                _transports[type] = transport;\n            }\n\n            return !existing;\n        };\n\n        this.find = function(type) {\n            for (var i = 0; i < _types.length; ++i) {\n                if (_types[i] === type) {\n                    return _transports[type];\n                }\n            }\n            return null;\n        };\n\n        this.remove = function(type) {\n            for (var i = 0; i < _types.length; ++i) {\n                if (_types[i] === type) {\n                    _types.splice(i, 1);\n                    var transport = _transports[type];\n                    delete _transports[type];\n                    return transport;\n                }\n            }\n            return null;\n        };\n\n        this.clear = function() {\n            _types = [];\n            _transports = {};\n        };\n\n        this.reset = function(init) {\n            for (var i = 0; i < _types.length; ++i) {\n                _transports[_types[i]].reset(init);\n            }\n        };\n    };\n\n\n    /**\n     * Base object with the common functionality for transports.\n     */\n    var Transport = function() {\n        var _type;\n        var _cometd;\n        var _url;\n\n        /**\n         * Function invoked just after a transport has been successfully registered.\n         * @param type the type of transport (for example 'long-polling')\n         * @param cometd the cometd object this transport has been registered to\n         * @see #unregistered()\n         */\n        this.registered = function(type, cometd) {\n            _type = type;\n            _cometd = cometd;\n        };\n\n        /**\n         * Function invoked just after a transport has been successfully unregistered.\n         * @see #registered(type, cometd)\n         */\n        this.unregistered = function() {\n            _type = null;\n            _cometd = null;\n        };\n\n        this._debug = function() {\n            _cometd._debug.apply(_cometd, arguments);\n        };\n\n        this._mixin = function() {\n            return _cometd._mixin.apply(_cometd, arguments);\n        };\n\n        this.getConfiguration = function() {\n            return _cometd.getConfiguration();\n        };\n\n        this.getAdvice = function() {\n            return _cometd.getAdvice();\n        };\n\n        this.setTimeout = function(funktion, delay) {\n            return _cometd.setTimeout(funktion, delay);\n        };\n\n        this.clearTimeout = function(id) {\n            _cometd.clearTimeout(id);\n        };\n\n        /**\n         * Converts the given response into an array of bayeux messages\n         * @param response the response to convert\n         * @return an array of bayeux messages obtained by converting the response\n         */\n        this.convertToMessages = function(response) {\n            if (Utils.isString(response)) {\n                try {\n                    return JSON.parse(response);\n                } catch (x) {\n                    this._debug('Could not convert to JSON the following string', '\"' + response + '\"');\n                    throw x;\n                }\n            }\n            if (Utils.isArray(response)) {\n                return response;\n            }\n            if (response === undefined || response === null) {\n                return [];\n            }\n            if (response instanceof Object) {\n                return [response];\n            }\n            throw 'Conversion Error ' + response + ', typeof ' + (typeof response);\n        };\n\n        /**\n         * Returns whether this transport can work for the given version and cross domain communication case.\n         * @param version a string indicating the transport version\n         * @param crossDomain a boolean indicating whether the communication is cross domain\n         * @param url the URL to connect to\n         * @return true if this transport can work for the given version and cross domain communication case,\n         * false otherwise\n         */\n        this.accept = function(version, crossDomain, url) {\n            throw 'Abstract';\n        };\n\n        /**\n         * Returns the type of this transport.\n         * @see #registered(type, cometd)\n         */\n        this.getType = function() {\n            return _type;\n        };\n\n        this.getURL = function() {\n            return _url;\n        };\n\n        this.setURL = function(url) {\n            _url = url;\n        };\n\n        this.send = function(envelope, metaConnect) {\n            throw 'Abstract';\n        };\n\n        this.reset = function(init) {\n            this._debug('Transport', _type, 'reset', init ? 'initial' : 'retry');\n        };\n\n        this.abort = function() {\n            this._debug('Transport', _type, 'aborted');\n        };\n\n        this.toString = function() {\n            return this.getType();\n        };\n    };\n\n    Transport.derive = function(baseObject) {\n        function F() {\n        }\n\n        F.prototype = baseObject;\n        return new F();\n    };\n\n\n    /**\n     * Base object with the common functionality for transports based on requests.\n     * The key responsibility is to allow at most 2 outstanding requests to the server,\n     * to avoid that requests are sent behind a long poll.\n     * To achieve this, we have one reserved request for the long poll, and all other\n     * requests are serialized one after the other.\n     */\n    var RequestTransport = function() {\n        var _super = new Transport();\n        var _self = Transport.derive(_super);\n        var _requestIds = 0;\n        var _metaConnectRequest = null;\n        var _requests = [];\n        var _envelopes = [];\n\n        function _coalesceEnvelopes(envelope) {\n            while (_envelopes.length > 0) {\n                var envelopeAndRequest = _envelopes[0];\n                var newEnvelope = envelopeAndRequest[0];\n                var newRequest = envelopeAndRequest[1];\n                if (newEnvelope.url === envelope.url &&\n                    newEnvelope.sync === envelope.sync) {\n                    _envelopes.shift();\n                    envelope.messages = envelope.messages.concat(newEnvelope.messages);\n                    this._debug('Coalesced', newEnvelope.messages.length, 'messages from request', newRequest.id);\n                    continue;\n                }\n                break;\n            }\n        }\n\n        function _transportSend(envelope, request) {\n            this.transportSend(envelope, request);\n            request.expired = false;\n\n            if (!envelope.sync) {\n                var maxDelay = this.getConfiguration().maxNetworkDelay;\n                var delay = maxDelay;\n                if (request.metaConnect === true) {\n                    delay += this.getAdvice().timeout;\n                }\n\n                this._debug('Transport', this.getType(), 'waiting at most', delay, 'ms for the response, maxNetworkDelay', maxDelay);\n\n                var self = this;\n                request.timeout = this.setTimeout(function() {\n                    request.expired = true;\n                    var errorMessage = 'Request ' + request.id + ' of transport ' + self.getType() + ' exceeded ' + delay + ' ms max network delay';\n                    var failure = {\n                        reason: errorMessage\n                    };\n                    var xhr = request.xhr;\n                    failure.httpCode = self.xhrStatus(xhr);\n                    self.abortXHR(xhr);\n                    self._debug(errorMessage);\n                    self.complete(request, false, request.metaConnect);\n                    envelope.onFailure(xhr, envelope.messages, failure);\n                }, delay);\n            }\n        }\n\n        function _queueSend(envelope) {\n            var requestId = ++_requestIds;\n            var request = {\n                id: requestId,\n                metaConnect: false,\n                envelope: envelope\n            };\n\n            // Consider the /meta/connect requests which should always be present.\n            if (_requests.length < this.getConfiguration().maxConnections - 1) {\n                _requests.push(request);\n                _transportSend.call(this, envelope, request);\n            } else {\n                this._debug('Transport', this.getType(), 'queueing request', requestId, 'envelope', envelope);\n                _envelopes.push([envelope, request]);\n            }\n        }\n\n        function _metaConnectComplete(request) {\n            var requestId = request.id;\n            this._debug('Transport', this.getType(), '/meta/connect complete, request', requestId);\n            if (_metaConnectRequest !== null && _metaConnectRequest.id !== requestId) {\n                throw '/meta/connect request mismatch, completing request ' + requestId;\n            }\n            _metaConnectRequest = null;\n        }\n\n        function _complete(request, success) {\n            var index = Utils.inArray(request, _requests);\n            // The index can be negative if the request has been aborted\n            if (index >= 0) {\n                _requests.splice(index, 1);\n            }\n\n            if (_envelopes.length > 0) {\n                var envelopeAndRequest = _envelopes.shift();\n                var nextEnvelope = envelopeAndRequest[0];\n                var nextRequest = envelopeAndRequest[1];\n                this._debug('Transport dequeued request', nextRequest.id);\n                if (success) {\n                    if (this.getConfiguration().autoBatch) {\n                        _coalesceEnvelopes.call(this, nextEnvelope);\n                    }\n                    _queueSend.call(this, nextEnvelope);\n                    this._debug('Transport completed request', request.id, nextEnvelope);\n                } else {\n                    // Keep the semantic of calling response callbacks asynchronously after the request\n                    var self = this;\n                    this.setTimeout(function() {\n                        self.complete(nextRequest, false, nextRequest.metaConnect);\n                        var failure = {\n                            reason: 'Previous request failed'\n                        };\n                        var xhr = nextRequest.xhr;\n                        failure.httpCode = self.xhrStatus(xhr);\n                        nextEnvelope.onFailure(xhr, nextEnvelope.messages, failure);\n                    }, 0);\n                }\n            }\n        }\n\n        _self.complete = function(request, success, metaConnect) {\n            if (metaConnect) {\n                _metaConnectComplete.call(this, request);\n            } else {\n                _complete.call(this, request, success);\n            }\n        };\n\n        /**\n         * Performs the actual send depending on the transport type details.\n         * @param envelope the envelope to send\n         * @param request the request information\n         */\n        _self.transportSend = function(envelope, request) {\n            throw 'Abstract';\n        };\n\n        _self.transportSuccess = function(envelope, request, responses) {\n            if (!request.expired) {\n                this.clearTimeout(request.timeout);\n                this.complete(request, true, request.metaConnect);\n                if (responses && responses.length > 0) {\n                    envelope.onSuccess(responses);\n                } else {\n                    envelope.onFailure(request.xhr, envelope.messages, {\n                        httpCode: 204\n                    });\n                }\n            }\n        };\n\n        _self.transportFailure = function(envelope, request, failure) {\n            if (!request.expired) {\n                this.clearTimeout(request.timeout);\n                this.complete(request, false, request.metaConnect);\n                envelope.onFailure(request.xhr, envelope.messages, failure);\n            }\n        };\n\n        function _metaConnectSend(envelope) {\n            if (_metaConnectRequest !== null) {\n                throw 'Concurrent /meta/connect requests not allowed, request id=' + _metaConnectRequest.id + ' not yet completed';\n            }\n\n            var requestId = ++_requestIds;\n            this._debug('Transport', this.getType(), '/meta/connect send, request', requestId, 'envelope', envelope);\n            var request = {\n                id: requestId,\n                metaConnect: true,\n                envelope: envelope\n            };\n            _transportSend.call(this, envelope, request);\n            _metaConnectRequest = request;\n        }\n\n        _self.send = function(envelope, metaConnect) {\n            if (metaConnect) {\n                _metaConnectSend.call(this, envelope);\n            } else {\n                _queueSend.call(this, envelope);\n            }\n        };\n\n        _self.abort = function() {\n            _super.abort();\n            for (var i = 0; i < _requests.length; ++i) {\n                var request = _requests[i];\n                if (request) {\n                    this._debug('Aborting request', request);\n                    if (!this.abortXHR(request.xhr)) {\n                        this.transportFailure(request.envelope, request, {reason: 'abort'});\n                    }\n                }\n            }\n            var metaConnectRequest = _metaConnectRequest;\n            if (metaConnectRequest) {\n                this._debug('Aborting /meta/connect request', metaConnectRequest);\n                if (!this.abortXHR(metaConnectRequest.xhr)) {\n                    this.transportFailure(metaConnectRequest.envelope, metaConnectRequest, {reason: 'abort'});\n                }\n            }\n            this.reset(true);\n        };\n\n        _self.reset = function(init) {\n            _super.reset(init);\n            _metaConnectRequest = null;\n            _requests = [];\n            _envelopes = [];\n        };\n\n        _self.abortXHR = function(xhr) {\n            if (xhr) {\n                try {\n                    var state = xhr.readyState;\n                    xhr.abort();\n                    return state !== window.XMLHttpRequest.UNSENT;\n                } catch (x) {\n                    this._debug(x);\n                }\n            }\n            return false;\n        };\n\n        _self.xhrStatus = function(xhr) {\n            if (xhr) {\n                try {\n                    return xhr.status;\n                } catch (x) {\n                    this._debug(x);\n                }\n            }\n            return -1;\n        };\n\n        return _self;\n    };\n\n\n    var LongPollingTransport = function() {\n        var _super = new RequestTransport();\n        var _self = Transport.derive(_super);\n        // By default, support cross domain\n        var _supportsCrossDomain = true;\n\n        _self.accept = function(version, crossDomain, url) {\n            return _supportsCrossDomain || !crossDomain;\n        };\n\n        _self.newXMLHttpRequest = function() {\n            return new window.XMLHttpRequest();\n        };\n\n        function _copyContext(xhr) {\n            try {\n                // Copy external context, to be used in other environments.\n                xhr.context = _self.context;\n            } catch (e) {\n                // May happen if XHR is wrapped by Object.seal(),\n                // Object.freeze(), or Object.preventExtensions().\n                this._debug('Could not copy transport context into XHR', e);\n            }\n        }\n\n        _self.xhrSend = function(packet) {\n            var xhr = _self.newXMLHttpRequest();\n            _copyContext(xhr);\n            xhr.withCredentials = true;\n            xhr.open('POST', packet.url, packet.sync !== true);\n            var headers = packet.headers;\n            if (headers) {\n                for (var headerName in headers) {\n                    if (headers.hasOwnProperty(headerName)) {\n                        xhr.setRequestHeader(headerName, headers[headerName]);\n                    }\n                }\n            }\n            xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n            xhr.onload = function() {\n                if (xhr.status === 200) {\n                    packet.onSuccess(xhr.responseText);\n                } else {\n                    packet.onError(xhr.statusText);\n                }\n            };\n            xhr.onabort = xhr.onerror = function() {\n                packet.onError(xhr.statusText);\n            };\n            xhr.send(packet.body);\n            return xhr;\n        };\n\n        _self.transportSend = function(envelope, request) {\n            this._debug('Transport', this.getType(), 'sending request', request.id, 'envelope', envelope);\n\n            var self = this;\n            try {\n                var sameStack = true;\n                request.xhr = this.xhrSend({\n                    transport: this,\n                    url: envelope.url,\n                    sync: envelope.sync,\n                    headers: this.getConfiguration().requestHeaders,\n                    body: JSON.stringify(envelope.messages),\n                    onSuccess: function(response) {\n                        self._debug('Transport', self.getType(), 'received response', response);\n                        var success = false;\n                        try {\n                            var received = self.convertToMessages(response);\n                            if (received.length === 0) {\n                                _supportsCrossDomain = false;\n                                self.transportFailure(envelope, request, {\n                                    httpCode: 204\n                                });\n                            } else {\n                                success = true;\n                                self.transportSuccess(envelope, request, received);\n                            }\n                        } catch (x) {\n                            self._debug(x);\n                            if (!success) {\n                                _supportsCrossDomain = false;\n                                var failure = {\n                                    exception: x\n                                };\n                                failure.httpCode = self.xhrStatus(request.xhr);\n                                self.transportFailure(envelope, request, failure);\n                            }\n                        }\n                    },\n                    onError: function(reason, exception) {\n                        self._debug('Transport', self.getType(), 'received error', reason, exception);\n                        _supportsCrossDomain = false;\n                        var failure = {\n                            reason: reason,\n                            exception: exception\n                        };\n                        failure.httpCode = self.xhrStatus(request.xhr);\n                        if (sameStack) {\n                            // Keep the semantic of calling response callbacks asynchronously after the request\n                            self.setTimeout(function() {\n                                self.transportFailure(envelope, request, failure);\n                            }, 0);\n                        } else {\n                            self.transportFailure(envelope, request, failure);\n                        }\n                    }\n                });\n                sameStack = false;\n            } catch (x) {\n                _supportsCrossDomain = false;\n                // Keep the semantic of calling response callbacks asynchronously after the request\n                this.setTimeout(function() {\n                    self.transportFailure(envelope, request, {\n                        exception: x\n                    });\n                }, 0);\n            }\n        };\n\n        _self.reset = function(init) {\n            _super.reset(init);\n            _supportsCrossDomain = true;\n        };\n\n        return _self;\n    };\n\n\n    var CallbackPollingTransport = function() {\n        var _super = new RequestTransport();\n        var _self = Transport.derive(_super);\n        var jsonp = 0;\n\n        _self.accept = function(version, crossDomain, url) {\n            return true;\n        };\n\n        _self.jsonpSend = function(packet) {\n            var head = document.getElementsByTagName('head')[0];\n            var script = document.createElement('script');\n\n            var callbackName = '_cometd_jsonp_' + jsonp++;\n            window[callbackName] = function(responseText) {\n                head.removeChild(script);\n                delete window[callbackName];\n                packet.onSuccess(responseText);\n            };\n\n            var url = packet.url;\n            url += url.indexOf('?') < 0 ? '?' : '&';\n            url += 'jsonp=' + callbackName;\n            url += '&message=' + encodeURIComponent(packet.body);\n            script.src = url;\n            script.async = packet.sync !== true;\n            script.type = 'application/javascript';\n            script.onerror = function(e) {\n                packet.onError('jsonp ' + e.type);\n            };\n            head.appendChild(script);\n        };\n\n        function _failTransportFn(envelope, request, x) {\n            var self = this;\n            return function() {\n                self.transportFailure(envelope, request, 'error', x);\n            };\n        }\n\n        _self.transportSend = function(envelope, request) {\n            var self = this;\n\n            // Microsoft Internet Explorer has a 2083 URL max length\n            // We must ensure that we stay within that length\n            var start = 0;\n            var length = envelope.messages.length;\n            var lengths = [];\n            while (length > 0) {\n                // Encode the messages because all brackets, quotes, commas, colons, etc\n                // present in the JSON will be URL encoded, taking many more characters\n                var json = JSON.stringify(envelope.messages.slice(start, start + length));\n                var urlLength = envelope.url.length + encodeURI(json).length;\n\n                var maxLength = this.getConfiguration().maxURILength;\n                if (urlLength > maxLength) {\n                    if (length === 1) {\n                        var x = 'Bayeux message too big (' + urlLength + ' bytes, max is ' + maxLength + ') ' +\n                            'for transport ' + this.getType();\n                        // Keep the semantic of calling response callbacks asynchronously after the request\n                        this.setTimeout(_failTransportFn.call(this, envelope, request, x), 0);\n                        return;\n                    }\n\n                    --length;\n                    continue;\n                }\n\n                lengths.push(length);\n                start += length;\n                length = envelope.messages.length - start;\n            }\n\n            // Here we are sure that the messages can be sent within the URL limit\n\n            var envelopeToSend = envelope;\n            if (lengths.length > 1) {\n                var begin = 0;\n                var end = lengths[0];\n                this._debug('Transport', this.getType(), 'split', envelope.messages.length, 'messages into', lengths.join(' + '));\n                envelopeToSend = this._mixin(false, {}, envelope);\n                envelopeToSend.messages = envelope.messages.slice(begin, end);\n                envelopeToSend.onSuccess = envelope.onSuccess;\n                envelopeToSend.onFailure = envelope.onFailure;\n\n                for (var i = 1; i < lengths.length; ++i) {\n                    var nextEnvelope = this._mixin(false, {}, envelope);\n                    begin = end;\n                    end += lengths[i];\n                    nextEnvelope.messages = envelope.messages.slice(begin, end);\n                    nextEnvelope.onSuccess = envelope.onSuccess;\n                    nextEnvelope.onFailure = envelope.onFailure;\n                    this.send(nextEnvelope, request.metaConnect);\n                }\n            }\n\n            this._debug('Transport', this.getType(), 'sending request', request.id, 'envelope', envelopeToSend);\n\n            try {\n                var sameStack = true;\n                this.jsonpSend({\n                    transport: this,\n                    url: envelopeToSend.url,\n                    sync: envelopeToSend.sync,\n                    headers: this.getConfiguration().requestHeaders,\n                    body: JSON.stringify(envelopeToSend.messages),\n                    onSuccess: function(responses) {\n                        var success = false;\n                        try {\n                            var received = self.convertToMessages(responses);\n                            if (received.length === 0) {\n                                self.transportFailure(envelopeToSend, request, {\n                                    httpCode: 204\n                                });\n                            } else {\n                                success = true;\n                                self.transportSuccess(envelopeToSend, request, received);\n                            }\n                        } catch (x) {\n                            self._debug(x);\n                            if (!success) {\n                                self.transportFailure(envelopeToSend, request, {\n                                    exception: x\n                                });\n                            }\n                        }\n                    },\n                    onError: function(reason, exception) {\n                        var failure = {\n                            reason: reason,\n                            exception: exception\n                        };\n                        if (sameStack) {\n                            // Keep the semantic of calling response callbacks asynchronously after the request\n                            self.setTimeout(function() {\n                                self.transportFailure(envelopeToSend, request, failure);\n                            }, 0);\n                        } else {\n                            self.transportFailure(envelopeToSend, request, failure);\n                        }\n                    }\n                });\n                sameStack = false;\n            } catch (xx) {\n                // Keep the semantic of calling response callbacks asynchronously after the request\n                this.setTimeout(function() {\n                    self.transportFailure(envelopeToSend, request, {\n                        exception: xx\n                    });\n                }, 0);\n            }\n        };\n\n        return _self;\n    };\n\n\n    var WebSocketTransport = function() {\n        var _super = new Transport();\n        var _self = Transport.derive(_super);\n        var _cometd;\n        // By default WebSocket is supported\n        var _webSocketSupported = true;\n        // Whether we were able to establish a WebSocket connection\n        var _webSocketConnected = false;\n        var _stickyReconnect = true;\n        // The context contains the envelopes that have been sent\n        // and the timeouts for the messages that have been sent.\n        var _context = null;\n        var _connecting = null;\n        var _connected = false;\n        var _successCallback = null;\n\n        _self.reset = function(init) {\n            _super.reset(init);\n            _webSocketSupported = true;\n            if (init) {\n                _webSocketConnected = false;\n            }\n            _stickyReconnect = true;\n            _context = null;\n            _connecting = null;\n            _connected = false;\n        };\n\n        function _forceClose(context, event) {\n            if (context) {\n                this.webSocketClose(context, event.code, event.reason);\n                // Force immediate failure of pending messages to trigger reconnect.\n                // This is needed because the server may not reply to our close()\n                // and therefore the onclose function is never called.\n                this.onClose(context, event);\n            }\n        }\n\n        function _sameContext(context) {\n            return context === _connecting || context === _context;\n        }\n\n        function _storeEnvelope(context, envelope, metaConnect) {\n            var messageIds = [];\n            for (var i = 0; i < envelope.messages.length; ++i) {\n                var message = envelope.messages[i];\n                if (message.id) {\n                    messageIds.push(message.id);\n                }\n            }\n            context.envelopes[messageIds.join(',')] = [envelope, metaConnect];\n            this._debug('Transport', this.getType(), 'stored envelope, envelopes', context.envelopes);\n        }\n\n        function _websocketConnect(context) {\n            // We may have multiple attempts to open a WebSocket\n            // connection, for example a /meta/connect request that\n            // may take time, along with a user-triggered publish.\n            // Early return if we are already connecting.\n            if (_connecting) {\n                return;\n            }\n\n            // Mangle the URL, changing the scheme from 'http' to 'ws'.\n            var url = _cometd.getURL().replace(/^http/, 'ws');\n            this._debug('Transport', this.getType(), 'connecting to URL', url);\n\n            try {\n                var protocol = _cometd.getConfiguration().protocol;\n                context.webSocket = protocol ? new window.WebSocket(url, protocol) : new window.WebSocket(url);\n                _connecting = context;\n            } catch (x) {\n                _webSocketSupported = false;\n                this._debug('Exception while creating WebSocket object', x);\n                throw x;\n            }\n\n            // By default use sticky reconnects.\n            _stickyReconnect = _cometd.getConfiguration().stickyReconnect !== false;\n\n            var self = this;\n            var connectTimeout = _cometd.getConfiguration().connectTimeout;\n            if (connectTimeout > 0) {\n                context.connectTimer = this.setTimeout(function() {\n                    _cometd._debug('Transport', self.getType(), 'timed out while connecting to URL', url, ':', connectTimeout, 'ms');\n                    // The connection was not opened, close anyway.\n                    _forceClose.call(self, context, {code: 1000, reason: 'Connect Timeout'});\n                }, connectTimeout);\n            }\n\n            var onopen = function() {\n                _cometd._debug('WebSocket onopen', context);\n                if (context.connectTimer) {\n                    self.clearTimeout(context.connectTimer);\n                }\n\n                if (_sameContext(context)) {\n                    _connecting = null;\n                    _context = context;\n                    _webSocketConnected = true;\n                    self.onOpen(context);\n                } else {\n                    // We have a valid connection already, close this one.\n                    _cometd._warn('Closing extra WebSocket connection', this, 'active connection', _context);\n                    _forceClose.call(self, context, {code: 1000, reason: 'Extra Connection'});\n                }\n            };\n\n            // This callback is invoked when the server sends the close frame.\n            // The close frame for a connection may arrive *after* another\n            // connection has been opened, so we must make sure that actions\n            // are performed only if it's the same connection.\n            var onclose = function(event) {\n                event = event || {code: 1000};\n                _cometd._debug('WebSocket onclose', context, event, 'connecting', _connecting, 'current', _context);\n\n                if (context.connectTimer) {\n                    self.clearTimeout(context.connectTimer);\n                }\n\n                self.onClose(context, event);\n            };\n\n            var onmessage = function(wsMessage) {\n                _cometd._debug('WebSocket onmessage', wsMessage, context);\n                self.onMessage(context, wsMessage);\n            };\n\n            context.webSocket.onopen = onopen;\n            context.webSocket.onclose = onclose;\n            context.webSocket.onerror = function() {\n                // Clients should call onclose(), but if they do not we do it here for safety.\n                onclose({code: 1000, reason: 'Error'});\n            };\n            context.webSocket.onmessage = onmessage;\n\n            this._debug('Transport', this.getType(), 'configured callbacks on', context);\n        }\n\n        function _webSocketSend(context, envelope, metaConnect) {\n            var json = JSON.stringify(envelope.messages);\n            context.webSocket.send(json);\n            this._debug('Transport', this.getType(), 'sent', envelope, '/meta/connect =', metaConnect);\n\n            // Manage the timeout waiting for the response.\n            var maxDelay = this.getConfiguration().maxNetworkDelay;\n            var delay = maxDelay;\n            if (metaConnect) {\n                delay += this.getAdvice().timeout;\n                _connected = true;\n            }\n\n            var self = this;\n            var messageIds = [];\n            for (var i = 0; i < envelope.messages.length; ++i) {\n                (function() {\n                    var message = envelope.messages[i];\n                    if (message.id) {\n                        messageIds.push(message.id);\n                        context.timeouts[message.id] = self.setTimeout(function() {\n                            _cometd._debug('Transport', self.getType(), 'timing out message', message.id, 'after', delay, 'on', context);\n                            _forceClose.call(self, context, {code: 1000, reason: 'Message Timeout'});\n                        }, delay);\n                    }\n                })();\n            }\n\n            this._debug('Transport', this.getType(), 'waiting at most', delay, 'ms for messages', messageIds, 'maxNetworkDelay', maxDelay, ', timeouts:', context.timeouts);\n        }\n\n        _self._notifySuccess = function(fn, messages) {\n            fn.call(this, messages);\n        };\n\n        _self._notifyFailure = function(fn, context, messages, failure) {\n            fn.call(this, context, messages, failure);\n        };\n\n        function _send(context, envelope, metaConnect) {\n            try {\n                if (context === null) {\n                    context = _connecting || {\n                        envelopes: {},\n                        timeouts: {}\n                    };\n                    _storeEnvelope.call(this, context, envelope, metaConnect);\n                    _websocketConnect.call(this, context);\n                } else {\n                    _storeEnvelope.call(this, context, envelope, metaConnect);\n                    _webSocketSend.call(this, context, envelope, metaConnect);\n                }\n            } catch (x) {\n                // Keep the semantic of calling response callbacks asynchronously after the request.\n                var self = this;\n                this.setTimeout(function() {\n                    _forceClose.call(self, context, {\n                        code: 1000,\n                        reason: 'Exception',\n                        exception: x\n                    });\n                }, 0);\n            }\n        }\n\n        _self.onOpen = function(context) {\n            var envelopes = context.envelopes;\n            this._debug('Transport', this.getType(), 'opened', context, 'pending messages', envelopes);\n            for (var key in envelopes) {\n                if (envelopes.hasOwnProperty(key)) {\n                    var element = envelopes[key];\n                    var envelope = element[0];\n                    var metaConnect = element[1];\n                    // Store the success callback, which is independent from the envelope,\n                    // so that it can be used to notify arrival of messages.\n                    _successCallback = envelope.onSuccess;\n                    _webSocketSend.call(this, context, envelope, metaConnect);\n                }\n            }\n        };\n\n        _self.onMessage = function(context, wsMessage) {\n            this._debug('Transport', this.getType(), 'received websocket message', wsMessage, context);\n\n            var close = false;\n            var messages = this.convertToMessages(wsMessage.data);\n            var messageIds = [];\n            for (var i = 0; i < messages.length; ++i) {\n                var message = messages[i];\n\n                // Detect if the message is a response to a request we made.\n                // If it's a meta message, for sure it's a response; otherwise it's\n                // a publish message and publish responses don't have the data field.\n                if (/^\\/meta\\//.test(message.channel) || message.data === undefined) {\n                    if (message.id) {\n                        messageIds.push(message.id);\n\n                        var timeout = context.timeouts[message.id];\n                        if (timeout) {\n                            this.clearTimeout(timeout);\n                            delete context.timeouts[message.id];\n                            this._debug('Transport', this.getType(), 'removed timeout for message', message.id, ', timeouts', context.timeouts);\n                        }\n                    }\n                }\n\n                if ('/meta/connect' === message.channel) {\n                    _connected = false;\n                }\n                if ('/meta/disconnect' === message.channel && !_connected) {\n                    close = true;\n                }\n            }\n\n            // Remove the envelope corresponding to the messages.\n            var removed = false;\n            var envelopes = context.envelopes;\n            for (var j = 0; j < messageIds.length; ++j) {\n                var id = messageIds[j];\n                for (var key in envelopes) {\n                    if (envelopes.hasOwnProperty(key)) {\n                        var ids = key.split(',');\n                        var index = Utils.inArray(id, ids);\n                        if (index >= 0) {\n                            removed = true;\n                            ids.splice(index, 1);\n                            var envelope = envelopes[key][0];\n                            var metaConnect = envelopes[key][1];\n                            delete envelopes[key];\n                            if (ids.length > 0) {\n                                envelopes[ids.join(',')] = [envelope, metaConnect];\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            if (removed) {\n                this._debug('Transport', this.getType(), 'removed envelope, envelopes', envelopes);\n            }\n\n            this._notifySuccess(_successCallback, messages);\n\n            if (close) {\n                this.webSocketClose(context, 1000, 'Disconnect');\n            }\n        };\n\n        _self.onClose = function(context, event) {\n            this._debug('Transport', this.getType(), 'closed', context, event);\n\n            if (_sameContext(context)) {\n                // Remember if we were able to connect.\n                // This close event could be due to server shutdown,\n                // and if it restarts we want to try websocket again.\n                _webSocketSupported = _stickyReconnect && _webSocketConnected;\n                _connecting = null;\n                _context = null;\n            }\n\n            var timeouts = context.timeouts;\n            context.timeouts = {};\n            for (var id in timeouts) {\n                if (timeouts.hasOwnProperty(id)) {\n                    this.clearTimeout(timeouts[id]);\n                }\n            }\n\n            var envelopes = context.envelopes;\n            context.envelopes = {};\n            for (var key in envelopes) {\n                if (envelopes.hasOwnProperty(key)) {\n                    var envelope = envelopes[key][0];\n                    var metaConnect = envelopes[key][1];\n                    if (metaConnect) {\n                        _connected = false;\n                    }\n                    var failure = {\n                        websocketCode: event.code,\n                        reason: event.reason\n                    };\n                    if (event.exception) {\n                        failure.exception = event.exception;\n                    }\n                    this._notifyFailure(envelope.onFailure, context, envelope.messages, failure);\n                }\n            }\n        };\n\n        _self.registered = function(type, cometd) {\n            _super.registered(type, cometd);\n            _cometd = cometd;\n        };\n\n        _self.accept = function(version, crossDomain, url) {\n            this._debug('Transport', this.getType(), 'accept, supported:', _webSocketSupported);\n            // Using !! to return a boolean (and not the WebSocket object).\n            return _webSocketSupported && !!window.WebSocket && _cometd.websocketEnabled !== false;\n        };\n\n        _self.send = function(envelope, metaConnect) {\n            this._debug('Transport', this.getType(), 'sending', envelope, '/meta/connect =', metaConnect);\n            _send.call(this, _context, envelope, metaConnect);\n        };\n\n        _self.webSocketClose = function(context, code, reason) {\n            try {\n                if (context.webSocket) {\n                    context.webSocket.close(code, reason);\n                }\n            } catch (x) {\n                this._debug(x);\n            }\n        };\n\n        _self.abort = function() {\n            _super.abort();\n            _forceClose.call(this, _context, {code: 1000, reason: 'Abort'});\n            this.reset(true);\n        };\n\n        return _self;\n    };\n\n\n    /**\n     * The constructor for a CometD object, identified by an optional name.\n     * The default name is the string 'default'.\n     * @param name the optional name of this cometd object\n     */\n    var CometD = function(name) {\n        var _scheduler = new Scheduler();\n        var _cometd = this;\n        var _name = name || 'default';\n        var _crossDomain = false;\n        var _transports = new TransportRegistry();\n        var _transport;\n        var _status = 'disconnected';\n        var _messageId = 0;\n        var _clientId = null;\n        var _batch = 0;\n        var _messageQueue = [];\n        var _internalBatch = false;\n        var _listenerId = 0;\n        var _listeners = {};\n        var _backoff = 0;\n        var _scheduledSend = null;\n        var _extensions = [];\n        var _advice = {};\n        var _handshakeProps;\n        var _handshakeCallback;\n        var _callbacks = {};\n        var _remoteCalls = {};\n        var _reestablish = false;\n        var _connected = false;\n        var _unconnectTime = 0;\n        var _handshakeMessages = 0;\n        var _metaConnect = null;\n        var _config = {\n            useWorkerScheduler: true,\n            protocol: null,\n            stickyReconnect: true,\n            connectTimeout: 0,\n            maxConnections: 2,\n            backoffIncrement: 1000,\n            maxBackoff: 60000,\n            logLevel: 'info',\n            maxNetworkDelay: 10000,\n            requestHeaders: {},\n            appendMessageTypeToURL: true,\n            autoBatch: false,\n            urls: {},\n            maxURILength: 2000,\n            advice: {\n                timeout: 60000,\n                interval: 0,\n                reconnect: undefined,\n                maxInterval: 0\n            }\n        };\n\n        function _fieldValue(object, name) {\n            try {\n                return object[name];\n            } catch (x) {\n                return undefined;\n            }\n        }\n\n        /**\n         * Mixes in the given objects into the target object by copying the properties.\n         * @param deep if the copy must be deep\n         * @param target the target object\n         * @param objects the objects whose properties are copied into the target\n         */\n        this._mixin = function(deep, target, objects) {\n            var result = target || {};\n\n            // Skip first 2 parameters (deep and target), and loop over the others\n            for (var i = 2; i < arguments.length; ++i) {\n                var object = arguments[i];\n\n                if (object === undefined || object === null) {\n                    continue;\n                }\n\n                for (var propName in object) {\n                    if (object.hasOwnProperty(propName)) {\n                        var prop = _fieldValue(object, propName);\n                        var targ = _fieldValue(result, propName);\n\n                        // Avoid infinite loops\n                        if (prop === target) {\n                            continue;\n                        }\n                        // Do not mixin undefined values\n                        if (prop === undefined) {\n                            continue;\n                        }\n\n                        if (deep && typeof prop === 'object' && prop !== null) {\n                            if (prop instanceof Array) {\n                                result[propName] = this._mixin(deep, targ instanceof Array ? targ : [], prop);\n                            } else {\n                                var source = typeof targ === 'object' && !(targ instanceof Array) ? targ : {};\n                                result[propName] = this._mixin(deep, source, prop);\n                            }\n                        } else {\n                            result[propName] = prop;\n                        }\n                    }\n                }\n            }\n\n            return result;\n        };\n\n        function _isString(value) {\n            return Utils.isString(value);\n        }\n\n        function _isFunction(value) {\n            if (value === undefined || value === null) {\n                return false;\n            }\n            return typeof value === 'function';\n        }\n\n        function _zeroPad(value, length) {\n            var result = '';\n            while (--length > 0) {\n                if (value >= Math.pow(10, length)) {\n                    break;\n                }\n                result += '0';\n            }\n            result += value;\n            return result;\n        }\n\n        function _log(level, args) {\n            if (window.console) {\n                var logger = window.console[level];\n                if (_isFunction(logger)) {\n                    var now = new Date();\n                    [].splice.call(args, 0, 0, _zeroPad(now.getHours(), 2) + ':' + _zeroPad(now.getMinutes(), 2) + ':' +\n                        _zeroPad(now.getSeconds(), 2) + '.' + _zeroPad(now.getMilliseconds(), 3));\n                    logger.apply(window.console, args);\n                }\n            }\n        }\n\n        this._warn = function() {\n            _log('warn', arguments);\n        };\n\n        this._info = function() {\n            if (_config.logLevel !== 'warn') {\n                _log('info', arguments);\n            }\n        };\n\n        this._debug = function() {\n            if (_config.logLevel === 'debug') {\n                _log('debug', arguments);\n            }\n        };\n\n        function _splitURL(url) {\n            // [1] = protocol://,\n            // [2] = host:port,\n            // [3] = host,\n            // [4] = IPv6_host,\n            // [5] = IPv4_host,\n            // [6] = :port,\n            // [7] = port,\n            // [8] = uri,\n            // [9] = rest (query / fragment)\n            return new RegExp('(^https?://)?(((\\\\[[^\\\\]]+])|([^:/?#]+))(:(\\\\d+))?)?([^?#]*)(.*)?').exec(url);\n        }\n\n        /**\n         * Returns whether the given hostAndPort is cross domain.\n         * The default implementation checks against window.location.host\n         * but this function can be overridden to make it work in non-browser\n         * environments.\n         *\n         * @param hostAndPort the host and port in format host:port\n         * @return whether the given hostAndPort is cross domain\n         */\n        this._isCrossDomain = function(hostAndPort) {\n            if (window.location && window.location.host) {\n                if (hostAndPort) {\n                    return hostAndPort !== window.location.host;\n                }\n            }\n            return false;\n        };\n\n        function _configure(configuration) {\n            _cometd._debug('Configuring cometd object with', configuration);\n            // Support old style param, where only the Bayeux server URL was passed.\n            if (_isString(configuration)) {\n                configuration = {\n                    url: configuration\n                };\n            }\n            if (!configuration) {\n                configuration = {};\n            }\n\n            _config = _cometd._mixin(false, _config, configuration);\n\n            var url = _cometd.getURL();\n            if (!url) {\n                throw 'Missing required configuration parameter \\'url\\' specifying the Bayeux server URL';\n            }\n\n            // Check if we're cross domain.\n            var urlParts = _splitURL(url);\n            var hostAndPort = urlParts[2];\n            var uri = urlParts[8];\n            var afterURI = urlParts[9];\n            _crossDomain = _cometd._isCrossDomain(hostAndPort);\n\n            // Check if appending extra path is supported.\n            if (_config.appendMessageTypeToURL) {\n                if (afterURI !== undefined && afterURI.length > 0) {\n                    _cometd._info('Appending message type to URI ' + uri + afterURI + ' is not supported, disabling \\'appendMessageTypeToURL\\' configuration');\n                    _config.appendMessageTypeToURL = false;\n                } else {\n                    var uriSegments = uri.split('/');\n                    var lastSegmentIndex = uriSegments.length - 1;\n                    if (uri.match(/\\/$/)) {\n                        lastSegmentIndex -= 1;\n                    }\n                    if (uriSegments[lastSegmentIndex].indexOf('.') >= 0) {\n                        // Very likely the CometD servlet's URL pattern is mapped to an extension, such as *.cometd\n                        // It will be difficult to add the extra path in this case\n                        _cometd._info('Appending message type to URI ' + uri + ' is not supported, disabling \\'appendMessageTypeToURL\\' configuration');\n                        _config.appendMessageTypeToURL = false;\n                    }\n                }\n            }\n\n            if (window.Worker && window.Blob && window.URL && _config.useWorkerScheduler) {\n                var code = WorkerScheduler.toString();\n                // Remove the function declaration, the opening brace and the closing brace.\n                code = code.substring(code.indexOf('{') + 1, code.lastIndexOf('}'));\n                var blob = new window.Blob([code], {\n                    type: 'application/json'\n                });\n                var blobURL = window.URL.createObjectURL(blob);\n                var worker = new window.Worker(blobURL);\n                _scheduler.setTimeout = function(funktion, delay) {\n                    var id = _scheduler.register(funktion);\n                    worker.postMessage({\n                        id: id,\n                        type: 'setTimeout',\n                        delay: delay\n                    });\n                    return id;\n                };\n                _scheduler.clearTimeout = function(id) {\n                    _scheduler.unregister(id);\n                    worker.postMessage({\n                        id: id,\n                        type: 'clearTimeout'\n                    });\n                };\n                worker.onmessage = function(e) {\n                    var id = e.data.id;\n                    var funktion = _scheduler.unregister(id);\n                    if (funktion) {\n                        funktion();\n                    }\n                };\n            }\n        }\n\n        function _removeListener(subscription) {\n            if (subscription) {\n                var subscriptions = _listeners[subscription.channel];\n                if (subscriptions && subscriptions[subscription.id]) {\n                    delete subscriptions[subscription.id];\n                    _cometd._debug('Removed', subscription.listener ? 'listener' : 'subscription', subscription);\n                }\n            }\n        }\n\n        function _removeSubscription(subscription) {\n            if (subscription && !subscription.listener) {\n                _removeListener(subscription);\n            }\n        }\n\n        function _clearSubscriptions() {\n            for (var channel in _listeners) {\n                if (_listeners.hasOwnProperty(channel)) {\n                    var subscriptions = _listeners[channel];\n                    if (subscriptions) {\n                        for (var id in subscriptions) {\n                            if (subscriptions.hasOwnProperty(id)) {\n                                _removeSubscription(subscriptions[id]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        function _setStatus(newStatus) {\n            if (_status !== newStatus) {\n                _cometd._debug('Status', _status, '->', newStatus);\n                _status = newStatus;\n            }\n        }\n\n        function _isDisconnected() {\n            return _status === 'disconnecting' || _status === 'disconnected';\n        }\n\n        function _nextMessageId() {\n            var result = ++_messageId;\n            return '' + result;\n        }\n\n        function _applyExtension(scope, callback, name, message, outgoing) {\n            try {\n                return callback.call(scope, message);\n            } catch (x) {\n                var handler = _cometd.onExtensionException;\n                if (_isFunction(handler)) {\n                    _cometd._debug('Invoking extension exception handler', name, x);\n                    try {\n                        handler.call(_cometd, x, name, outgoing, message);\n                    } catch (xx) {\n                        _cometd._info('Exception during execution of extension exception handler', name, xx);\n                    }\n                } else {\n                    _cometd._info('Exception during execution of extension', name, x);\n                }\n                return message;\n            }\n        }\n\n        function _applyIncomingExtensions(message) {\n            for (var i = 0; i < _extensions.length; ++i) {\n                if (message === undefined || message === null) {\n                    break;\n                }\n\n                var extension = _extensions[i];\n                var callback = extension.extension.incoming;\n                if (_isFunction(callback)) {\n                    var result = _applyExtension(extension.extension, callback, extension.name, message, false);\n                    message = result === undefined ? message : result;\n                }\n            }\n            return message;\n        }\n\n        function _applyOutgoingExtensions(message) {\n            for (var i = _extensions.length - 1; i >= 0; --i) {\n                if (message === undefined || message === null) {\n                    break;\n                }\n\n                var extension = _extensions[i];\n                var callback = extension.extension.outgoing;\n                if (_isFunction(callback)) {\n                    var result = _applyExtension(extension.extension, callback, extension.name, message, true);\n                    message = result === undefined ? message : result;\n                }\n            }\n            return message;\n        }\n\n        function _notify(channel, message) {\n            var subscriptions = _listeners[channel];\n            if (subscriptions) {\n                for (var id in subscriptions) {\n                    if (subscriptions.hasOwnProperty(id)) {\n                        var subscription = subscriptions[id];\n                        // Subscriptions may come and go, so the array may have 'holes'\n                        if (subscription) {\n                            try {\n                                subscription.callback.call(subscription.scope, message);\n                            } catch (x) {\n                                var handler = _cometd.onListenerException;\n                                if (_isFunction(handler)) {\n                                    _cometd._debug('Invoking listener exception handler', subscription, x);\n                                    try {\n                                        handler.call(_cometd, x, subscription, subscription.listener, message);\n                                    } catch (xx) {\n                                        _cometd._info('Exception during execution of listener exception handler', subscription, xx);\n                                    }\n                                } else {\n                                    _cometd._info('Exception during execution of listener', subscription, message, x);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        function _notifyListeners(channel, message) {\n            // Notify direct listeners\n            _notify(channel, message);\n\n            // Notify the globbing listeners\n            var channelParts = channel.split('/');\n            var last = channelParts.length - 1;\n            for (var i = last; i > 0; --i) {\n                var channelPart = channelParts.slice(0, i).join('/') + '/*';\n                // We don't want to notify /foo/* if the channel is /foo/bar/baz,\n                // so we stop at the first non recursive globbing\n                if (i === last) {\n                    _notify(channelPart, message);\n                }\n                // Add the recursive globber and notify\n                channelPart += '*';\n                _notify(channelPart, message);\n            }\n        }\n\n        function _cancelDelayedSend() {\n            if (_scheduledSend !== null) {\n                _cometd.clearTimeout(_scheduledSend);\n            }\n            _scheduledSend = null;\n        }\n\n        function _delayedSend(operation, delay) {\n            _cancelDelayedSend();\n            var time = _advice.interval + delay;\n            _cometd._debug('Function scheduled in', time, 'ms, interval =', _advice.interval, 'backoff =', _backoff, operation);\n            _scheduledSend = _cometd.setTimeout(operation, time);\n        }\n\n        // Needed to break cyclic dependencies between function definitions\n        var _handleMessages;\n        var _handleFailure;\n\n        /**\n         * Delivers the messages to the CometD server\n         * @param sync whether the send is synchronous\n         * @param messages the array of messages to send\n         * @param metaConnect true if this send is on /meta/connect\n         * @param extraPath an extra path to append to the Bayeux server URL\n         */\n        function _send(sync, messages, metaConnect, extraPath) {\n            // We must be sure that the messages have a clientId.\n            // This is not guaranteed since the handshake may take time to return\n            // (and hence the clientId is not known yet) and the application\n            // may create other messages.\n            for (var i = 0; i < messages.length; ++i) {\n                var message = messages[i];\n                var messageId = message.id;\n\n                if (_clientId) {\n                    message.clientId = _clientId;\n                }\n\n                message = _applyOutgoingExtensions(message);\n                if (message !== undefined && message !== null) {\n                    // Extensions may have modified the message id, but we need to own it.\n                    message.id = messageId;\n                    messages[i] = message;\n                } else {\n                    delete _callbacks[messageId];\n                    messages.splice(i--, 1);\n                }\n            }\n\n            if (messages.length === 0) {\n                return;\n            }\n\n            if (metaConnect) {\n                _metaConnect = messages[0];\n            }\n\n            var url = _cometd.getURL();\n            if (_config.appendMessageTypeToURL) {\n                // If url does not end with '/', then append it\n                if (!url.match(/\\/$/)) {\n                    url = url + '/';\n                }\n                if (extraPath) {\n                    url = url + extraPath;\n                }\n            }\n\n            var envelope = {\n                url: url,\n                sync: sync,\n                messages: messages,\n                onSuccess: function(rcvdMessages) {\n                    try {\n                        _handleMessages.call(_cometd, rcvdMessages);\n                    } catch (x) {\n                        _cometd._info('Exception during handling of messages', x);\n                    }\n                },\n                onFailure: function(conduit, messages, failure) {\n                    try {\n                        var transport = _cometd.getTransport();\n                        failure.connectionType = transport ? transport.getType() : \"unknown\";\n                        _handleFailure.call(_cometd, conduit, messages, failure);\n                    } catch (x) {\n                        _cometd._info('Exception during handling of failure', x);\n                    }\n                }\n            };\n            _cometd._debug('Send', envelope);\n            _transport.send(envelope, metaConnect);\n        }\n\n        function _queueSend(message) {\n            if (_batch > 0 || _internalBatch === true) {\n                _messageQueue.push(message);\n            } else {\n                _send(false, [message], false);\n            }\n        }\n\n        /**\n         * Sends a complete bayeux message.\n         * This method is exposed as a public so that extensions may use it\n         * to send bayeux message directly, for example in case of re-sending\n         * messages that have already been sent but that for some reason must\n         * be resent.\n         */\n        this.send = _queueSend;\n\n        function _resetBackoff() {\n            _backoff = 0;\n        }\n\n        function _increaseBackoff() {\n            if (_backoff < _config.maxBackoff) {\n                _backoff += _config.backoffIncrement;\n            }\n            return _backoff;\n        }\n\n        /**\n         * Starts a the batch of messages to be sent in a single request.\n         * @see #_endBatch(sendMessages)\n         */\n        function _startBatch() {\n            ++_batch;\n            _cometd._debug('Starting batch, depth', _batch);\n        }\n\n        function _flushBatch() {\n            var messages = _messageQueue;\n            _messageQueue = [];\n            if (messages.length > 0) {\n                _send(false, messages, false);\n            }\n        }\n\n        /**\n         * Ends the batch of messages to be sent in a single request,\n         * optionally sending messages present in the message queue depending\n         * on the given argument.\n         * @see #_startBatch()\n         */\n        function _endBatch() {\n            --_batch;\n            _cometd._debug('Ending batch, depth', _batch);\n            if (_batch < 0) {\n                throw 'Calls to startBatch() and endBatch() are not paired';\n            }\n\n            if (_batch === 0 && !_isDisconnected() && !_internalBatch) {\n                _flushBatch();\n            }\n        }\n\n        /**\n         * Sends the connect message\n         */\n        function _connect() {\n            if (!_isDisconnected()) {\n                var bayeuxMessage = {\n                    id: _nextMessageId(),\n                    channel: '/meta/connect',\n                    connectionType: _transport.getType()\n                };\n\n                // In case of reload or temporary loss of connection\n                // we want the next successful connect to return immediately\n                // instead of being held by the server, so that connect listeners\n                // can be notified that the connection has been re-established\n                if (!_connected) {\n                    bayeuxMessage.advice = {\n                        timeout: 0\n                    };\n                }\n\n                _setStatus('connecting');\n                _cometd._debug('Connect sent', bayeuxMessage);\n                _send(false, [bayeuxMessage], true, 'connect');\n                _setStatus('connected');\n            }\n        }\n\n        function _delayedConnect(delay) {\n            _setStatus('connecting');\n            _delayedSend(function() {\n                _connect();\n            }, delay);\n        }\n\n        function _updateAdvice(newAdvice) {\n            if (newAdvice) {\n                _advice = _cometd._mixin(false, {}, _config.advice, newAdvice);\n                _cometd._debug('New advice', _advice);\n            }\n        }\n\n        function _disconnect(abort) {\n            _cancelDelayedSend();\n            if (abort && _transport) {\n                _transport.abort();\n            }\n            _crossDomain = false;\n            _transport = null;\n            _setStatus('disconnected');\n            _clientId = null;\n            _batch = 0;\n            _resetBackoff();\n            _reestablish = false;\n            _connected = false;\n            _unconnectTime = 0;\n            _metaConnect = null;\n\n            // Fail any existing queued message\n            if (_messageQueue.length > 0) {\n                var messages = _messageQueue;\n                _messageQueue = [];\n                _handleFailure.call(_cometd, undefined, messages, {\n                    reason: 'Disconnected'\n                });\n            }\n        }\n\n        function _notifyTransportException(oldTransport, newTransport, failure) {\n            var handler = _cometd.onTransportException;\n            if (_isFunction(handler)) {\n                _cometd._debug('Invoking transport exception handler', oldTransport, newTransport, failure);\n                try {\n                    handler.call(_cometd, failure, oldTransport, newTransport);\n                } catch (x) {\n                    _cometd._info('Exception during execution of transport exception handler', x);\n                }\n            }\n        }\n\n        /**\n         * Sends the initial handshake message\n         */\n        function _handshake(handshakeProps, handshakeCallback) {\n            if (_isFunction(handshakeProps)) {\n                handshakeCallback = handshakeProps;\n                handshakeProps = undefined;\n            }\n\n            _clientId = null;\n\n            _clearSubscriptions();\n\n            // Reset the transports if we're not retrying the handshake\n            if (_isDisconnected()) {\n                _transports.reset(true);\n            }\n\n            // Reset the advice.\n            _updateAdvice({});\n\n            _batch = 0;\n\n            // Mark the start of an internal batch.\n            // This is needed because handshake and connect are async.\n            // It may happen that the application calls init() then subscribe()\n            // and the subscribe message is sent before the connect message, if\n            // the subscribe message is not held until the connect message is sent.\n            // So here we start a batch to hold temporarily any message until\n            // the connection is fully established.\n            _internalBatch = true;\n\n            // Save the properties provided by the user, so that\n            // we can reuse them during automatic re-handshake\n            _handshakeProps = handshakeProps;\n            _handshakeCallback = handshakeCallback;\n\n            var version = '1.0';\n\n            // Figure out the transports to send to the server\n            var url = _cometd.getURL();\n            var transportTypes = _transports.findTransportTypes(version, _crossDomain, url);\n\n            var bayeuxMessage = {\n                id: _nextMessageId(),\n                version: version,\n                minimumVersion: version,\n                channel: '/meta/handshake',\n                supportedConnectionTypes: transportTypes,\n                advice: {\n                    timeout: _advice.timeout,\n                    interval: _advice.interval\n                }\n            };\n            // Do not allow the user to override important fields.\n            var message = _cometd._mixin(false, {}, _handshakeProps, bayeuxMessage);\n\n            // Save the callback.\n            _cometd._putCallback(message.id, handshakeCallback);\n\n            // Pick up the first available transport as initial transport\n            // since we don't know if the server supports it\n            if (!_transport) {\n                _transport = _transports.negotiateTransport(transportTypes, version, _crossDomain, url);\n                if (!_transport) {\n                    var failure = 'Could not find initial transport among: ' + _transports.getTransportTypes();\n                    _cometd._warn(failure);\n                    throw failure;\n                }\n            }\n\n            _cometd._debug('Initial transport is', _transport.getType());\n\n            // We started a batch to hold the application messages,\n            // so here we must bypass it and send immediately.\n            _setStatus('handshaking');\n            _cometd._debug('Handshake sent', message);\n            _send(false, [message], false, 'handshake');\n        }\n\n        function _delayedHandshake(delay) {\n            _setStatus('handshaking');\n\n            // We will call _handshake() which will reset _clientId, but we want to avoid\n            // that between the end of this method and the call to _handshake() someone may\n            // call publish() (or other methods that call _queueSend()).\n            _internalBatch = true;\n\n            _delayedSend(function() {\n                _handshake(_handshakeProps, _handshakeCallback);\n            }, delay);\n        }\n\n        function _notifyCallback(callback, message) {\n            try {\n                callback.call(_cometd, message);\n            } catch (x) {\n                var handler = _cometd.onCallbackException;\n                if (_isFunction(handler)) {\n                    _cometd._debug('Invoking callback exception handler', x);\n                    try {\n                        handler.call(_cometd, x, message);\n                    } catch (xx) {\n                        _cometd._info('Exception during execution of callback exception handler', xx);\n                    }\n                } else {\n                    _cometd._info('Exception during execution of message callback', x);\n                }\n            }\n        }\n\n        this._getCallback = function(messageId) {\n            return _callbacks[messageId];\n        };\n\n        this._putCallback = function(messageId, callback) {\n            var result = this._getCallback(messageId);\n            if (_isFunction(callback)) {\n                _callbacks[messageId] = callback;\n            }\n            return result;\n        };\n\n        function _handleCallback(message) {\n            var callback = _cometd._getCallback([message.id]);\n            if (_isFunction(callback)) {\n                delete _callbacks[message.id];\n                _notifyCallback(callback, message);\n            }\n        }\n\n        function _handleRemoteCall(message) {\n            var context = _remoteCalls[message.id];\n            delete _remoteCalls[message.id];\n            if (context) {\n                _cometd._debug('Handling remote call response for', message, 'with context', context);\n\n                // Clear the timeout, if present.\n                var timeout = context.timeout;\n                if (timeout) {\n                    _cometd.clearTimeout(timeout);\n                }\n\n                var callback = context.callback;\n                if (_isFunction(callback)) {\n                    _notifyCallback(callback, message);\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        this.onTransportFailure = function(message, failureInfo, failureHandler) {\n            this._debug('Transport failure', failureInfo, 'for', message);\n\n            var transports = this.getTransportRegistry();\n            var url = this.getURL();\n            var crossDomain = this._isCrossDomain(_splitURL(url)[2]);\n            var version = '1.0';\n            var transportTypes = transports.findTransportTypes(version, crossDomain, url);\n\n            if (failureInfo.action === 'none') {\n                if (message.channel === '/meta/handshake') {\n                    if (!failureInfo.transport) {\n                        var failure = 'Could not negotiate transport, client=[' + transportTypes + '], server=[' + message.supportedConnectionTypes + ']';\n                        this._warn(failure);\n                        _notifyTransportException(_transport.getType(), null, {\n                            reason: failure,\n                            connectionType: _transport.getType(),\n                            transport: _transport\n                        });\n                    }\n                }\n            } else {\n                failureInfo.delay = this.getBackoffPeriod();\n                // Different logic depending on whether we are handshaking or connecting.\n                if (message.channel === '/meta/handshake') {\n                    if (!failureInfo.transport) {\n                        // The transport is invalid, try to negotiate again.\n                        var oldTransportType = _transport ? _transport.getType() : null;\n                        var newTransport = transports.negotiateTransport(transportTypes, version, crossDomain, url);\n                        if (!newTransport) {\n                            this._warn('Could not negotiate transport, client=[' + transportTypes + ']');\n                            _notifyTransportException(oldTransportType, null, message.failure);\n                            failureInfo.action = 'none';\n                        } else {\n                            var newTransportType = newTransport.getType();\n                            this._debug('Transport', oldTransportType, '->', newTransportType);\n                            _notifyTransportException(oldTransportType, newTransportType, message.failure);\n                            failureInfo.action = 'handshake';\n                            failureInfo.transport = newTransport;\n                        }\n                    }\n\n                    if (failureInfo.action !== 'none') {\n                        this.increaseBackoffPeriod();\n                    }\n                } else {\n                    var now = new Date().getTime();\n\n                    if (_unconnectTime === 0) {\n                        _unconnectTime = now;\n                    }\n\n                    if (failureInfo.action === 'retry') {\n                        failureInfo.delay = this.increaseBackoffPeriod();\n                        // Check whether we may switch to handshaking.\n                        var maxInterval = _advice.maxInterval;\n                        if (maxInterval > 0) {\n                            var expiration = _advice.timeout + _advice.interval + maxInterval;\n                            var unconnected = now - _unconnectTime;\n                            if (unconnected + _backoff > expiration) {\n                                failureInfo.action = 'handshake';\n                            }\n                        }\n                    }\n\n                    if (failureInfo.action === 'handshake') {\n                        failureInfo.delay = 0;\n                        transports.reset(false);\n                        this.resetBackoffPeriod();\n                    }\n                }\n            }\n\n            failureHandler.call(_cometd, failureInfo);\n        };\n\n        function _handleTransportFailure(failureInfo) {\n            _cometd._debug('Transport failure handling', failureInfo);\n\n            if (failureInfo.transport) {\n                _transport = failureInfo.transport;\n            }\n\n            if (failureInfo.url) {\n                _transport.setURL(failureInfo.url);\n            }\n\n            var action = failureInfo.action;\n            var delay = failureInfo.delay || 0;\n            switch (action) {\n                case 'handshake':\n                    _delayedHandshake(delay);\n                    break;\n                case 'retry':\n                    _delayedConnect(delay);\n                    break;\n                case 'none':\n                    _disconnect(true);\n                    break;\n                default:\n                    throw 'Unknown action ' + action;\n            }\n        }\n\n        function _failHandshake(message, failureInfo) {\n            _handleCallback(message);\n            _notifyListeners('/meta/handshake', message);\n            _notifyListeners('/meta/unsuccessful', message);\n\n            // The listeners may have disconnected.\n            if (_isDisconnected()) {\n                failureInfo.action = 'none';\n            }\n\n            _cometd.onTransportFailure.call(_cometd, message, failureInfo, _handleTransportFailure);\n        }\n\n        function _handshakeResponse(message) {\n            var url = _cometd.getURL();\n            if (message.successful) {\n                var crossDomain = _cometd._isCrossDomain(_splitURL(url)[2]);\n                var newTransport = _transports.negotiateTransport(message.supportedConnectionTypes, message.version, crossDomain, url);\n                if (newTransport === null) {\n                    message.successful = false;\n                    _failHandshake(message, {\n                        cause: 'negotiation',\n                        action: 'none',\n                        transport: null\n                    });\n                    return;\n                } else if (_transport !== newTransport) {\n                    _cometd._debug('Transport', _transport.getType(), '->', newTransport.getType());\n                    _transport = newTransport;\n                }\n\n                _clientId = message.clientId;\n\n                // End the internal batch and allow held messages from the application\n                // to go to the server (see _handshake() where we start the internal batch).\n                _internalBatch = false;\n                _flushBatch();\n\n                // Here the new transport is in place, as well as the clientId, so\n                // the listeners can perform a publish() if they want.\n                // Notify the listeners before the connect below.\n                message.reestablish = _reestablish;\n                _reestablish = true;\n\n                _handleCallback(message);\n                _notifyListeners('/meta/handshake', message);\n\n                _handshakeMessages = message['x-messages'] || 0;\n\n                var action = _isDisconnected() ? 'none' : _advice.reconnect || 'retry';\n                switch (action) {\n                    case 'retry':\n                        _resetBackoff();\n                        if (_handshakeMessages === 0) {\n                            _delayedConnect(0);\n                        } else {\n                            _cometd._debug('Processing', _handshakeMessages, 'handshake-delivered messages');\n                        }\n                        break;\n                    case 'none':\n                        _disconnect(true);\n                        break;\n                    default:\n                        throw 'Unrecognized advice action ' + action;\n                }\n            } else {\n                _failHandshake(message, {\n                    cause: 'unsuccessful',\n                    action: _advice.reconnect || 'handshake',\n                    transport: _transport\n                });\n            }\n        }\n\n        function _handshakeFailure(message) {\n            _failHandshake(message, {\n                cause: 'failure',\n                action: 'handshake',\n                transport: null\n            });\n        }\n\n        function _matchMetaConnect(connect) {\n            if (_status === 'disconnected') {\n                return true;\n            }\n            if (_metaConnect && _metaConnect.id === connect.id) {\n                _metaConnect = null;\n                return true;\n            }\n            return false;\n        }\n\n        function _failConnect(message, failureInfo) {\n            // Notify the listeners after the status change but before the next action.\n            _notifyListeners('/meta/connect', message);\n            _notifyListeners('/meta/unsuccessful', message);\n\n            // The listeners may have disconnected.\n            if (_isDisconnected()) {\n                failureInfo.action = 'none';\n            }\n\n            _cometd.onTransportFailure.call(_cometd, message, failureInfo, _handleTransportFailure);\n        }\n\n        function _connectResponse(message) {\n            if (_matchMetaConnect(message)) {\n                _connected = message.successful;\n                if (_connected) {\n                    _notifyListeners('/meta/connect', message);\n\n                    // Normally, the advice will say \"reconnect: 'retry', interval: 0\"\n                    // and the server will hold the request, so when a response returns\n                    // we immediately call the server again (long polling).\n                    // Listeners can call disconnect(), so check the state after they run.\n                    var action = _isDisconnected() ? 'none' : _advice.reconnect || 'retry';\n                    switch (action) {\n                        case 'retry':\n                            _resetBackoff();\n                            _delayedConnect(_backoff);\n                            break;\n                        case 'none':\n                            _disconnect(false);\n                            break;\n                        default:\n                            throw 'Unrecognized advice action ' + action;\n                    }\n                } else {\n                    _failConnect(message, {\n                        cause: 'unsuccessful',\n                        action: _advice.reconnect || 'retry',\n                        transport: _transport\n                    });\n                }\n            } else {\n                _cometd._debug('Mismatched /meta/connect reply', message);\n            }\n        }\n\n        function _connectFailure(message) {\n            if (_matchMetaConnect(message)) {\n                _connected = false;\n                _failConnect(message, {\n                    cause: 'failure',\n                    action: 'retry',\n                    transport: null\n                });\n            } else {\n                _cometd._debug('Mismatched /meta/connect failure', message);\n            }\n        }\n\n        function _failDisconnect(message) {\n            _disconnect(true);\n            _handleCallback(message);\n            _notifyListeners('/meta/disconnect', message);\n            _notifyListeners('/meta/unsuccessful', message);\n        }\n\n        function _disconnectResponse(message) {\n            if (message.successful) {\n                // Wait for the /meta/connect to arrive.\n                _disconnect(false);\n                _handleCallback(message);\n                _notifyListeners('/meta/disconnect', message);\n            } else {\n                _failDisconnect(message);\n            }\n        }\n\n        function _disconnectFailure(message) {\n            _failDisconnect(message);\n        }\n\n        function _failSubscribe(message) {\n            var subscriptions = _listeners[message.subscription];\n            if (subscriptions) {\n                for (var id in subscriptions) {\n                    if (subscriptions.hasOwnProperty(id)) {\n                        var subscription = subscriptions[id];\n                        if (subscription && !subscription.listener) {\n                            delete subscriptions[id];\n                            _cometd._debug('Removed failed subscription', subscription);\n                        }\n                    }\n                }\n            }\n            _handleCallback(message);\n            _notifyListeners('/meta/subscribe', message);\n            _notifyListeners('/meta/unsuccessful', message);\n        }\n\n        function _subscribeResponse(message) {\n            if (message.successful) {\n                _handleCallback(message);\n                _notifyListeners('/meta/subscribe', message);\n            } else {\n                _failSubscribe(message);\n            }\n        }\n\n        function _subscribeFailure(message) {\n            _failSubscribe(message);\n        }\n\n        function _failUnsubscribe(message) {\n            _handleCallback(message);\n            _notifyListeners('/meta/unsubscribe', message);\n            _notifyListeners('/meta/unsuccessful', message);\n        }\n\n        function _unsubscribeResponse(message) {\n            if (message.successful) {\n                _handleCallback(message);\n                _notifyListeners('/meta/unsubscribe', message);\n            } else {\n                _failUnsubscribe(message);\n            }\n        }\n\n        function _unsubscribeFailure(message) {\n            _failUnsubscribe(message);\n        }\n\n        function _failMessage(message) {\n            if (!_handleRemoteCall(message)) {\n                _handleCallback(message);\n                _notifyListeners('/meta/publish', message);\n                _notifyListeners('/meta/unsuccessful', message);\n            }\n        }\n\n        function _messageResponse(message) {\n            if (message.data !== undefined) {\n                if (!_handleRemoteCall(message)) {\n                    _notifyListeners(message.channel, message);\n                    if (_handshakeMessages > 0) {\n                        --_handshakeMessages;\n                        if (_handshakeMessages === 0) {\n                            _cometd._debug('Processed last handshake-delivered message');\n                            _delayedConnect(0);\n                        }\n                    }\n                }\n            } else {\n                if (message.successful === undefined) {\n                    _cometd._warn('Unknown Bayeux Message', message);\n                } else {\n                    if (message.successful) {\n                        _handleCallback(message);\n                        _notifyListeners('/meta/publish', message);\n                    } else {\n                        _failMessage(message);\n                    }\n                }\n            }\n        }\n\n        function _messageFailure(failure) {\n            _failMessage(failure);\n        }\n\n        function _receive(message) {\n            _unconnectTime = 0;\n\n            message = _applyIncomingExtensions(message);\n            if (message === undefined || message === null) {\n                return;\n            }\n\n            _updateAdvice(message.advice);\n\n            var channel = message.channel;\n            switch (channel) {\n                case '/meta/handshake':\n                    _handshakeResponse(message);\n                    break;\n                case '/meta/connect':\n                    _connectResponse(message);\n                    break;\n                case '/meta/disconnect':\n                    _disconnectResponse(message);\n                    break;\n                case '/meta/subscribe':\n                    _subscribeResponse(message);\n                    break;\n                case '/meta/unsubscribe':\n                    _unsubscribeResponse(message);\n                    break;\n                default:\n                    _messageResponse(message);\n                    break;\n            }\n        }\n\n        /**\n         * Receives a message.\n         * This method is exposed as a public so that extensions may inject\n         * messages simulating that they had been received.\n         */\n        this.receive = _receive;\n\n        _handleMessages = function(rcvdMessages) {\n            _cometd._debug('Received', rcvdMessages);\n\n            for (var i = 0; i < rcvdMessages.length; ++i) {\n                var message = rcvdMessages[i];\n                _receive(message);\n            }\n        };\n\n        _handleFailure = function(conduit, messages, failure) {\n            _cometd._debug('handleFailure', conduit, messages, failure);\n\n            failure.transport = conduit;\n            for (var i = 0; i < messages.length; ++i) {\n                var message = messages[i];\n                var failureMessage = {\n                    id: message.id,\n                    successful: false,\n                    channel: message.channel,\n                    failure: failure\n                };\n                failure.message = message;\n                switch (message.channel) {\n                    case '/meta/handshake':\n                        _handshakeFailure(failureMessage);\n                        break;\n                    case '/meta/connect':\n                        _connectFailure(failureMessage);\n                        break;\n                    case '/meta/disconnect':\n                        _disconnectFailure(failureMessage);\n                        break;\n                    case '/meta/subscribe':\n                        failureMessage.subscription = message.subscription;\n                        _subscribeFailure(failureMessage);\n                        break;\n                    case '/meta/unsubscribe':\n                        failureMessage.subscription = message.subscription;\n                        _unsubscribeFailure(failureMessage);\n                        break;\n                    default:\n                        _messageFailure(failureMessage);\n                        break;\n                }\n            }\n        };\n\n        function _hasSubscriptions(channel) {\n            var subscriptions = _listeners[channel];\n            if (subscriptions) {\n                for (var id in subscriptions) {\n                    if (subscriptions.hasOwnProperty(id)) {\n                        if (subscriptions[id]) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n\n        function _resolveScopedCallback(scope, callback) {\n            var delegate = {\n                scope: scope,\n                method: callback\n            };\n            if (_isFunction(scope)) {\n                delegate.scope = undefined;\n                delegate.method = scope;\n            } else {\n                if (_isString(callback)) {\n                    if (!scope) {\n                        throw 'Invalid scope ' + scope;\n                    }\n                    delegate.method = scope[callback];\n                    if (!_isFunction(delegate.method)) {\n                        throw 'Invalid callback ' + callback + ' for scope ' + scope;\n                    }\n                } else if (!_isFunction(callback)) {\n                    throw 'Invalid callback ' + callback;\n                }\n            }\n            return delegate;\n        }\n\n        function _addListener(channel, scope, callback, isListener) {\n            // The data structure is a map<channel, subscription[]>, where each subscription\n            // holds the callback to be called and its scope.\n\n            var delegate = _resolveScopedCallback(scope, callback);\n            _cometd._debug('Adding', isListener ? 'listener' : 'subscription', 'on', channel, 'with scope', delegate.scope, 'and callback', delegate.method);\n\n            var id = ++_listenerId;\n            var subscription = {\n                id: id,\n                channel: channel,\n                scope: delegate.scope,\n                callback: delegate.method,\n                listener: isListener\n            };\n\n            var subscriptions = _listeners[channel];\n            if (!subscriptions) {\n                subscriptions = {};\n                _listeners[channel] = subscriptions;\n            }\n\n            subscriptions[id] = subscription;\n\n            _cometd._debug('Added', isListener ? 'listener' : 'subscription', subscription);\n\n            return subscription;\n        }\n\n        //\n        // PUBLIC API\n        //\n\n        /**\n         * Registers the given transport under the given transport type.\n         * The optional index parameter specifies the \"priority\" at which the\n         * transport is registered (where 0 is the max priority).\n         * If a transport with the same type is already registered, this function\n         * does nothing and returns false.\n         * @param type the transport type\n         * @param transport the transport object\n         * @param index the index at which this transport is to be registered\n         * @return true if the transport has been registered, false otherwise\n         * @see #unregisterTransport(type)\n         */\n        this.registerTransport = function(type, transport, index) {\n            var result = _transports.add(type, transport, index);\n            if (result) {\n                this._debug('Registered transport', type);\n\n                if (_isFunction(transport.registered)) {\n                    transport.registered(type, this);\n                }\n            }\n            return result;\n        };\n\n        /**\n         * Unregisters the transport with the given transport type.\n         * @param type the transport type to unregister\n         * @return the transport that has been unregistered,\n         * or null if no transport was previously registered under the given transport type\n         */\n        this.unregisterTransport = function(type) {\n            var transport = _transports.remove(type);\n            if (transport !== null) {\n                this._debug('Unregistered transport', type);\n\n                if (_isFunction(transport.unregistered)) {\n                    transport.unregistered();\n                }\n            }\n            return transport;\n        };\n\n        this.unregisterTransports = function() {\n            _transports.clear();\n        };\n\n        /**\n         * @return an array of all registered transport types\n         */\n        this.getTransportTypes = function() {\n            return _transports.getTransportTypes();\n        };\n\n        this.findTransport = function(name) {\n            return _transports.find(name);\n        };\n\n        /**\n         * @returns the TransportRegistry object\n         */\n        this.getTransportRegistry = function() {\n            return _transports;\n        };\n\n        /**\n         * Configures the initial Bayeux communication with the Bayeux server.\n         * Configuration is passed via an object that must contain a mandatory field <code>url</code>\n         * of type string containing the URL of the Bayeux server.\n         * @param configuration the configuration object\n         */\n        this.configure = function(configuration) {\n            _configure.call(this, configuration);\n        };\n\n        /**\n         * Configures and establishes the Bayeux communication with the Bayeux server\n         * via a handshake and a subsequent connect.\n         * @param configuration the configuration object\n         * @param handshakeProps an object to be merged with the handshake message\n         * @see #configure(configuration)\n         * @see #handshake(handshakeProps)\n         */\n        this.init = function(configuration, handshakeProps) {\n            this.configure(configuration);\n            this.handshake(handshakeProps);\n        };\n\n        /**\n         * Establishes the Bayeux communication with the Bayeux server\n         * via a handshake and a subsequent connect.\n         * @param handshakeProps an object to be merged with the handshake message\n         * @param handshakeCallback a function to be invoked when the handshake is acknowledged\n         */\n        this.handshake = function(handshakeProps, handshakeCallback) {\n            if (_status !== 'disconnected') {\n                throw 'Illegal state: handshaken';\n            }\n            _handshake(handshakeProps, handshakeCallback);\n        };\n\n        /**\n         * Disconnects from the Bayeux server.\n         * It is possible to suggest to attempt a synchronous disconnect, but this feature\n         * may only be available in certain transports (for example, long-polling may support\n         * it, callback-polling certainly does not).\n         * @param sync whether attempt to perform a synchronous disconnect\n         * @param disconnectProps an object to be merged with the disconnect message\n         * @param disconnectCallback a function to be invoked when the disconnect is acknowledged\n         */\n        this.disconnect = function(sync, disconnectProps, disconnectCallback) {\n            if (_isDisconnected()) {\n                return;\n            }\n\n            if (typeof sync !== 'boolean') {\n                disconnectCallback = disconnectProps;\n                disconnectProps = sync;\n                sync = false;\n            }\n            if (_isFunction(disconnectProps)) {\n                disconnectCallback = disconnectProps;\n                disconnectProps = undefined;\n            }\n\n            var bayeuxMessage = {\n                id: _nextMessageId(),\n                channel: '/meta/disconnect'\n            };\n            // Do not allow the user to override important fields.\n            var message = this._mixin(false, {}, disconnectProps, bayeuxMessage);\n\n            // Save the callback.\n            _cometd._putCallback(message.id, disconnectCallback);\n\n            _setStatus('disconnecting');\n            _send(sync === true, [message], false, 'disconnect');\n        };\n\n        /**\n         * Marks the start of a batch of application messages to be sent to the server\n         * in a single request, obtaining a single response containing (possibly) many\n         * application reply messages.\n         * Messages are held in a queue and not sent until {@link #endBatch()} is called.\n         * If startBatch() is called multiple times, then an equal number of endBatch()\n         * calls must be made to close and send the batch of messages.\n         * @see #endBatch()\n         */\n        this.startBatch = function() {\n            _startBatch();\n        };\n\n        /**\n         * Marks the end of a batch of application messages to be sent to the server\n         * in a single request.\n         * @see #startBatch()\n         */\n        this.endBatch = function() {\n            _endBatch();\n        };\n\n        /**\n         * Executes the given callback in the given scope, surrounded by a {@link #startBatch()}\n         * and {@link #endBatch()} calls.\n         * @param scope the scope of the callback, may be omitted\n         * @param callback the callback to be executed within {@link #startBatch()} and {@link #endBatch()} calls\n         */\n        this.batch = function(scope, callback) {\n            var delegate = _resolveScopedCallback(scope, callback);\n            this.startBatch();\n            try {\n                delegate.method.call(delegate.scope);\n                this.endBatch();\n            } catch (x) {\n                this._info('Exception during execution of batch', x);\n                this.endBatch();\n                throw x;\n            }\n        };\n\n        /**\n         * Adds a listener for bayeux messages, performing the given callback in the given scope\n         * when a message for the given channel arrives.\n         * @param channel the channel the listener is interested to\n         * @param scope the scope of the callback, may be omitted\n         * @param callback the callback to call when a message is sent to the channel\n         * @returns the subscription handle to be passed to {@link #removeListener(object)}\n         * @see #removeListener(subscription)\n         */\n        this.addListener = function(channel, scope, callback) {\n            if (arguments.length < 2) {\n                throw 'Illegal arguments number: required 2, got ' + arguments.length;\n            }\n            if (!_isString(channel)) {\n                throw 'Illegal argument type: channel must be a string';\n            }\n\n            return _addListener(channel, scope, callback, true);\n        };\n\n        /**\n         * Removes the subscription obtained with a call to {@link #addListener(string, object, function)}.\n         * @param subscription the subscription to unsubscribe.\n         * @see #addListener(channel, scope, callback)\n         */\n        this.removeListener = function(subscription) {\n            // Beware of subscription.id == 0, which is falsy => cannot use !subscription.id\n            if (!subscription || !subscription.channel || !(\"id\" in subscription)) {\n                throw 'Invalid argument: expected subscription, not ' + subscription;\n            }\n\n            _removeListener(subscription);\n        };\n\n        /**\n         * Removes all listeners registered with {@link #addListener(channel, scope, callback)} or\n         * {@link #subscribe(channel, scope, callback)}.\n         */\n        this.clearListeners = function() {\n            _listeners = {};\n        };\n\n        /**\n         * Subscribes to the given channel, performing the given callback in the given scope\n         * when a message for the channel arrives.\n         * @param channel the channel to subscribe to\n         * @param scope the scope of the callback, may be omitted\n         * @param callback the callback to call when a message is sent to the channel\n         * @param subscribeProps an object to be merged with the subscribe message\n         * @param subscribeCallback a function to be invoked when the subscription is acknowledged\n         * @return the subscription handle to be passed to {@link #unsubscribe(object)}\n         */\n        this.subscribe = function(channel, scope, callback, subscribeProps, subscribeCallback) {\n            if (arguments.length < 2) {\n                throw 'Illegal arguments number: required 2, got ' + arguments.length;\n            }\n            if (!_isString(channel)) {\n                throw 'Illegal argument type: channel must be a string';\n            }\n            if (_isDisconnected()) {\n                throw 'Illegal state: disconnected';\n            }\n\n            // Normalize arguments\n            if (_isFunction(scope)) {\n                subscribeCallback = subscribeProps;\n                subscribeProps = callback;\n                callback = scope;\n                scope = undefined;\n            }\n            if (_isFunction(subscribeProps)) {\n                subscribeCallback = subscribeProps;\n                subscribeProps = undefined;\n            }\n\n            // Only send the message to the server if this client has not yet subscribed to the channel\n            var send = !_hasSubscriptions(channel);\n\n            var subscription = _addListener(channel, scope, callback, false);\n\n            if (send) {\n                // Send the subscription message after the subscription registration to avoid\n                // races where the server would send a message to the subscribers, but here\n                // on the client the subscription has not been added yet to the data structures\n                var bayeuxMessage = {\n                    id: _nextMessageId(),\n                    channel: '/meta/subscribe',\n                    subscription: channel\n                };\n                // Do not allow the user to override important fields.\n                var message = this._mixin(false, {}, subscribeProps, bayeuxMessage);\n\n                // Save the callback.\n                _cometd._putCallback(message.id, subscribeCallback);\n\n                _queueSend(message);\n            }\n\n            return subscription;\n        };\n\n        /**\n         * Unsubscribes the subscription obtained with a call to {@link #subscribe(string, object, function)}.\n         * @param subscription the subscription to unsubscribe.\n         * @param unsubscribeProps an object to be merged with the unsubscribe message\n         * @param unsubscribeCallback a function to be invoked when the unsubscription is acknowledged\n         */\n        this.unsubscribe = function(subscription, unsubscribeProps, unsubscribeCallback) {\n            if (arguments.length < 1) {\n                throw 'Illegal arguments number: required 1, got ' + arguments.length;\n            }\n            if (_isDisconnected()) {\n                throw 'Illegal state: disconnected';\n            }\n\n            if (_isFunction(unsubscribeProps)) {\n                unsubscribeCallback = unsubscribeProps;\n                unsubscribeProps = undefined;\n            }\n\n            // Remove the local listener before sending the message\n            // This ensures that if the server fails, this client does not get notifications\n            this.removeListener(subscription);\n\n            var channel = subscription.channel;\n            // Only send the message to the server if this client unsubscribes the last subscription\n            if (!_hasSubscriptions(channel)) {\n                var bayeuxMessage = {\n                    id: _nextMessageId(),\n                    channel: '/meta/unsubscribe',\n                    subscription: channel\n                };\n                // Do not allow the user to override important fields.\n                var message = this._mixin(false, {}, unsubscribeProps, bayeuxMessage);\n\n                // Save the callback.\n                _cometd._putCallback(message.id, unsubscribeCallback);\n\n                _queueSend(message);\n            }\n        };\n\n        this.resubscribe = function(subscription, subscribeProps) {\n            _removeSubscription(subscription);\n            if (subscription) {\n                return this.subscribe(subscription.channel, subscription.scope, subscription.callback, subscribeProps);\n            }\n            return undefined;\n        };\n\n        /**\n         * Removes all subscriptions added via {@link #subscribe(channel, scope, callback, subscribeProps)},\n         * but does not remove the listeners added via {@link addListener(channel, scope, callback)}.\n         */\n        this.clearSubscriptions = function() {\n            _clearSubscriptions();\n        };\n\n        /**\n         * Publishes a message on the given channel, containing the given content.\n         * @param channel the channel to publish the message to\n         * @param content the content of the message\n         * @param publishProps an object to be merged with the publish message\n         * @param publishCallback a function to be invoked when the publish is acknowledged by the server\n         */\n        this.publish = function(channel, content, publishProps, publishCallback) {\n            if (arguments.length < 1) {\n                throw 'Illegal arguments number: required 1, got ' + arguments.length;\n            }\n            if (!_isString(channel)) {\n                throw 'Illegal argument type: channel must be a string';\n            }\n            if (/^\\/meta\\//.test(channel)) {\n                throw 'Illegal argument: cannot publish to meta channels';\n            }\n            if (_isDisconnected()) {\n                throw 'Illegal state: disconnected';\n            }\n\n            if (_isFunction(content)) {\n                publishCallback = content;\n                content = {};\n                publishProps = undefined;\n            } else if (_isFunction(publishProps)) {\n                publishCallback = publishProps;\n                publishProps = undefined;\n            }\n\n            var bayeuxMessage = {\n                id: _nextMessageId(),\n                channel: channel,\n                data: content\n            };\n            // Do not allow the user to override important fields.\n            var message = this._mixin(false, {}, publishProps, bayeuxMessage);\n\n            // Save the callback.\n            _cometd._putCallback(message.id, publishCallback);\n\n            _queueSend(message);\n        };\n\n        /**\n         * Publishes a message with binary data on the given channel.\n         * The binary data chunk may be an ArrayBuffer, a DataView, a TypedArray\n         * (such as Uint8Array) or a plain integer array.\n         * The meta data object may contain additional application data such as\n         * a file name, a mime type, etc.\n         * @param channel the channel to publish the message to\n         * @param data the binary data to publish\n         * @param last whether the binary data chunk is the last\n         * @param meta an object containing meta data associated to the binary chunk\n         * @param callback a function to be invoked when the publish is acknowledged by the server\n         */\n        this.publishBinary = function(channel, data, last, meta, callback) {\n            if (_isFunction(data)) {\n                callback = data;\n                data = new ArrayBuffer(0);\n                last = true;\n                meta = undefined;\n            } else if (_isFunction(last)) {\n                callback = last;\n                last = true;\n                meta = undefined;\n            } else if (_isFunction(meta)) {\n                callback = meta;\n                meta = undefined;\n            }\n            var content = {\n                meta: meta,\n                data: data,\n                last: last\n            };\n            var ext = {\n                ext: {\n                    binary: {}\n                }\n            };\n            this.publish(channel, content, ext, callback);\n        };\n\n        this.remoteCall = function(target, content, timeout, callProps, callback) {\n            if (arguments.length < 1) {\n                throw 'Illegal arguments number: required 1, got ' + arguments.length;\n            }\n            if (!_isString(target)) {\n                throw 'Illegal argument type: target must be a string';\n            }\n            if (_isDisconnected()) {\n                throw 'Illegal state: disconnected';\n            }\n\n            if (_isFunction(content)) {\n                callback = content;\n                content = {};\n                timeout = _config.maxNetworkDelay;\n                callProps = undefined;\n            } else if (_isFunction(timeout)) {\n                callback = timeout;\n                timeout = _config.maxNetworkDelay;\n                callProps = undefined;\n            } else if (_isFunction(callProps)) {\n                callback = callProps;\n                callProps = undefined;\n            }\n\n            if (typeof timeout !== 'number') {\n                throw 'Illegal argument type: timeout must be a number';\n            }\n\n            if (!target.match(/^\\//)) {\n                target = '/' + target;\n            }\n            var channel = '/service' + target;\n\n            var bayeuxMessage = {\n                id: _nextMessageId(),\n                channel: channel,\n                data: content\n            };\n            var message = this._mixin(false, {}, callProps, bayeuxMessage);\n\n            var context = {\n                callback: callback\n            };\n            if (timeout > 0) {\n                context.timeout = _cometd.setTimeout(function() {\n                    _cometd._debug('Timing out remote call', message, 'after', timeout, 'ms');\n                    _failMessage({\n                        id: message.id,\n                        error: '406::timeout',\n                        successful: false,\n                        failure: {\n                            message: message,\n                            reason: 'Remote Call Timeout'\n                        }\n                    });\n                }, timeout);\n                _cometd._debug('Scheduled remote call timeout', message, 'in', timeout, 'ms');\n            }\n            _remoteCalls[message.id] = context;\n\n            _queueSend(message);\n        };\n\n        this.remoteCallBinary = function(target, data, last, meta, timeout, callback) {\n            if (_isFunction(data)) {\n                callback = data;\n                data = new ArrayBuffer(0);\n                last = true;\n                meta = undefined;\n                timeout = _config.maxNetworkDelay;\n            } else if (_isFunction(last)) {\n                callback = last;\n                last = true;\n                meta = undefined;\n                timeout = _config.maxNetworkDelay;\n            } else if (_isFunction(meta)) {\n                callback = meta;\n                meta = undefined;\n                timeout = _config.maxNetworkDelay;\n            } else if (_isFunction(timeout)) {\n                callback = timeout;\n                timeout = _config.maxNetworkDelay;\n            }\n\n            var content = {\n                meta: meta,\n                data: data,\n                last: last\n            };\n            var ext = {\n                ext: {\n                    binary: {}\n                }\n            };\n\n            this.remoteCall(target, content, timeout, ext, callback);\n        };\n\n        /**\n         * Returns a string representing the status of the bayeux communication with the Bayeux server.\n         */\n        this.getStatus = function() {\n            return _status;\n        };\n\n        /**\n         * Returns whether this instance has been disconnected.\n         */\n        this.isDisconnected = _isDisconnected;\n\n        /**\n         * Sets the backoff period used to increase the backoff time when retrying an unsuccessful or failed message.\n         * Default value is 1 second, which means if there is a persistent failure the retries will happen\n         * after 1 second, then after 2 seconds, then after 3 seconds, etc. So for example with 15 seconds of\n         * elapsed time, there will be 5 retries (at 1, 3, 6, 10 and 15 seconds elapsed).\n         * @param period the backoff period to set\n         * @see #getBackoffIncrement()\n         */\n        this.setBackoffIncrement = function(period) {\n            _config.backoffIncrement = period;\n        };\n\n        /**\n         * Returns the backoff period used to increase the backoff time when retrying an unsuccessful or failed message.\n         * @see #setBackoffIncrement(period)\n         */\n        this.getBackoffIncrement = function() {\n            return _config.backoffIncrement;\n        };\n\n        /**\n         * Returns the backoff period to wait before retrying an unsuccessful or failed message.\n         */\n        this.getBackoffPeriod = function() {\n            return _backoff;\n        };\n\n        /**\n         * Increases the backoff period up to the maximum value configured.\n         * @returns the backoff period after increment\n         * @see getBackoffIncrement\n         */\n        this.increaseBackoffPeriod = function() {\n            return _increaseBackoff();\n        };\n\n        /**\n         * Resets the backoff period to zero.\n         */\n        this.resetBackoffPeriod = function() {\n            _resetBackoff();\n        };\n\n        /**\n         * Sets the log level for console logging.\n         * Valid values are the strings 'error', 'warn', 'info' and 'debug', from\n         * less verbose to more verbose.\n         * @param level the log level string\n         */\n        this.setLogLevel = function(level) {\n            _config.logLevel = level;\n        };\n\n        /**\n         * Registers an extension whose callbacks are called for every incoming message\n         * (that comes from the server to this client implementation) and for every\n         * outgoing message (that originates from this client implementation for the\n         * server).\n         * The format of the extension object is the following:\n         * <pre>\n         * {\n         *     incoming: function(message) { ... },\n         *     outgoing: function(message) { ... }\n         * }\n         * </pre>\n         * Both properties are optional, but if they are present they will be called\n         * respectively for each incoming message and for each outgoing message.\n         * @param name the name of the extension\n         * @param extension the extension to register\n         * @return true if the extension was registered, false otherwise\n         * @see #unregisterExtension(name)\n         */\n        this.registerExtension = function(name, extension) {\n            if (arguments.length < 2) {\n                throw 'Illegal arguments number: required 2, got ' + arguments.length;\n            }\n            if (!_isString(name)) {\n                throw 'Illegal argument type: extension name must be a string';\n            }\n\n            var existing = false;\n            for (var i = 0; i < _extensions.length; ++i) {\n                var existingExtension = _extensions[i];\n                if (existingExtension.name === name) {\n                    existing = true;\n                    break;\n                }\n            }\n            if (!existing) {\n                _extensions.push({\n                    name: name,\n                    extension: extension\n                });\n                this._debug('Registered extension', name);\n\n                // Callback for extensions\n                if (_isFunction(extension.registered)) {\n                    extension.registered(name, this);\n                }\n\n                return true;\n            } else {\n                this._info('Could not register extension with name', name, 'since another extension with the same name already exists');\n                return false;\n            }\n        };\n\n        /**\n         * Unregister an extension previously registered with\n         * {@link #registerExtension(name, extension)}.\n         * @param name the name of the extension to unregister.\n         * @return true if the extension was unregistered, false otherwise\n         */\n        this.unregisterExtension = function(name) {\n            if (!_isString(name)) {\n                throw 'Illegal argument type: extension name must be a string';\n            }\n\n            var unregistered = false;\n            for (var i = 0; i < _extensions.length; ++i) {\n                var extension = _extensions[i];\n                if (extension.name === name) {\n                    _extensions.splice(i, 1);\n                    unregistered = true;\n                    this._debug('Unregistered extension', name);\n\n                    // Callback for extensions\n                    var ext = extension.extension;\n                    if (_isFunction(ext.unregistered)) {\n                        ext.unregistered();\n                    }\n\n                    break;\n                }\n            }\n            return unregistered;\n        };\n\n        /**\n         * Find the extension registered with the given name.\n         * @param name the name of the extension to find\n         * @return the extension found or null if no extension with the given name has been registered\n         */\n        this.getExtension = function(name) {\n            for (var i = 0; i < _extensions.length; ++i) {\n                var extension = _extensions[i];\n                if (extension.name === name) {\n                    return extension.extension;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Returns the name assigned to this CometD object, or the string 'default'\n         * if no name has been explicitly passed as parameter to the constructor.\n         */\n        this.getName = function() {\n            return _name;\n        };\n\n        /**\n         * Returns the clientId assigned by the Bayeux server during handshake.\n         */\n        this.getClientId = function() {\n            return _clientId;\n        };\n\n        /**\n         * Returns the URL of the Bayeux server.\n         */\n        this.getURL = function() {\n            if (_transport) {\n                var url = _transport.getURL();\n                if (url) {\n                    return url;\n                }\n                url = _config.urls[_transport.getType()];\n                if (url) {\n                    return url;\n                }\n            }\n            return _config.url;\n        };\n\n        this.getTransport = function() {\n            return _transport;\n        };\n\n        this.getConfiguration = function() {\n            return this._mixin(true, {}, _config);\n        };\n\n        this.getAdvice = function() {\n            return this._mixin(true, {}, _advice);\n        };\n\n        this.setTimeout = function(funktion, delay) {\n            return _scheduler.setTimeout(function() {\n                try {\n                    _cometd._debug('Invoking timed function', funktion);\n                    funktion();\n                } catch (x) {\n                    _cometd._debug('Exception invoking timed function', funktion, x);\n                }\n            }, delay);\n        };\n\n        this.clearTimeout = function(id) {\n            _scheduler.clearTimeout(id);\n        };\n\n        // Initialize transports.\n        if (window.WebSocket) {\n            this.registerTransport('websocket', new WebSocketTransport());\n        }\n        this.registerTransport('long-polling', new LongPollingTransport());\n        this.registerTransport('callback-polling', new CallbackPollingTransport());\n    };\n\n    var _z85EncodeTable = [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\n        'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n        'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D',\n        'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\n        'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\n        'Y', 'Z', '.', '-', ':', '+', '=', '^', '!', '/',\n        '*', '?', '&', '<', '>', '(', ')', '[', ']', '{',\n        '}', '@', '%', '$', '#'\n    ];\n    var _z85DecodeTable = [\n        0x00, 0x44, 0x00, 0x54, 0x53, 0x52, 0x48, 0x00,\n        0x4B, 0x4C, 0x46, 0x41, 0x00, 0x3F, 0x3E, 0x45,\n        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n        0x08, 0x09, 0x40, 0x00, 0x49, 0x42, 0x4A, 0x47,\n        0x51, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A,\n        0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32,\n        0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,\n        0x3B, 0x3C, 0x3D, 0x4D, 0x00, 0x4E, 0x43, 0x00,\n        0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,\n        0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,\n        0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,\n        0x21, 0x22, 0x23, 0x4F, 0x00, 0x50, 0x00, 0x00\n    ];\n    var Z85 = {\n        encode: function(bytes) {\n            var buffer = null;\n            if (bytes instanceof ArrayBuffer) {\n                buffer = bytes;\n            } else if (bytes.buffer instanceof ArrayBuffer) {\n                buffer = bytes.buffer;\n            } else if (Array.isArray(bytes)) {\n                buffer = new Uint8Array(bytes).buffer;\n            }\n            if (buffer == null) {\n                throw 'Cannot Z85 encode ' + bytes;\n            }\n\n            var length = buffer.byteLength;\n            var remainder = length % 4;\n            var padding = 4 - (remainder === 0 ? 4 : remainder);\n            var view = new DataView(buffer);\n            var result = '';\n            var value = 0;\n            for (var i = 0; i < length + padding; ++i) {\n                var isPadding = i >= length;\n                value = value * 256 + (isPadding ? 0 : view.getUint8(i));\n                if ((i + 1) % 4 === 0) {\n                    var divisor = 85 * 85 * 85 * 85;\n                    for (var j = 5; j > 0; --j) {\n                        if (!isPadding || j > padding) {\n                            var code = Math.floor(value / divisor) % 85;\n                            result += _z85EncodeTable[code];\n                        }\n                        divisor /= 85;\n                    }\n                    value = 0;\n                }\n            }\n\n            return result;\n        },\n        decode: function(string) {\n            var remainder = string.length % 5;\n            var padding = 5 - (remainder === 0 ? 5 : remainder);\n            for (var p = 0; p < padding; ++p) {\n                string += _z85EncodeTable[_z85EncodeTable.length - 1];\n            }\n            var length = string.length;\n\n            var buffer = new ArrayBuffer((length * 4 / 5) - padding);\n            var view = new DataView(buffer);\n            var value = 0;\n            var charIdx = 0;\n            var byteIdx = 0;\n            for (var i = 0; i < length; ++i) {\n                var code = string.charCodeAt(charIdx++) - 32;\n                value = value * 85 + _z85DecodeTable[code];\n                if (charIdx % 5 === 0) {\n                    var divisor = 256 * 256 * 256;\n                    while (divisor >= 1) {\n                        if (byteIdx < view.byteLength) {\n                            view.setUint8(byteIdx++, Math.floor(value / divisor) % 256);\n                        }\n                        divisor /= 256;\n                    }\n                    value = 0;\n                }\n            }\n\n            return buffer;\n        }\n    };\n\n    return {\n        CometD: CometD,\n        Transport: Transport,\n        RequestTransport: RequestTransport,\n        LongPollingTransport: LongPollingTransport,\n        CallbackPollingTransport: CallbackPollingTransport,\n        WebSocketTransport: WebSocketTransport,\n        Utils: Utils,\n        Z85: Z85\n    };\n}));\n","/*\n * Copyright (c) 2008-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory){\n    if (typeof exports === 'object') {\n        module.exports = factory(require('./cometd'));\n    } else if (typeof define === 'function' && define.amd) {\n        define(['./cometd'], factory);\n    } else {\n        factory(root.org.cometd);\n    }\n}(this, function(cometdModule) {\n    /**\n     * This client-side extension enables the client to acknowledge to the server\n     * the messages that the client has received.\n     * For the acknowledgement to work, the server must be configured with the\n     * correspondent server-side ack extension. If both client and server support\n     * the ack extension, then the ack functionality will take place automatically.\n     * By enabling this extension, all messages arriving from the server will arrive\n     * via /meta/connect, so the comet communication will be slightly chattier.\n     * The fact that all messages will return via /meta/connect means also that the\n     * messages will arrive with total order, which is not guaranteed if messages\n     * can arrive via both /meta/connect and normal response.\n     * Messages are not acknowledged one by one, but instead a batch of messages is\n     * acknowledged when the /meta/connect returns.\n     */\n    return cometdModule.AckExtension = function() {\n        var _cometd;\n        var _serverSupportsAcks = false;\n        var _batch;\n\n        function _debug(text, args) {\n            _cometd._debug(text, args);\n        }\n\n        this.registered = function(name, cometd) {\n            _cometd = cometd;\n            _debug('AckExtension: executing registration callback');\n        };\n\n        this.unregistered = function() {\n            _debug('AckExtension: executing unregistration callback');\n            _cometd = null;\n        };\n\n        this.incoming = function(message) {\n            var channel = message.channel;\n            var ext = message.ext;\n            if (channel === '/meta/handshake') {\n                if (ext) {\n                    var ackField = ext.ack;\n                    if (typeof ackField === 'object') {\n                        // New format.\n                        _serverSupportsAcks = ackField.enabled === true;\n                        var batch = ackField.batch;\n                        if (typeof batch === 'number') {\n                            _batch = batch;\n                        }\n                    } else {\n                        // Old format.\n                        _serverSupportsAcks = ackField === true;\n                    }\n                }\n                _debug('AckExtension: server supports acknowledgements', _serverSupportsAcks);\n            } else if (channel === '/meta/connect' && message.successful && _serverSupportsAcks) {\n                if (ext && typeof ext.ack === 'number') {\n                    _batch = ext.ack;\n                    _debug('AckExtension: server sent batch', _batch);\n                }\n            }\n            return message;\n        };\n\n        this.outgoing = function(message) {\n            var channel = message.channel;\n            if (!message.ext) {\n                message.ext = {};\n            }\n            if (channel === '/meta/handshake') {\n                message.ext.ack = _cometd && _cometd.ackEnabled !== false;\n                _serverSupportsAcks = false;\n                _batch = 0;\n            } else if (channel === '/meta/connect') {\n                if (_serverSupportsAcks) {\n                    message.ext.ack = _batch;\n                    _debug('AckExtension: client sending batch', _batch);\n                }\n            }\n            return message;\n        };\n    };\n}));\n","/*\n * Copyright (c) 2008-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory(require('./cometd'));\n    } else if (typeof define === 'function' && define.amd) {\n        define(['./cometd'], factory);\n    } else {\n        factory(root.org.cometd);\n    }\n}(this, function(cometdModule) {\n    /**\n     * The reload extension allows a page to be loaded (or reloaded)\n     * without having to re-handshake in the new (or reloaded) page,\n     * therefore resuming the existing CometD connection.\n     *\n     * When the reload() method is called, the state of the CometD\n     * connection is stored in the window.sessionStorage object.\n     * The reload() method must therefore be called by page unload\n     * handlers, often provided by JavaScript toolkits.\n     *\n     * When the page is (re)loaded, this extension checks the\n     * window.sessionStorage and restores the CometD connection,\n     * maintaining the same CometD clientId.\n     */\n    return cometdModule.ReloadExtension = function(configuration) {\n        var _cometd;\n        var _debug;\n        var _state = {};\n        var _name = 'org.cometd.reload';\n        var _batch = false;\n        var _reloading = false;\n\n        function _reload(config) {\n            if (_state.handshakeResponse) {\n                _reloading = true;\n                var transport = _cometd.getTransport();\n                if (transport) {\n                    transport.abort();\n                }\n                _configure(config);\n                var state = JSON.stringify(_state);\n                _debug('Reload extension saving state', state);\n                window.sessionStorage.setItem(_name, state);\n            }\n        }\n\n        function _similarState(oldState) {\n            // We want to check here that the CometD object\n            // did not change much between reloads.\n            // We just check the URL for now, but in future\n            // further checks may involve the transport type\n            // and other configuration parameters.\n            return _state.url === oldState.url;\n        }\n\n        function _configure(config) {\n            if (config) {\n                if (typeof config.name === 'string') {\n                    _name = config.name;\n                }\n            }\n        }\n\n        function _receive(response) {\n            _cometd.receive(response);\n        }\n\n        this.configure = _configure;\n\n        this._receive = _receive;\n\n        this.registered = function(name, cometd) {\n            _cometd = cometd;\n            _cometd.reload = _reload;\n            _debug = _cometd._debug;\n        };\n\n        this.unregistered = function() {\n            delete _cometd.reload;\n            _cometd = null;\n        };\n\n        this.outgoing = function(message) {\n            switch (message.channel) {\n                case '/meta/handshake':\n                {\n                    _state = {};\n                    _state.url = _cometd.getURL();\n\n                    var state = window.sessionStorage.getItem(_name);\n                    _debug('Reload extension found state', state);\n                    // Is there a saved handshake response from a prior load ?\n                    if (state) {\n                        try {\n                            var oldState = JSON.parse(state);\n\n                            // Remove the state, not needed anymore\n                            window.sessionStorage.removeItem(_name);\n\n                            if (oldState.handshakeResponse && _similarState(oldState)) {\n                                _debug('Reload extension restoring state', oldState);\n\n                                // Since we are going to abort this message,\n                                // we must save an eventual callback to restore\n                                // it when we replay the handshake response.\n                                var callback = _cometd._getCallback(message.id);\n\n                                var self = this;\n                                setTimeout(function() {\n                                    _debug('Reload extension replaying handshake response', oldState.handshakeResponse);\n                                    _state.handshakeResponse = oldState.handshakeResponse;\n                                    _state.transportType = oldState.transportType;\n\n                                    // Restore the callback.\n                                    _cometd._putCallback(message.id, callback);\n\n                                    var response = _cometd._mixin(true, {}, _state.handshakeResponse, {\n                                        // Keep the response message id the same as the request.\n                                        id: message.id,\n                                        // Tells applications this is a handshake replayed by the reload extension.\n                                        ext: {\n                                            reload: true\n                                        }\n                                    });\n                                    // Use the same transport as before.\n                                    response.supportedConnectionTypes = [_state.transportType];\n\n                                    self._receive(response);\n                                    _debug('Reload extension replayed handshake response', response);\n                                }, 0);\n\n                                // Delay any sends until first connect is complete.\n                                // This avoids that there is an old /meta/connect pending on server\n                                // that will be resumed to send messages to the client, when the\n                                // client has already closed the connection, thereby losing the messages.\n                                if (!_batch) {\n                                    _batch = true;\n                                    _cometd.startBatch();\n                                }\n\n                                // This handshake is aborted, as we will replay the prior handshake response\n                                return null;\n                            } else {\n                                _debug('Reload extension could not restore state', oldState);\n                            }\n                        } catch (x) {\n                            _debug('Reload extension error while trying to restore state', x);\n                        }\n                    }\n                    break;\n                }\n                case '/meta/connect':\n                {\n                    if (_reloading === true) {\n                        // The reload causes the failure of the outstanding /meta/connect,\n                        // which CometD will react to by sending another. Here we avoid\n                        // that /meta/connect messages are sent between the reload and\n                        // the destruction of the JavaScript context, so that we are sure\n                        // that the first /meta/connect is the one triggered after the\n                        // replay of the /meta/handshake by this extension.\n                        _debug('Reload extension aborting /meta/connect during reload');\n                        return null;\n                    }\n\n                    if (!_state.transportType) {\n                        _state.transportType = message.connectionType;\n                        _debug('Reload extension tracked transport type', _state.transportType);\n                    }\n                    break;\n                }\n                case '/meta/disconnect':\n                {\n                    _state = {};\n                    break;\n                }\n                default:\n                {\n                    break;\n                }\n            }\n            return message;\n        };\n\n        this.incoming = function(message) {\n            if (message.successful) {\n                switch (message.channel) {\n                    case '/meta/handshake':\n                    {\n                        // If the handshake response is already present, then we're replaying it.\n                        // Since the replay may have modified the handshake response, do not record it here.\n                        if (!_state.handshakeResponse) {\n                            // Save successful handshake response\n                            _state.handshakeResponse = message;\n                            _debug('Reload extension tracked handshake response', message);\n                        }\n                        break;\n                    }\n                    case '/meta/connect':\n                    {\n                        if (_batch) {\n                            _batch = false;\n                            _cometd.endBatch();\n                        }\n                        break;\n                    }\n                    case '/meta/disconnect':\n                    {\n                        _state = {};\n                        break;\n                    }\n                    default:\n                    {\n                        break;\n                    }\n                }\n            }\n            return message;\n        };\n\n        _configure(configuration);\n    };\n}));\n","var __self__ = (function (root) {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = root.DOMException\n}\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\nvar irrelevant = (function (exports) {\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(__self__);\ndelete __self__.fetch.polyfill\nexports = __self__.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = __self__.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = __self__.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = __self__.Headers\nexports.Request = __self__.Request\nexports.Response = __self__.Response\nmodule.exports = exports\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","export const BROWSER_STORAGE_TYPE = {\n    COOKIE: 'COOKIE',\n    SESSION: 'SESSION',\n};\n\n\n/**\n * Scope boundaries are values associated with runs. They help to define the *default* user permissions used when a run is created, althought further permission configuration can be done with {@link #LOCK_TYPE lock types}. Scopes also provide an index that in which a run can be queried for.\n *\n * Three parts -- boundary: level of hierarchy (ontology) that a piece of data belongs to. Specifically, a run, an asset, or a vault data\n * Boundary in which a piece of data (run, asset, vault) is ID-ed to (see scopeKey).\n *\n * psuedonymKey, goes in tandem w/ permit (lock types) --\n * Data lives and dies with scope, delete the scope, you lose the data and associated scopes\n *\n * @enum {string}\n */\nexport const SCOPE_BOUNDARY = {\n    /**\n     * Runs scoped by project, users and facilitators are allowed access so long as they are a user in a group on the project.\n     * @constant\n     * @type {string}\n     */\n    PROJECT: 'PROJECT',\n    /**\n     * Runs scoped by group, users and facilitators are allowed access only if they are in the associated group\n     * Groups are scoped by projects\n     * @constant\n     * @type {string}\n     */\n    GROUP: 'GROUP',\n    /**\n     * Runs scoped by episode, not sure what this one is permission-wise\n     * Episodes are scoped by groups\n     * @constant\n     * @type {string}\n     */\n    EPISODE: 'EPISODE',\n    /**\n     * Runs scoped by world, users are only allowed access to the if they are assigned to the associated world. Facilitators need only to belong on the group that created the world\n     * Worlds can be scoped by group or episode\n     * @constant\n     * @type {string}\n     */\n    WORLD: 'WORLD',\n};\n\n/**\n * Rituals are used to define the way in which the Epicenter stores a run while running actions like getting variables, saving meta data, and call model operations. Runs can exist in-memory for a certain amount of time before expiring, and requiring their revival again before use.\n * @enum {string}\n */\nexport const RITUAL = {\n    /**\n     * Allow GET action against archive, no revival of run\n     * @constant\n     * @type {string}\n     */\n    NONE: 'NONE',\n    /**\n     * A run with this ritual will be pulled into memory as needed, and will stay in memory until it's lifespan (defined in your project Settings) has expired.\n     * @constant\n     * @type {string}\n     */\n    REANIMATE: 'REANIMATE',\n    /**\n     * A run with this ritual will be pulled into memory as needed, and removed from memory afterwards.\n     * @constant\n     * @type {string}\n     */\n    EXORCISE: 'EXORCISE',\n};\n\n/**\n * Push categories are pre-defined channels types in which one might use to receive push channel updates\n * @enum {string}\n */\nexport const PUSH_CATEGORY = {\n    /**\n     * intended for messaging users\n     * yes pub\n     * @constant\n     * @type {string}\n     */\n    CHAT: 'CHAT',\n    /**\n     * Used for the {@link https://github.com/forio Consensus API}\n     * no pub\n     * @constant\n     * @type {string}\n     */\n    CONSENSUS: 'CONSENSUS',\n    /**\n     * intended for general non-chat, sim-level communication\n     * yes pub\n     * @constant\n     * @type {string}\n     */\n    CONTROL: 'CONTROL',\n    /**\n     * Used for the {@link https://github.com/forio Presence API}\n     * no pub\n     * @constant\n     * @type {string}\n     */\n    PRESENCE: 'PRESENCE',\n    /**\n     * intended for awaiting entering games\n     * yes pub\n     * @constant\n     * @type {string}\n     */\n    LOBBY: 'LOBBY',\n    /**\n     * Used for the {@link https://github.com/forio Run API}\n     * no pub\n     * @constant\n     * @type {string}\n     */\n    RUN: 'RUN',\n    /**\n     * internal\n     * @constant\n     * @type {string}\n     */\n    SYSTEM: 'SYSTEM',\n};\n\n/**\n * Lock types are used to define permissions in runs. They define which roles have which specific privileges associated with the run.\n * @enum {string}\n */\nexport const LOCK_TYPE = {\n    /**\n     * System -- Epicenter Manager\n     * @constant\n     * @type {string}\n     */\n    SYSTEM: 'SYSTEM',\n    /**\n     * System minus -- read-only system access, write for certain accounts; think Geromel\n     * @constant\n     * @type {string}\n     */\n    MONITER: 'MONITER',\n    /**\n     * Author -- Team Members (API keys)\n     * tied to one account (personal + current account)\n     * @constant\n     * @type {string}\n     */\n    AUTHOR: 'AUTHOR',\n    /**\n     * Author minus\n     * @constant\n     * @type {string}\n     */\n    SUPPORT: 'SUPPORT',\n    /**\n     * Facilitators\n     * @constant\n     * @type {string}\n     */\n    FACILITATOR: 'FACILITATOR',\n    /**\n     * Reviewers (weaker facilitator)\n     * Facilitator minus\n     * @constant\n     * @type {string}\n     */\n    REVIEWER: 'REVIEWER',\n    /**\n     * Users -- psuedonymKey required in scope\n     * e.g., an avatar -- GROUP scope, PARTICIPANT read, USER write, userKey pseudonymKey\n     * @constant\n     * @type {string}\n     */\n    USER: 'USER',\n    /**\n     * Leader\n     * Participant plus\n     * @constant\n     * @type {string}\n     */\n    LEADER: 'LEADER',\n    /**\n     * Participant\n     * @constant\n     * @type {string}\n     */\n    PARTICIPANT: 'PARTICIPANT',\n    /**\n     * Anonymous\n     * @constant\n     * @type {string}\n     */\n    ANONYMOUS: 'ANONYMOUS',\n};","/* eslint-disable no-new-func */\nexport const isBrowser = new Function('try {return this===window;}catch(e){ return false;}');\nexport const isNode = new Function('try {return this===global;}catch(e){return false;}');\n\nexport const toQueryString = (query) => {\n    if (typeof query === 'string') return query;\n    if (typeof query !== 'object') return '';\n    const queryArray = Array.isArray(query) ? query : Object.entries(query);\n    return queryArray.flatMap(([key, value]) => {\n        if (key === undefined || key === '') return [];\n        if (value === undefined || value === '') return [];\n        if (Array.isArray(value)) return value.map((v) => `${key}=${v}`);\n        return `${key}=${value}`;\n    }).join('&');\n};\n\nexport const last = (strOrArr) => strOrArr[strOrArr.length - 1];\nexport const prefix = (pre, str) => str.startsWith(pre) ? str : `${pre}${str}`;\n\n// Tries to return value at the end of a sequence of keys.\n// E.g. given an obj and keys = ['1', '2', '3'], it will try to\n// return obj['1']['2']['3']. Uses the defaultValue on error.\nexport const access = (obj, keys, defaultValue) => {\n    let ref = obj;\n    try {\n        keys.forEach((key) => ref = ref[key]);\n    } catch (err) {\n        if (err instanceof TypeError) {\n            return defaultValue;\n        }\n        throw err;\n    }\n    if (ref === undefined) return defaultValue;\n    return ref;\n};","import { cookies } from 'utils';\n\nclass Store {\n    _store;\n    constructor(store) {\n        this._store = store;\n    }\n    clear() {\n        this._store.clear();\n    }\n    get store() {\n        return this._store;\n    }\n    set store(store) {\n        this._store = store;\n    }\n}\n\nconst nodeMap = new Map();\nexport class NodeStore extends Store {\n    constructor() {\n        super(nodeMap);\n    }\n    getItem(key) {\n        return super.store.get(key);\n    }\n    setItem(key, value) {\n        return super.store.set(key, value);\n    }\n    removeItem(key) {\n        return super.store.delete(key);\n    }\n}\n\nexport class SessionStore extends Store {\n    constructor() {\n        super(window.sessionStorage);\n    }\n    getItem(key) {\n        return JSON.parse(super.store.getItem(key.toString()));\n    }\n    setItem(key, value) {\n        return super.store.setItem(key.toString(), JSON.stringify(value));\n    }\n    removeItem(key) {\n        return super.store.removeItem(key.toString());\n    }\n}\n\nexport class CookieStore {\n    constructor(options) {\n        const defaults = { domain: `.${window.location.hostname}`, path: '/' };\n        this.options = { ...defaults, ...options };\n    }\n    getItem(key) {\n        return JSON.parse(cookies.getItem(key.toString()));\n    }\n    setItem(key, value) {\n        return cookies.setItem(key.toString(), JSON.stringify(value), this.options);\n    }\n    removeItem(key) {\n        return cookies.removeItem(key.toString(), this.options);\n    }\n    clear() {\n        return cookies.clear();\n    }\n}\n","// Modified version of https://github.com/madmurphy/cookies.js\nconst getExpiration = (vEnd) => {\n    if (!vEnd) return '';\n    switch (vEnd.constructor) {\n        case Number: return vEnd === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : `; max-age=${vEnd}`;\n        /*\n            Note: Despite officially defined in RFC 6265, the use of `max-age` is not compatible with any\n            version of Internet Explorer, Edge and some mobile browsers. Therefore passing a number to\n            the end parameter might not work as expected. A possible solution might be to convert the the\n            relative time to an absolute time. For instance, replacing the previous line with:\n        */\n        /*\n            case Number: return vEnd === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : `; expires=${(new Date(vEnd * 1e3 + Date.now())).toUTCString()}`;\n        */\n        case String: return `; expires=${vEnd}`;\n        case Date: return `; expires=${vEnd.toUTCString()}`;\n        default: return '';\n    }\n};\n\nexport default {\n    getItem(key) {\n        if (!key) return null;\n        return decodeURIComponent(document.cookie.replace(new RegExp(`(?:(?:^|.*;)\\\\s*${encodeURIComponent(key).replace(/[\\-\\.\\+\\*]/g, '\\\\$&')}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`), '$1')) || null;\n    },\n    setItem(key, value, options = {}) {\n        if (!key || (/^(?:expires|max\\-age|path|domain|secure)$/i).test(key)) return false;\n\n        const { path, domain, end, secure, samesite } = options;\n        const expireStr = getExpiration(end);\n        const domainStr = domain ? `; domain=${domain}` : '';\n        const pathStr = path ? `; path=${path}` : '';\n        const secureStr = secure ? '; secure' : '';\n        const samesiteStr = samesite ? '; samesite' : '';\n\n        document.cookie = `${encodeURIComponent(key)}=${encodeURIComponent(value)}${expireStr}${domainStr}${pathStr}${secureStr}${samesiteStr}`;\n        return true;\n    },\n    removeItem(key, options = {}) {\n        if (!this.hasItem(key)) return false;\n        const { path, domain } = options;\n        const domainStr = domain ? `; domain=${domain}` : '';\n        const pathStr = path ? `; path=${path}` : '';\n        document.cookie = `${encodeURIComponent(key)}=; expires=Thu, 01 Jan 1970 00:00:00 GMT${domainStr}${pathStr}`;\n        return true;\n    },\n    hasItem(key) {\n        if (!key || (/^(?:expires|max\\-age|path|domain|secure)$/i).test(key)) return false;\n\n        return (new RegExp(`(?:^|;\\\\s*)${encodeURIComponent(key).replace(/[\\-\\.\\+\\*]/g, '\\\\$&')}\\\\s*\\\\=`)).test(document.cookie);\n    },\n    clear() {\n        const aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, '').split(/\\s*(?:\\=[^;]*)?;\\s*/);\n        for (let nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]);\n            this.removeItem(aKeys[nIdx]);\n        }\n        return aKeys;\n    },\n};\n","\n/* Generic throwable error */\nexport default class EpicenterError extends Error {\n\n    constructor(message) {\n\n        super(message);\n\n    }\n}","\n/* For failed network calls */\nexport default class Fault extends Error {\n\n    constructor(status, error) {\n\n        super();\n\n        const { information, message, cause } = error;\n        this.status = status;\n        this.message = message;\n\n        if (information) {\n            const { code, ...rest } = information;\n            this.code = code;\n            this.information = rest;\n        }\n        if (cause) {\n            this.cause = new Fault(cause);\n        }\n    }\n}","\n/* For network call responses */\nexport default class Result {\n\n    constructor(status, headers, body) {\n\n        this.status = status;\n        this.headers = headers;\n        this.body = body;\n\n    }\n}","import { Router } from 'utils';\n\nexport async function createAccount(options) {\n    const { objectType = 'personal', name, shortName, adminKey, subscriptionPlan, billingInterval } = options;\n    const response = await new Router()\n        .post('/account', {\n            body: { objectType, name, shortName, adminKey, subscriptionPlan, billingInterval },\n        });\n    return response;\n}\n\n// TODO -- just a copy-paste of create ATM; need to figuure out how to actually use\nexport async function updateAccount(options) {\n    const { objectType = 'personal', name, shortName, adminKey, subscriptionPlan, billingInterval } = options;\n    const response = await new Router()\n        .patch('/account', {\n            body: { objectType, name, shortName, adminKey, subscriptionPlan, billingInterval },\n        });\n    return response;\n}\n\nexport async function removeAccount(accountShortName) {\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .delete('/account');\n}","import { Router, identification } from 'utils';\nimport { cometdAdapter } from 'adapters';\n\nexport async function logout() {\n    identification.session = undefined;\n    await cometdAdapter.disconnect();\n}\n\nexport async function login(options) {\n    const { handle, password, groupKey, objectType = 'user', ...others } = options;\n    const { accountShortName, projectShortName } = others;\n\n    const response = await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .post('/authentication', {\n            body: { handle, password, groupKey, objectType },\n            includeAuthorization: false,\n            inert: true,\n        });\n    await logout();\n\n    identification.session = response.body;\n    return response;\n}\n\nexport async function upgrade(options) {\n    const { objectType = 'admin', inert, ...others } = options;\n    const { accountShortName, projectShortName } = others;\n\n    const response = await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .patch('/authentication', {\n            body: { objectType },\n            inert,\n        });\n    await logout();\n\n    identification.session = response.body;\n    return response;\n}\n\nexport async function sso(options) {\n    const { accountShortName, projectShortName } = options;\n\n    const response = await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .get('/registration/sso');\n\n    identification.session = response.body;\n    return response;\n}\n\nexport async function getSession() {\n    const response = await new Router().get('/authentication');\n\n    identification.session = response.body;\n    return response;\n}\n\nexport function getLocalSession() {\n    return identification.session;\n}\n","import { Router } from 'utils';\nimport { cometdAdapter } from 'adapters';\n\nexport async function forGroup(groupKey, options = {}) {\n    const { accountShortName, projectShortName } = options;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .get(`/presence/group/${groupKey}`);\n}\n\nexport async function forWorld(worldKey, options = {}) {\n    const { accountShortName, projectShortName } = options;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .get(`/presence/world/${worldKey}`);\n}\n\nexport async function connect() {\n    return cometdAdapter.handshake();\n}\n","import { Router } from 'utils';\n\nexport async function channelsEnabled(optionals = {}) {\n    const { accountShortName, projectShortName } = optionals;\n    const response = await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .get('/project/channel/isEnabled');\n    return response;\n}","import { EpicenterError, Router, prefix, identification } from 'utils';\nimport { LOCK_TYPE, SCOPE_BOUNDARY, RITUAL } from 'utils/constants';\n\n/**\n * Run API adapters -- use this to create, update, delete, and manage your runs\n * @namespace runAdapter\n */\n\n/**\n * Create a run.\n *\n * By default, all runs are created with the user's ID (`userKey`) and user-only read-write permissions, except in the case of world-scoped runs. For more information on scopes,\n * @memberof runAdapter\n * @example\n *\n * const { runAdapter, SCOPE_BOUNDARY } = epicenter;\n * runAdapter.create('model.py', {\n *      scopeBoundary: SCOPE_BOUNDARY.GROUP\n *      scopeKey: 000001713a246b0b34b5b5d274c057a5b2a7\n * });\n * @param {string} model Name of your model file\n * @param {Object} scope Scope associated with your run\n * @param {string} scope.scopeBoundary Scope boundary, defines the type of scope; See [SCOPE_BOUNDARY](#SCOPE_BOUNDARY) for all types\n * @param {string} scope.scopeKey Scope key, a unique identifier tied to the scope. E.g., if your `scopeBoundary` is `GROUP`, your `scopeKey` will be your `groupKey`; for `EPISODE`, `episodeKey`, etc.\n * @param {Object} [optionals={}] Something meaningful about optionals\n * @returns {Object} Something meaningful about returns\n */\nexport async function create(model, scope, optionals = {}) {\n    const { scopeBoundary, scopeKey } = scope;\n    const {\n        accountShortName, projectShortName, readLock, writeLock,\n        ephemeral, trackingKey, modelContext, executionContext,\n    } = optionals;\n\n    const { WORLD } = SCOPE_BOUNDARY;\n    const { PARTICIPANT, USER } = LOCK_TYPE;\n    const defaultLock = scopeBoundary === WORLD ? PARTICIPANT : USER;\n    const userKey = scopeBoundary === WORLD ? undefined : identification.session.userKey;\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .post('/run', {\n            body: {\n                scope: {\n                    scopeBoundary,\n                    scopeKey,\n                    userKey,\n                },\n                permit: {\n                    readLock: readLock || defaultLock,\n                    writeLock: writeLock || defaultLock,\n                },\n                morphology: 'MANY',\n                trackingKey,\n                modelFile: model,\n                modelContext: modelContext || {/* Is not recorded for clone. Overrides model ctx2 file. */},\n                executionContext: executionContext || {/* Affected by clone. Carries arguments for model file worker on model initialization */},\n                ephemeral,\n            },\n        });\n}\n\n/**\n * Clone a run\n * @memberof runAdapter\n * @param {string} runKey Run's key\n * @param {Object} [optionals={}] Object for all optional fields\n * @returns {Object} Response with the run in the \"body\"\n */\nexport async function clone(runKey, optionals = {}) {\n    const {\n        accountShortName, projectShortName, ephemeral,\n        trackingKey, modelContext = {}, executionContext = {},\n    } = optionals;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .post(`/run/clone/${runKey}`, {\n            body: {\n                trackingKey,\n                modelContext,\n                executionContext,\n                ephemeral,\n            },\n        });\n}\n\nexport async function restore(runKey, optionals = {}) {\n    const {\n        accountShortName, projectShortName, ephemeral,\n        modelContext = {}, executionContext = {},\n    } = optionals;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .post(`/run/restore/${runKey}`, {\n            body: {\n                modelContext,\n                executionContext,\n                ephemeral,\n            },\n        });\n}\n\nexport async function rewind(runKey, steps, optionals = {}) {\n    const {\n        accountShortName, projectShortName,\n        ephemeral, modelContext = {},\n    } = optionals;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .post(`/run/rewind/${runKey}`, {\n            body: {\n                rewindCount: steps,\n                modelContext,\n                ephemeral,\n            },\n        });\n}\n\nexport async function update(runKey, update, optionals = {}) {\n    const { readLock, writeLock, trackingKey, marked, hidden, closed } = update;\n    const { accountShortName, projectShortName } = optionals;\n    const hasMultiple = Array.isArray(runKey) && runKey.length > 1;\n    const uriComponent = hasMultiple ? '' : `/${runKey.length === 1 ? runKey[0] : runKey}`;\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(hasMultiple ? { runKey } : '')\n        .patch(`/run${uriComponent}`, {\n            body: {\n                readLock,\n                writeLock,\n                trackingKey,\n                marked,\n                hidden,\n                closed,\n            },\n        });\n}\n\nexport async function remove(runKey, optionals = {}) {\n    const { accountShortName, projectShortName } = optionals;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .delete(`/run/${runKey}`);\n}\n\nexport async function get(runKey, optionals = {}) {\n    const { accountShortName, projectShortName } = optionals;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .get(`/run/${runKey}`);\n}\n\n\nconst MAX_URL_LENGTH = 2048;\n/**\n * Queries for runs. Use this to look u\n * @memberof runAdapter\n *\n * @param {string} model Name of your model file\n * @param {Object} scope Scope associated with your run\n * @param {string} scope.scopeBoundary Scope boundary, defines the type of scope; See [SCOPE_BOUNDARY](#SCOPE_BOUNDARY) for all types\n * @param {string} scope.scopeKey Scope key, a unique identifier tied to the scope. E.g., if your `scopeBoundary` is `GROUP`, your `scopeKey` will be your `groupKey`; for `EPISODE`, `episodeKey`, etc.\n * @param {Object} [optionals={}] Something meaningful about optionals\n * @returns {Object} Something meaningful about returns\n */\nexport async function query(model, scope, optionals = {}) {\n    const { scopeBoundary, scopeKey } = scope;\n    const {\n        filter = {}, sort = [], first, max, timeout, projections = {},\n        accountShortName, projectShortName,\n    } = optionals;\n\n    const query = {\n        filter: [\n            ...(filter.variables || []).map((statement) => prefix('var.', statement)),\n            ...(filter.metadata || []).map((statement) => prefix('meta.', statement)),\n            ...(filter.attr || []).map((statement) => prefix('run.', statement)),\n        ].join(';'),\n        sort: sort.join(';'),\n        first,\n        max,\n        timeout,\n        projections: [\n            ...(projections.variables || []).map((name) => prefix('var.', name)),\n            ...(projections.metadata || []).map((name) => prefix('meta.', name)),\n            ...(projections.attr || []).map((name) => prefix('run.', name)),\n        ].join(';'),\n    };\n    const uriComponent = `/run/${scopeBoundary}/${scopeKey}/${model}`;\n    const router = new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(query);\n\n    const url = await router.getURL(uriComponent);\n    return encodeURI(url.toString()).length < MAX_URL_LENGTH ?\n        router.get(uriComponent) :\n        new Router()\n            .withAccountShortName(accountShortName)\n            .withProjectShortName(projectShortName)\n            .post(uriComponent, {\n                body: {/* TODO: put post body here */},\n            });\n}\n\nexport async function introspect(model, optionals = {}) {\n    const { accountShortName, projectShortName } = optionals;\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .get(`/run/introspect/${model}`);\n}\n\nexport async function operation(runKey, name, args = [], optionals = {}) {\n    const { accountShortName, projectShortName, timeout, ritual } = optionals;\n    const hasMultiple = Array.isArray(runKey) && runKey.length > 1;\n    const uriComponent = hasMultiple ? '' : `/${runKey.length === 1 ? runKey[0] : runKey}`;\n    const searchParams = hasMultiple ? { runKey, timeout } : { ritual, timeout };\n\n    if (ritual !== RITUAL.EXORCISE && hasMultiple) {\n        console.warn(`Detected ritual: ${ritual} usage with multiple runKeys; this not allowed. Defaulting to ritual: EXORCISE`);\n    }\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(searchParams)\n        .post(`/run/operation${uriComponent}`, {\n            body: { name, arguments: args },\n        });\n}\n\nexport async function getVariables(runKey, variables, optionals) {\n    const { accountShortName, projectShortName, timeout, ritual } = optionals;\n    const include = variables.join(';');\n    const hasMultiple = Array.isArray(runKey) && runKey.length > 1;\n    const uriComponent = hasMultiple ? '' : `/${runKey.length === 1 ? runKey[0] : runKey}`;\n    const searchParams = hasMultiple ? { runKey, timeout, include } : { ritual, timeout, include };\n\n    if (ritual !== RITUAL.EXORCISE && hasMultiple) {\n        console.warn(`Detected ritual: ${ritual} usage with multiple runKeys; this not allowed. Defaulting to ritual: EXORCISE`);\n    }\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(searchParams)\n        .get(`/run/variable${uriComponent}`);\n}\n\nexport async function getVariable(runKey, variable, optionals = {}) {\n    const { accountShortName, projectShortName, timeout, ritual } = optionals;\n\n    if (Array.isArray(runKey) || Array.isArray(variable)) {\n        const variables = Array.isArray(variable) ? variable : [variable];\n        return getVariables(runKey, variables, optionals);\n    }\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams({ timeout, ritual })\n        .get(`/run/variable/${runKey}/${variable}`);\n}\n\nexport async function updateVariables(runKey, update, optionals = {}) {\n    const { accountShortName, projectShortName, timeout, ritual } = optionals;\n    const hasMultiple = Array.isArray(runKey) && runKey.length > 1;\n    const uriComponent = hasMultiple ? '' : `/${runKey.length === 1 ? runKey[0] : runKey}`;\n    const searchParams = hasMultiple ? { runKey, timeout } : { ritual, timeout };\n\n    if (ritual !== RITUAL.EXORCISE && hasMultiple) {\n        console.warn(`Detected ritual: ${ritual} usage with multiple runKeys; this not allowed. Defaulting to ritual: EXORCISE`);\n    }\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(searchParams)\n        .patch(`/run/variable${uriComponent}`, { body: update });\n}\n\nexport async function getMetadata(runKey, variables, optionals = {}) {\n    const { accountShortName, projectShortName, timeout, ritual } = optionals;\n    const include = variables.join(';');\n    const hasMultiple = Array.isArray(runKey) && runKey.length > 1;\n    const uriComponent = hasMultiple ? '' : `/${runKey.length === 1 ? runKey[0] : runKey}`;\n    const searchParams = hasMultiple ? { runKey, timeout, include } : { ritual, timeout, include };\n\n    if (ritual !== RITUAL.EXORCISE && hasMultiple) {\n        console.warn(`Detected ritual: ${ritual} usage with multiple runKeys; this not allowed. Defaulting to ritual: EXORCISE`);\n    }\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(searchParams)\n        .get(`/run/meta${uriComponent}`);\n}\n\nexport async function updateMetadata(runKey, update, optionals = {}) {\n    const { accountShortName, projectShortName, timeout, ritual } = optionals;\n    const hasMultiple = Array.isArray(runKey) && runKey.length > 1;\n    const uriComponent = hasMultiple ? '' : `/${runKey.length === 1 ? runKey[0] : runKey}`;\n    const searchParams = hasMultiple ? { runKey, timeout } : { ritual, timeout };\n\n    if (ritual !== RITUAL.EXORCISE && hasMultiple) {\n        console.warn(`Detected ritual: ${ritual} usage with multiple runKeys; this not allowed. Defaulting to ritual: EXORCISE`);\n    }\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(searchParams)\n        .patch(`/run/meta${uriComponent}`, { body: update });\n}\n\nexport async function action(runKey, actionList, optionals = {}) {\n    const { accountShortName, projectShortName, timeout, ritual } = optionals;\n    const hasMultiple = Array.isArray(runKey) && runKey.length > 1;\n    const uriComponent = hasMultiple ? '' : `/${runKey.length === 1 ? runKey[0] : runKey}`;\n    const searchParams = hasMultiple ? { runKey, timeout } : { ritual, timeout };\n\n    if (ritual !== RITUAL.EXORCISE && hasMultiple) {\n        console.warn(`Detected ritual: ${ritual} usage with multiple runKeys; this not allowed. Defaulting to ritual: EXORCISE`);\n    }\n\n    return await new Router()\n        .withAccountShortName(accountShortName)\n        .withProjectShortName(projectShortName)\n        .withSearchParams(searchParams)\n        .post(`/run/action${uriComponent}`, { body: actionList });\n}\n\nasync function serial(runKey, operations, optionals) {\n    const normalizedOps = operations.map((item) => ({\n        name: typeof item === 'string' ? item : item.name,\n        params: item.params,\n    }));\n\n    //Perform all operations, sequentially\n    return normalizedOps.reduce((promiseChain, { name, params }) => {\n        return promiseChain.then(() => operation(runKey, name, params, optionals));\n    }, Promise.resolve());\n}\n\nexport async function getWithStrategy(strategy, model, scope, optionals = {}) {\n    const { initOperations = [] } = optionals;\n    if (strategy === 'reuse-across-sessions') {\n        const runs = await query(model, scope, { ...optionals, sort: ['-created'] });\n        if (runs.length) {\n            return runs[0];\n        }\n        const newRun = await create(model, scope, optionals);\n        await serial(newRun.runKey, initOperations, optionals);\n        return newRun;\n    } else if (strategy === 'reuse-never') {\n        const newRun = await create(model, scope, optionals);\n        await serial(newRun.runKey, initOperations, optionals);\n        return newRun;\n    } else if (strategy === 'reuse-by-tracking-key') {\n        //TBD write out if needed\n        //Platform plans to introduce run limits into episode scope, differing from v2's implementation of runLimit via 'reuse-by-tracking-key'\n    } else if (strategy === 'multiplayer') {\n        //TODO when multiplayer API is ready\n        //check the current world for this end user, return the current run for that world (if there is none, create a run for the world)\n    }\n    throw new EpicenterError('Invalid run strategy.');\n}\n","import AckExtension from 'cometd/AckExtension';\nimport ReloadExtension from 'cometd/ReloadExtension';\nimport config from '~/config';\nimport { EpicenterError, identification, isBrowser, errorManager } from 'utils';\nimport { channelsEnabled } from 'adapters/project';\n\nconst AUTH_TOKEN_KEY = 'com.forio.epicenter.token';\n\nconst DISCONNECTED = 'disconnected';\nconst CONNECTED = 'connected';\n\n\nclass CometdError extends Error {\n    constructor(reply) {\n\n        super();\n        const { error, successful } = reply;\n        if (error && error.includes('403') && !successful) {\n            this.status = 401;\n        }\n        this.information = reply;\n        this.message = error;\n    }\n}\n\nclass CometdAdapter {\n\n    url;\n    customCometd;\n    defaultCometd;\n    subscriptions = new Map();\n    state = DISCONNECTED;\n    requireAcknowledgement = true;\n    initialized = false;\n\n    get cometd() {\n        return this.customCometd || this.defaultCometd;\n    }\n\n    async reinit(customCometd, options) {\n        await this.disconnect();\n        this.initialized = false;\n        this.customCometd = customCometd;\n        return this.init(options);\n    }\n\n    async init(options = { logLevel: 'error' }) {\n        if (this.initialized) {\n            return;\n        }\n\n        if (isBrowser()) {\n            const cometd = await import('cometd');\n            this.defaultCometd = new cometd.CometD();\n        }\n\n        const { apiProtocol, apiHost, apiVersion } = config;\n        this.url = `${apiProtocol}://${apiHost}/push/v${apiVersion}/cometd`;\n        this.cometd.registerExtension('ack', new AckExtension());\n        this.cometd.registerExtension('reload', new ReloadExtension());\n        this.cometd.configure({\n            url: this.url,\n            logLevel: options.logLevel,\n        });\n\n        if (isBrowser()) {\n            window.onunload = () => {\n                if (this.cometd.getStatus() === CONNECTED) {\n                    this.cometd.reload();\n                    this.cometd.getTransport().abort();\n                }\n            };\n        }\n        this.initialized = true;\n    }\n\n    async checkEnabled() {\n        const res = await channelsEnabled();\n        const enabled = res.body;\n        if (!enabled) throw new EpicenterError('Push Channels are not enabled on this project');\n    }\n\n    // Connects to CometD server\n    async handshake(options = {}) {\n        await this.checkEnabled();\n        await this.init();\n\n        if (this.cometd.getStatus() !== DISCONNECTED) {\n            return Promise.resolve();\n        }\n\n        const handshakeProps = {};\n        const { session } = identification;\n\n        if (session) {\n            handshakeProps.ext = {\n                [AUTH_TOKEN_KEY]: session.token,\n                ack: this.requireAcknowledgement,\n            };\n        }\n\n        this.cometd.ackEnabled = this.requireAcknowledgement;\n        this.cometd.websocketEnabled = true;\n        return new Promise((resolve, reject) => this.cometd.handshake(handshakeProps, (handshakeReply) => {\n            if (handshakeReply.successful) {\n                resolve(handshakeReply);\n                return;\n            }\n\n            const error = new CometdError(handshakeReply);\n\n            if (options.inert) {\n                reject(error);\n                return;\n            }\n\n            const retry = () => this.handshake({ inert: true });\n            try {\n                const result = errorManager.handle(error, retry);\n                resolve(result);\n            } catch (e) {\n                reject(e);\n            }\n        }));\n    }\n\n    async disconnect() {\n        if (!this.cometd) return Promise.resolve();\n\n        await this.init();\n        await this.empty();\n        if (this.cometd.getStatus() !== CONNECTED) return Promise.resolve();\n\n        return new Promise((resolve, reject) => this.cometd.disconnect((disconnectReply) => {\n            if (!disconnectReply.successful) {\n                reject(new EpicenterError('Unable to disconnect from CometD server'));\n            } else {\n                resolve();\n            }\n        }));\n    }\n\n    async add(channel, update, options = {}) {\n        await this.init();\n        const channels = [].concat(channel);\n\n        if (this.cometd.getStatus() !== CONNECTED) {\n            await this.handshake();\n        }\n        const subscriptionProps = {};\n        const { session } = identification;\n        if (session) {\n            subscriptionProps.ext = { [AUTH_TOKEN_KEY]: session.token };\n        }\n\n        const handleCometdUpdate = ({ channel, data }) => {\n            data = typeof data === 'string' ? JSON.parse(data) : data;\n            return update(data);\n        };\n        const promises = [];\n        this.cometd.batch(() => channels.forEach(({ path }) => promises.push(new Promise((resolve, reject) => {\n            const subscription = this.cometd.subscribe(path, handleCometdUpdate, subscriptionProps, (subscribeReply) => {\n                if (subscribeReply.successful) {\n                    this.subscriptions.set(subscription.channel, subscription);\n                    resolve(subscription);\n                    return;\n                }\n\n                const error = new CometdError(subscribeReply);\n\n                if (options.inert) {\n                    reject(error);\n                    return;\n                }\n\n                const retry = () => this.add(channel, update, { inert: true });\n                try {\n                    const result = errorManager.handle(error, retry);\n                    resolve(result);\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        }))));\n        return promises.length === 1 ?\n            Promise.all(promises).then(([res]) => res) :\n            Promise.all(promises);\n    }\n\n    async publish(channel, content, options = {}) {\n        await this.init();\n        const channels = [].concat(channel);\n\n        if (this.cometd.getStatus() !== CONNECTED) {\n            await this.handshake();\n        }\n        const publishProps = {};\n        const { session } = identification;\n        if (session) {\n            publishProps.ext = { [AUTH_TOKEN_KEY]: session.token };\n        }\n        const promises = [];\n        this.cometd.batch(() => channels.forEach(({ path }) => promises.push(new Promise((resolve, reject) => {\n            this.cometd.publish(path, content, publishProps, (publishReply) => {\n                if (publishReply.successful) {\n                    resolve(publishReply);\n                    return;\n                }\n\n                const error = new CometdError(publishReply);\n\n                if (options.inert) {\n                    reject(error);\n                    return;\n                }\n\n                const retry = () => this.publish(channel, content, { inert: true });\n                try {\n                    const result = errorManager.handle(error, retry);\n                    resolve(result);\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        }))));\n        return promises.length === 1 ?\n            Promise.all(promises).then(([res]) => res) :\n            Promise.all(promises);\n    }\n\n    async remove(subscription) {\n        await this.init();\n        this.subscriptions.delete(subscription.channel);\n        return new Promise((resolve, reject) => this.cometd.unsubscribe(subscription, (unsubscribeReply) => {\n            if (unsubscribeReply.successful) {\n                resolve(unsubscribeReply);\n            }\n            const error = new CometdError(unsubscribeReply);\n            reject(error);\n            /* Not using error handling here yet -- should we? */\n        }));\n    }\n\n    async empty() {\n        await this.init();\n        const promises = [];\n        this.cometd.batch(() => this.subscriptions.forEach((subscription) => {\n            promises.push(this.remove(subscription));\n        }));\n        return Promise.all(promises);\n    }\n}\nconst cometdAdapter = new CometdAdapter();\nexport default cometdAdapter;\n\n","import { EpicenterError } from 'utils';\nimport { cometdAdapter } from 'adapters';\nimport { SCOPE_BOUNDARY, PUSH_CATEGORY } from 'utils/constants';\n\nconst validateScope = (scope) => {\n    if (!scope) throw new EpicenterError('No scope found where one was required');\n    const { scopeBoundary, scopeKey, pushCategory } = scope;\n    if (!scopeBoundary) throw new EpicenterError('Missing scope component: scopeBoundary');\n    if (!scopeKey) throw new EpicenterError('Missing scope component: scopeKey');\n    if (!pushCategory) throw new EpicenterError('Missing scope component: pushCategory');\n    if (!SCOPE_BOUNDARY.hasOwnProperty(scopeBoundary)) throw new EpicenterError(`Invalid scope boundary: ${scopeBoundary}`);\n    if (!PUSH_CATEGORY.hasOwnProperty(pushCategory)) throw new EpicenterError(`Invalid push category: ${pushCategory}`);\n};\n\n/** Channel thingy */\nexport default class Channel {\n\n    path;\n    update;\n    subscription;\n\n    /**\n     * Make a new channel\n     * @param {*} scope wordsd here\n     */\n    constructor(scope) {\n        const { scopeBoundary, scopeKey, pushCategory } = scope;\n        validateScope(scope);\n        this.path = `/${scopeBoundary.toLowerCase()}/${scopeKey}/${pushCategory.toLowerCase()}`;\n        if (cometdAdapter.subscriptions.has(this.path)) {\n            this.subscription = cometdAdapter.subscriptions.get(this.path);\n        }\n    }\n\n    /** This is the publis cahh\n     * @param {*} content someom\n     * @returns {Promise} something here\n     */\n    publish(content) {\n        return cometdAdapter.publish(this, content);\n    }\n\n    async subscribe(update, options) {\n        if (this.subscription) await this.unsubscribe();\n        this.update = update;\n        return cometdAdapter.add(this, update, options).then((subscription) => {\n            this.subscription = subscription;\n            return subscription;\n        });\n    }\n\n    async unsubscribe() {\n        if (this.subscription) {\n            await cometdAdapter.remove(this.subscription);\n            this.subscription = null;\n        }\n    }\n}\n\n\n","import { authAdapter } from 'adapters';\nimport { identification, isNode, access } from 'utils';\n\n\nconst handleByRelog = (error) => {\n    let query = '';\n    if (error.code) {\n        query = query.concat(`?error=${error.code}`);\n    }\n    return authAdapter.logout().then(() => window.location.href = `/login.html${query}`);\n};\n\nconst handleSSO = () => {\n    return authAdapter.logout();\n};\n\nconst handleUnknown = () => {\n    return authAdapter.logout().then(() => window.location.href = '/unknown.html');\n};\n\nconst handleByLoginMethod = (error) => {\n    const { session } = identification;\n    const loginType = access(session, ['loginMethod', 'objectType']);\n    switch (loginType) {\n        case 'sso': return handleSSO(error);\n        case 'none':return handleUnknown(error);\n        case 'native':\n        default: return handleByRelog(error);\n    }\n};\n\nconst UNAUTHORIZED = 401;\nclass ErrorManager {\n    _handlers = [\n        {/* Default Unauthorized (401) Error Handler */\n            identifier: (error) => error.status === UNAUTHORIZED,\n            handle: (error, retry) => {\n                if (error.code === 'AUTHENTICATION_INVALIDATED') {\n                    return authAdapter.upgrade({ objectType: 'user', inert: true })\n                        .then(() => retry())\n                        .catch(() => handleByLoginMethod(error));\n                }\n                if (isNode()) return Promise.reject(error);\n                return handleByLoginMethod(error);\n            },\n        },\n    ];\n\n    get handlers() {\n        return this._handlers;\n    }\n\n    registerHandler(identifier, handleFn) {\n        this.handlers.unshift({\n            identifier,\n            handle: handleFn,\n        });\n    }\n\n    async handle(error, retryFn, handlers/* which is undefined unless recursing */) {\n        handlers = handlers || this.handlers;\n        const index = handlers.findIndex(({ identifier }) => identifier(error));\n        const handler = handlers[index];\n        const remainingHandlers = index > 0 ? handlers.slice(index + 1) : [];\n        if (!handler) throw error;\n        let promise;\n        try {\n            promise = await handler.handle(error, retryFn).catch((err) => {\n                /* This catch call ensures that handle always returns a promise,\n                otherwise it'd be caught in the catch block below */\n                throw err;\n            });\n        } catch (e) {\n            promise = await this.handle(error, retryFn, remainingHandlers);\n        }\n        return promise;\n    }\n}\n\nconst errorManager = new ErrorManager();\nexport default errorManager;\n","import config from '~/config';\nimport { EpicenterError, NodeStore, SessionStore, CookieStore, cookies, isNode } from 'utils';\nimport { BROWSER_STORAGE_TYPE } from 'utils/constants';\nconst { COOKIE, SESSION } = BROWSER_STORAGE_TYPE;\n\n\nconst SESSION_KEY = Symbol('com.forio.epicenter.session');\nconst EPI_SSO_KEY = 'epicenter.v3.sso';\nclass Identification {\n    type\n\n    constructor(storeType) {\n        if (storeType !== COOKIE && storeType !== SESSION) {\n            throw new EpicenterError(`Invalid Storage Type: \"${storeType}\", please use \"${COOKIE}\" or \"${SESSION}\".`);\n        }\n        this.type = storeType;\n        this.consumeSSO();\n    }\n    get session() {\n        const Store = this.getStore();\n        return new Store().getItem(SESSION_KEY.description);\n    }\n    set session(session) {\n        const Store = this.getStore();\n        const path = this.getSessionPath(session);\n\n        if (session) {\n            new Store({ path }).setItem(SESSION_KEY.description, session);\n        } else if (this.session) {\n            new Store({ path }).removeItem(SESSION_KEY.description);\n        }\n    }\n    getStore() {\n        if (isNode()) return NodeStore;\n        switch (this.type) {\n            case SESSION: return SessionStore;\n            case COOKIE:\n            default: return CookieStore;\n        }\n    }\n    /* Generates the appropriate path for storing your session (applicable only to cookies) */\n    getSessionPath(session) {\n        const mySession = session || this.session;\n        if (!mySession || isNode()) return '';\n\n        const { accountShortName, projectShortName, objectType } = mySession;\n        const isLocal = config.isLocal();\n        const isCustomDomain = !isLocal && window.location.pathname.split('/')[1] !== 'app';\n        const isEpicenterDomain = !isLocal && !isCustomDomain;\n        if (objectType === 'user' && accountShortName && projectShortName && isEpicenterDomain) {\n            return `/app/${accountShortName}/${projectShortName}`;\n        }\n        /* Admins and any custom domains (ones that don't use 'app/account/project') get the root path */\n        return '/';\n    }\n    consumeSSO() {\n        if (isNode()) return;\n        /* Double parse here b/c the backend serializes it as a string; the first parse\n         * converts it into a json string, the second parse converts the json string into\n         * json. Yes, it's weird, no, we can't change it (unless we want to rewrite\n         * Interface Builder code to accommodate) */\n        const session = JSON.parse(JSON.parse(`\"${cookies.getItem(EPI_SSO_KEY)}\"`));\n        if (session) {\n            const { accountShortName, projectShortName } = session;\n            this.session = session;\n            cookies.removeItem(EPI_SSO_KEY, { domain: `.${window.location.hostname}`, path: `/app/${accountShortName}/${projectShortName}` });\n        }\n    }\n}\n\nconst identification = new Identification(COOKIE);\nexport default identification;\n\n","import fetch from 'cross-fetch';\nimport config from '~/config';\nimport { EpicenterError, Fault, Result, identification, toQueryString, prefix, errorManager } from 'utils';\n\n\nconst DEFAULT_ACCOUNT_SHORT_NAME = 'epicenter';\nconst DEFAULT_PROJECT_SHORT_NAME = 'manager';\n\nasync function request(url, { method, body, includeAuthorization, inert }) {\n    const headers = {\n        'Content-type': 'application/json; charset=UTF-8',\n    };\n    const { session } = identification;\n    if (includeAuthorization && session) {\n        headers.Authorization = `Bearer ${session.token}`;\n    }\n\n    const response = await fetch(url, {\n        method: method,\n        cache: 'no-cache',\n        headers: headers,\n        redirect: 'follow',\n        body: body ? JSON.stringify(body) : null,\n    });\n\n    const contentType = response.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/json')) {\n        throw new EpicenterError(`Response content-type '${contentType}' does not include 'application/json'`);\n    }\n\n    if ((response.status >= 200) && (response.status < 400)) {\n        return new Result(response.status, response.headers, await response.json());\n    }\n\n    const error = new Fault(response.status, await response.json());\n    if (inert) throw error;\n\n    const retry = () => request(url, { method, body, includeAuthorization, inert: true });\n    return errorManager.handle(error, retry);\n}\n\nexport default class Router {\n    get server() {\n        return this._server;\n    }\n\n    set server(value) {\n        this._server = value;\n    }\n\n    get version() {\n        return this._version;\n    }\n\n    set version(value) {\n        this._version = value;\n    }\n\n    get accountShortName() {\n        return this._accountShortName;\n    }\n\n    set accountShortName(value) {\n        this._accountShortName = value;\n    }\n\n    get projectShortName() {\n        return this._projectShortName;\n    }\n\n    set projectShortName(value) {\n        this._projectShortName = value;\n    }\n\n    get searchParams() {\n        return this._searchParams || '';\n    }\n\n    set searchParams(value) {\n        this._searchParams = toQueryString(value);\n    }\n\n    withServer(server) {\n        if (server) this.server = server;\n        return this;\n    }\n\n    withVersion(version) {\n        if (version) this.version = version;\n        return this;\n    }\n\n    withAccountShortName(accountShortName) {\n        if (accountShortName) this.accountShortName = accountShortName;\n        return this;\n    }\n\n    withProjectShortName(projectShortName) {\n        if (projectShortName) this.projectShortName = projectShortName;\n        return this;\n    }\n\n    withSearchParams(searchParams) {\n        if (!searchParams) return this;\n        const isEmpty = typeof searchParams === 'object' && Object.entries(searchParams).length === 0;\n        if (!isEmpty) this.searchParams = searchParams;\n        return this;\n    }\n\n    configure() {\n        if (!this.server) this.withServer(`${config.apiProtocol}://${config.apiHost}`);\n        if (!this.accountShortName) this.withAccountShortName(config.accountShortName);\n        if (!this.projectShortName) this.withProjectShortName(config.projectShortName);\n        if (!this.version) this.withVersion(config.apiVersion);\n    }\n\n    getURL(uriComponent) {\n        this.configure();\n        const url = new URL(`${this.server}`);\n        url.pathname = `api/v${this.version}/${this.accountShortName}/${this.projectShortName}${prefix('/', uriComponent)}`;\n        url.search = this.searchParams;\n        return url;\n    }\n\n    //Network Requests\n    async get(uriComponent, options) {\n        const url = this.getURL(uriComponent);\n        return request(url, {\n            includeAuthorization: true,\n            ...options,\n            method: 'GET',\n        });\n    }\n\n    async delete(uriComponent, options) {\n        const url = this.getURL(uriComponent);\n        return request(url, {\n            includeAuthorization: true,\n            ...options,\n            method: 'DELETE',\n        });\n    }\n\n    async patch(uriComponent, options) {\n        const url = this.getURL(uriComponent);\n        return request(url, {\n            includeAuthorization: true,\n            ...options,\n            method: 'PATCH',\n        });\n    }\n\n    async post(uriComponent, options) {\n        const url = this.getURL(uriComponent);\n        return request(url, {\n            includeAuthorization: true,\n            ...options,\n            method: 'POST',\n        });\n    }\n\n    async put(uriComponent, options) {\n        const url = this.getURL(uriComponent);\n        return request(url, {\n            includeAuthorization: true,\n            ...options,\n            method: 'PUT',\n        });\n    }\n}\n","import { EpicenterError, isBrowser, isNode } from 'utils';\n\nconst API_VERSION = 3;\nclass Config {\n    _apiVersion = API_VERSION;\n\n    constructor() {\n        if (isBrowser()) return this.loadBrowser();\n        if (isNode()) return this.loadNode();\n        throw new EpicenterError('Could not identify environment; no configuration was setup');\n    }\n\n    /**\n     * Protocol used to make network requests (whether `http://` or `https://`). It is typically set on-load based on your browser's URL. For local development, this is defaulted to `https`, and can be overwritten if desired.\n     * @memberof config\n     * @type {string}\n     *  */\n    get apiProtocol() {\n        return this._apiProtocol;\n    }\n\n    set apiProtocol(apiProtocol) {\n        if (!apiProtocol.startsWith('http')) return;\n        if (apiProtocol.endsWith(':')) {\n            apiProtocol = apiProtocol.slice(0, -1);\n        }\n        this._apiProtocol = apiProtocol;\n    }\n\n    /**\n     * Hostname used to make network requests. It is typically set on-load based on your browser's URL. For local development, this is defaulted to `forio.com`, and can be overwritten if desired.\n     * @memberof config\n     * @type {string}\n     *  */\n    get apiHost() {\n        return this._apiHost;\n    }\n\n    set apiHost(apiHost) {\n        this._apiHost = apiHost;\n    }\n\n    /**\n     * Version used to make network requests. This is read-only variable intended for internal use.\n     * @memberof config\n     * @type {number}\n     */\n    get apiVersion() {\n        return this._apiVersion;\n    }\n\n    set apiVersion(apiVersion) {\n        return;\n    }\n\n    /**\n     * Account name used for making network requests. This is the default value used by Epicenter API adapters when making network requests without explicitly defining an account to use. It is defined on-load based on your browser's URL, and can be overwritten for local development.\n     * @example\n     * // with browser URL: https://forio.com/app/acme-simulations/foobar-game\n     *\n     * console.log(epicenter.config.accountShortName);\n     * // should log 'acme-simulations'\n     *\n     * epicenter.runAdapter.get(123);\n     * // instantiates a GET call with the URL: https://forio.com/api/v3/acme-simulations/foobar-game/run/123\n     *\n     * epicenter.config.accountShortName = 'globex-simuations';\n     * epicenter.runAdapter.get(123);\n     * // now instantiates a GET with the URL: https://forio.com/api/v3/globex-simulations/foobar-game/run/123\n     *\n     * epicenter.runAdapter.get(123, { accountShortName: 'initech-simulations' });\n     * // now instantiates a GET with the URL: https://forio.com/api/v3/initech-simulations/foobar-game/run/123\n     *\n     * @memberof config\n     * @type {string}\n     */\n    get accountShortName() {\n        return this._accountShortName;\n    }\n\n    set accountShortName(accountShortName) {\n        this._accountShortName = accountShortName;\n    }\n    /**\n     * Project name used for making network requests. This is the default value used by Epicenter API adapters when making network requests without explicitly defining an account to use. It is defined on-load based on your browser's URL, and can be overwritten for local development.\n     * @example\n     * // with browser URL: https://forio.com/app/acme-simulations/foobar-game\n     *\n     * console.log(epicenter.config.projectShortName);\n     * // should log 'foobar-game'\n     *\n     * epicenter.runAdapter.get(123);\n     * // instantiates a GET call with the URL: https://forio.com/api/v3/acme-simulations/foobar-game/run/123\n     *\n     * epicenter.config.projectShortName = 'barfoo-game';\n     * epicenter.runAdapter.get(123);\n     * // now instantiates a GET with the URL: https://forio.com/api/v3/acme-simulations/barfoo-game/run/123\n     *\n     * epicenter.runAdapter.get(123, { projectShortName: 'barbaz-game' });\n     * // now instantiates a GET with the URL: https://forio.com/api/v3/acme-simulations/barbaz-game/run/123\n     *\n     * @memberof config\n     * @type {string}\n     */\n    get projectShortName() {\n        return this._projectShortName;\n    }\n\n    set projectShortName(projectShortName) {\n        this._projectShortName = projectShortName;\n    }\n\n    /**\n     * Use to determines whether or not the environment is local.\n     * @memberof config\n     * @return {Boolean} whether or not environment is local.\n     */\n    isLocal() {\n        if (!isBrowser()) return false;\n        const host = window.location.host;\n        return host === '127.0.0.1' ||\n            host.indexOf('local.') === 0 ||\n            host.indexOf('ngrok') !== -1 ||\n            host.indexOf('localhost') === 0;\n    }\n\n    loadNode() {\n        // TODO -- use process env variables instead here for Node server\n        this.apiProtocol = 'https';\n        this.apiHost = 'test.forio.com';\n        return;\n    }\n\n    loadBrowser() {\n        const isLocal = this.isLocal();\n        const { protocol, pathname, host } = window.location;\n        this.apiProtocol = isLocal ? 'https' : protocol;\n        this.apiHost = isLocal ? 'forio.com' : host;\n\n        const match = pathname.match(/\\/app\\/([\\w-]+)\\/([\\w-]+)/);\n        if (match) {\n            const [account, project] = match.slice(1);\n            this.accountShortName = account;\n            this.projectShortName = project;\n        }\n    }\n}\n\nconst config = new Config();\n/**\n * Configuration -- used to set up and configure global settings for Epicenter JS libs.\n * @namespace config\n */\nexport default config;\n","/* Main file; defines public interface & load order */\nconst version = VERSION;\nexport { default as config } from '~/config';\nexport { version };\nexport {\n    SCOPE_BOUNDARY,\n    RITUAL,\n    PUSH_CATEGORY,\n    LOCK_TYPE,\n} from 'utils/constants';\nexport {\n    errorManager,\n} from 'utils';\nexport {\n    Channel,\n    accountAdapter,\n    authAdapter,\n    presenceAdapter,\n    projectAdapter,\n    runAdapter,\n} from 'adapters';\n"],"sourceRoot":""}