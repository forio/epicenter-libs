[{"name":"Epicenter API Adapters","kind":"note","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"hasMembers":false,"memberHeading":"","descriptionHTML":"<p>The Epicenter API Adapters are part of the epicenter.js library. This library abstracts the underlying Epicenter RESTful APIs into a set of services and utilities.</p><p>Maybe they're worth looking at?</p><p>Maybe not.</p>"},{"name":"config","kind":"namespace","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"apiProtocol","kind":"member","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Protocol used to make network requests (whether <code>http://</code> or <code>https://</code>). It is typically set on-load based on your browser's URL. For local development, this is defaulted to <code>https</code>, and can be overwritten if desired.</p>"},{"name":"apiHost","kind":"member","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Hostname used to make network requests. It is typically set on-load based on your browser's URL. For local development, this is defaulted to <code>forio.com</code>, and can be overwritten if desired.</p>"},{"name":"apiVersion","kind":"member","typeName":"number","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Version used to make network requests. This is read-only variable intended for internal use.</p>"},{"name":"accountShortName","kind":"member","typeName":"string","examples":[{"description":"// with browser URL: https://forio.com/app/acme-simulations/foobar-game\n\nconsole.log(epicenter.config.accountShortName);\n// should log 'acme-simulations'\n\nepicenter.runAdapter.get(123);\n// instantiates a GET call with the URL: https://forio.com/api/v3/acme-simulations/foobar-game/run/123\n\nepicenter.config.accountShortName = 'globex-simuations';\nepicenter.runAdapter.get(123);\n// now instantiates a GET with the URL: https://forio.com/api/v3/globex-simulations/foobar-game/run/123\n\nepicenter.runAdapter.get(123, { accountShortName: 'initech-simulations' });\n// now instantiates a GET with the URL: https://forio.com/api/v3/initech-simulations/foobar-game/run/123"}],"returns":[],"params":[],"descriptionHTML":"<p>Account name used for making network requests. This is the default value used by Epicenter API adapters when making network requests without explicitly defining an account to use. It is defined on-load based on your browser's URL, and can be overwritten for local development.</p>"},{"name":"projectShortName","kind":"member","typeName":"string","examples":[{"description":"// with browser URL: https://forio.com/app/acme-simulations/foobar-game\n\nconsole.log(epicenter.config.projectShortName);\n// should log 'foobar-game'\n\nepicenter.runAdapter.get(123);\n// instantiates a GET call with the URL: https://forio.com/api/v3/acme-simulations/foobar-game/run/123\n\nepicenter.config.projectShortName = 'barfoo-game';\nepicenter.runAdapter.get(123);\n// now instantiates a GET with the URL: https://forio.com/api/v3/acme-simulations/barfoo-game/run/123\n\nepicenter.runAdapter.get(123, { projectShortName: 'barbaz-game' });\n// now instantiates a GET with the URL: https://forio.com/api/v3/acme-simulations/barbaz-game/run/123"}],"returns":[],"params":[],"descriptionHTML":"<p>Project name used for making network requests. This is the default value used by Epicenter API adapters when making network requests without explicitly defining an account to use. It is defined on-load based on your browser's URL, and can be overwritten for local development.</p>"},{"name":"isLocal","kind":"function","typeName":"Function","examples":[],"returns":[{"typeName":"Boolean","descriptionHTML":"<p>whether or not environment is local.</p>"}],"params":[],"descriptionHTML":"<p>Use to determines whether or not the environment is local.</p>"}]},"hasMembers":true,"memberHeading":"Methods","descriptionHTML":"<p>Configuration -- used to set up and configure global settings for Epicenter JS libs.</p>"},{"name":"runAdapter","kind":"namespace","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"create","kind":"function","typeName":"Function","examples":[{"description":"const { runAdapter } = epicenter;\nrunAdapter.create('myModal.py', {\n     scopeBoundary:\n     scope:\n});"}],"returns":[{"typeName":"Object","descriptionHTML":"<p>Response with the run in the \"body\"</p>"}],"params":[{"name":"model","properties":[],"typeName":"string","descriptionHTML":"<p>Name of the <strong>model EMPEEEE</strong> file that is hosted on Epicenter <a>Link!?</a></p>"},{"name":"scope","properties":[{"name":"scope.scopeBoundary","properties":[],"typeName":"string","descriptionHTML":"<p>Scope Boundary (one of enumeration of values)</p>"},{"name":"scope.scopeKey","properties":[],"typeName":"string","descriptionHTML":"<p>Key value of item bounded by the scope</p>"},{"name":"scope.pseudonymKey","properties":[],"typeName":"string","descriptionHTML":"<p>Key of the user creating the run.</p>"}],"typeName":"Object","descriptionHTML":"<p>Object with the fields necessary to provide scoping for your channel</p>"},{"name":"optionals","properties":[],"default":"{}","typeName":"Object","isOptional":"{}","descriptionHTML":"<p>Object for all optional fields</p>"}],"descriptionHTML":"<p>Create a run</p>"},{"name":"clone","kind":"function","typeName":"Function","examples":[],"returns":[{"typeName":"Object","descriptionHTML":"<p>Response with the run in the \"body\"</p>"}],"params":[{"name":"runKey","properties":[],"typeName":"string","descriptionHTML":"<p>Run's key</p>"},{"name":"optionals","properties":[],"default":"{}","typeName":"Object","isOptional":"{}","descriptionHTML":"<p>Object for all optional fields</p>"}],"descriptionHTML":"<p>Clone a run</p>"}]},"hasMembers":true,"memberHeading":"Methods","descriptionHTML":"<p>Has all the run adapters see this other <a href=\"https://github.com/forio\">Forio</a> more comment here</p>"},{"name":"RITUAL","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"NONE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Allow GET action against archive, no revival of run</p>"},{"name":"REANIMATE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>A run with this ritual will be pulled into memory as needed, and will stay in memory until it's lifespan (defined in your project Settings) has expired.</p>"},{"name":"EXORCISE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>A run with this ritual will be pulled into memory as needed, and removed from memory afterwards.</p>"}]},"hasMembers":true,"memberHeading":"Members","descriptionHTML":"<p>Rituals are used to define the way in which the Epicenter stores a run while running actions like getting variables, saving meta data, and call model operations. Runs can exist in-memory for a certain amount of time before expiring, and requiring their revival again before use.</p>"},{"name":"Channel","kind":"class","members":{"global":[],"inner":[],"instance":[{"name":"publish","kind":"function","typeName":"Function","examples":[],"returns":[{"typeName":"Promise","descriptionHTML":"<p>something here</p>"}],"params":[{"name":"content","properties":[],"isOptional":true,"descriptionHTML":"<p>someom</p>"}],"descriptionHTML":"<p>This is the publis cahh</p>"}],"events":[],"static":[]},"hasMembers":true,"memberHeading":"Methods","descriptionHTML":"<p>Channel thingy</p>"},{"name":"SCOPE_BOUNDARY","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"PROJECT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by project, users and facilitators are allowed access so long as they are a user in a group on the project.</p>"},{"name":"GROUP","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by group, users and facilitators are allowed access only if they are in the associated group</p>"},{"name":"EPISODE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by episode, not sure what this one is permission-wise</p>"},{"name":"WORLD","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by world, users are only allowed access to the if they are assigned to the associated world. Facilitators need only to belong on the group that created the world</p>"}]},"hasMembers":true,"memberHeading":"Members","descriptionHTML":"<p>Scope boundaries are values associated with runs. They help to define the <strong>default</strong> user permissions used when a run is created, althought further permission configuration can be done with <a href=\"#LOCK_TYPE\">lock types</a>. Scopes also provide an index that in which a run can be queried for.</p><p>Three parts -- boundary: level of hierarchy (ontology) that a piece of data belongs to. Specifically, a run, an asset, or a vault data\nBoundary in which a piece of data (run, asset, vault) is ID-ed to (see scopeKey).</p><p>psuedonymKey, goes in tandem w/ permit (lock types) --\nData lives and dies with scope, delete the scope, you lose the data and associated scopes</p>"},{"name":"PUSH_CATEGORY","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"CHAT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>intended for messaging users\nyes pub</p>"},{"name":"CONSENSUS","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Used for the <a href=\"https://github.com/forio\">Consensus API</a>\nno pub</p>"},{"name":"CONTROL","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>intended for general non-chat, sim-level communication\nyes pub</p>"},{"name":"PRESENCE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Used for the <a href=\"https://github.com/forio\">Presence API</a>\nno pub</p>"},{"name":"LOBBY","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>intended for awaiting entering games\nyes pub</p>"},{"name":"RUN","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Used for the <a href=\"https://github.com/forio\">Run API</a>\nno pub</p>"},{"name":"SYSTEM","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>internal</p>"}]},"hasMembers":true,"memberHeading":"Members","descriptionHTML":"<p>Push categories are pre-defined channels types in which one might use to receive push channel updates</p>"},{"name":"LOCK_TYPE","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"SYSTEM","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>System -- Epicenter Manager</p>"},{"name":"MONITER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>System minus -- read-only system access, write for certain accounts; think Geromel</p>"},{"name":"AUTHOR","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Author -- Team Members (API keys)\ntied to one account (personal + current account)</p>"},{"name":"SUPPORT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Author minus</p>"},{"name":"FACILITATOR","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Facilitators</p>"},{"name":"REVIEWER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Reviewers (weaker facilitator)\nFacilitator minus</p>"},{"name":"USER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Users -- psuedonymKey required in scope\ne.g., an avatar -- GROUP scope, PARTICIPANT read, USER write, userKey pseudonymKey</p>"},{"name":"LEADER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Leader\nParticipant plus</p>"},{"name":"PARTICIPANT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Participant</p>"},{"name":"ANONYMOUS","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Anonymous</p>"}]},"hasMembers":true,"memberHeading":"Members","descriptionHTML":"<p>Lock types are used to define permissions in runs. They define which roles have which specific privileges associated with the run.</p>"}]