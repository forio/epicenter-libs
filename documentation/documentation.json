[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"These are Mapbox GL JS's ways of representing locations\nand areas on the sphere. There are things "},{"type":"emphasis","children":[{"type":"text","value":"here"}]}]},{"type":"paragraph","children":[{"type":"text","value":"Maybe they're worth looking at?"}]},{"type":"paragraph","children":[{"type":"text","value":"Maybe not."}]}]},"name":"Geography","kind":"note","path":[{"name":"Geography","kind":"note"}],"members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"namespace":"Geography"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Used in "},{"type":"link","url":"https://forio.com","title":null,"jsdoc":true,"children":[{"type":"text","value":"Forio"}]},{"type":"text","value":" what do you mean"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js 00000018"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[],"kind":"enum","type":{"type":"NameExpression","name":"String"},"name":"RITUAL","path":[{"name":"RITUAL","kind":"enum"}],"members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Means Epicenter will bring your run back into memory"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js 00000024"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[],"kind":"constant","name":"INTER","memberof":"RITUAL","scope":"static","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"path":[{"name":"RITUAL","kind":"enum"},{"name":"INTER","kind":"constant","scope":"static"}],"namespace":"RITUAL.INTER"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"???"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js 00000029"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[],"kind":"constant","name":"REANIMATE","memberof":"RITUAL","scope":"static","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"path":[{"name":"RITUAL","kind":"enum"},{"name":"REANIMATE","kind":"constant","scope":"static"}],"namespace":"RITUAL.REANIMATE"},{"description":"","context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/utils/constants.js 00000034"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[],"kind":"constant","name":"EXORCISE","memberof":"RITUAL","scope":"static","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"path":[{"name":"RITUAL","kind":"enum"},{"name":"EXORCISE","kind":"constant","scope":"static"}],"namespace":"RITUAL.EXORCISE"}]},"namespace":"RITUAL"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Config of sorts"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/config.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/config.js 00000135"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[],"kind":"namespace","name":"config","path":[{"name":"config","kind":"namespace"}],"members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Search for data within a collection."}]},{"type":"paragraph","children":[{"type":"text","value":"Searching using comparison or logical operators (as opposed to exact matches) requires MongoDB syntax. See the underlying "},{"type":"link","title":null,"url":"../../../rest_apis/data_api/#searching","children":[{"type":"text","value":"Data API"}]},{"type":"text","value":" for additional details."}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/config.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/config.js 00000090"},"augments":[],"errors":[{"message":"An explicit parameter named documentID was specified but didn't match inferred information ","commentLineNumber":26},{"message":"An explicit parameter named query was specified but didn't match inferred information ","commentLineNumber":27},{"message":"An explicit parameter named outputModifier was specified but didn't match inferred information ","commentLineNumber":28},{"message":"An explicit parameter named options was specified but didn't match inferred information ","commentLineNumber":29}],"examples":[{"description":"// request all data associated with document 'user1'\nds.query('user1');\n\n// exact matching:\n// request all documents in collection where 'question2' is 9\nds.query('', { 'question2': 9});\n\n// comparison operators:\n// request all documents in collection where 'question2' is greater than 9\nds.query('', { 'question2': { '$gt': 9} });\n\n// logical operators:\n// request all documents in collection where 'question2' is less than 10, and 'question3' is false\nds.query('', { '$and': [ { 'question2': { '$lt':10} }, { 'question3': false }] });\n\n// regular expresssions: use any Perl-compatible regular expressions\n// request all documents in collection where 'question5' contains the string '.*day'\nds.query('', { 'question5': { '$regex': '.*day' } });"}],"implements":[],"params":[{"title":"param","name":"documentID","lineNumber":26,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The id of the document to search. Pass the empty string ('') to search the entire collection."}]}]},"type":{"type":"NameExpression","name":"String"}},{"title":"param","name":"query","lineNumber":27,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The query object. For exact matching, this object contains the field name and field value to match. For matching based on comparison, this object contains the field name and the comparison expression. For matching based on logical operators, this object contains an expression using MongoDB syntax. See the underlying "},{"type":"link","title":null,"url":"../../../rest_apis/data_api/#searching","children":[{"type":"text","value":"Data API"}]},{"type":"text","value":" for additional examples."}]}]},"type":{"type":"NameExpression","name":"Object"}},{"title":"param","name":"outputModifier","lineNumber":28,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Available fields include: "},{"type":"inlineCode","value":"sort"},{"type":"text","value":", and "},{"type":"inlineCode","value":"direction"},{"type":"text","value":" ("},{"type":"inlineCode","value":"asc"},{"type":"text","value":" or "},{"type":"inlineCode","value":"desc"},{"type":"text","value":")."}]}]},"type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Object"}}},{"title":"param","name":"options","lineNumber":29,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Overrides for configuration options."}]}]},"type":{"type":"NameExpression","name":"Object"},"default":"{}"}],"properties":[],"returns":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Boolean value as to if it's local"}]}]},"title":"returns","type":{"type":"NameExpression","name":"Boolean"}}],"sees":[],"throws":[],"todos":[],"yields":[],"memberof":"config","name":"isLocal","kind":"function","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"path":[{"name":"config","kind":"namespace"},{"name":"isLocal","kind":"function"}],"namespace":"configisLocal"}]},"namespace":"config"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Has all the run adapters see this other "},{"type":"link","url":"https://github.com/forio","title":null,"jsdoc":true,"children":[{"type":"text","value":"Forio"}]},{"type":"text","value":" more comment here"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/epicenter.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/epicenter.js 00000023"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[],"kind":"namespace","name":"runAdapter","path":[{"name":"runAdapter","kind":"namespace"}],"members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Create a run"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/adapters/run.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/adapters/run.js 00000021"},"augments":[],"errors":[],"examples":[{"description":"const { runAdapter } = epicenter;\nrunAdapter.create('myModal.py', {\n     scopeBoundary:\n     scope:\n});"}],"implements":[],"params":[{"title":"param","name":"model","lineNumber":9,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Name of the "},{"type":"emphasis","children":[{"type":"text","value":"model EMPEEEE"}]},{"type":"text","value":" file that is hosted on Epicenter "},{"type":"html","value":"<a>"},{"type":"text","value":"Link!?"},{"type":"html","value":"</a>"}]}]},"type":{"type":"NameExpression","name":"string"}},{"title":"param","name":"scope","lineNumber":10,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Object with the fields necessary to provide scoping for your channel"}]}]},"type":{"type":"NameExpression","name":"Object"},"properties":[{"title":"param","name":"scope.scopeBoundary","lineNumber":11,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Scope Boundary (one of enumeration of values)"}]}]},"type":{"type":"NameExpression","name":"string"}},{"title":"param","name":"scope.scopeKey","lineNumber":12,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Key value of item bounded by the scope"}]}]},"type":{"type":"NameExpression","name":"string"}},{"title":"param","name":"scope.pseudonymKey","lineNumber":13,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Key of the user creating the run."}]}]},"type":{"type":"NameExpression","name":"string"}}]},{"title":"param","name":"optionals","lineNumber":14,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Object for all optional fields"}]}]},"type":{"type":"NameExpression","name":"Object"},"default":"{}"}],"properties":[],"returns":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Response with the run in the \"body\""}]}]},"title":"returns","type":{"type":"NameExpression","name":"Object"}}],"sees":[],"throws":[],"todos":[],"yields":[],"memberof":"runAdapter","name":"create","kind":"function","async":true,"members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"path":[{"name":"runAdapter","kind":"namespace"},{"name":"create","kind":"function"}],"namespace":"runAdaptercreate"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Clone a run"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/adapters/run.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/adapters/run.js 00000063"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[{"title":"param","name":"runKey","lineNumber":3,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Run's key"}]}]},"type":{"type":"NameExpression","name":"string"}},{"title":"param","name":"optionals","lineNumber":4,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Object for all optional fields"}]}]},"type":{"type":"NameExpression","name":"Object"},"default":"{}"}],"properties":[],"returns":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Response with the run in the \"body\""}]}]},"title":"returns","type":{"type":"NameExpression","name":"Object"}}],"sees":[],"throws":[],"todos":[],"yields":[],"memberof":"runAdapter","name":"clone","kind":"function","async":true,"members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"path":[{"name":"runAdapter","kind":"namespace"},{"name":"clone","kind":"function"}],"namespace":"runAdapterclone"}]},"namespace":"runAdapter"},{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Channel thingy"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/adapters/channel.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/adapters/channel.js 00000016"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[{"title":"param","name":"scope","lineNumber":2,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"wordsd here"}]}]},"type":{"type":"AllLiteral"}}],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[],"constructorComment":{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Make a new channel"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/adapters/channel.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/adapters/channel.js 00000026","code":"{\n\n    path;\n    update;\n    subscription;\n\n    /**\n     * Make a new channel\n     * @param {*} scope wordsd here\n     */\n    constructor(scope) {\n        const { scopeBoundary, scopeKey, pushCategory } = scope;\n        validateScope(scope);\n        this.path = `/${scopeBoundary.toLowerCase()}/${scopeKey}/${pushCategory.toLowerCase()}`;\n        if (cometdAdapter.subscriptions.has(this.path)) {\n            this.subscription = cometdAdapter.subscriptions.get(this.path);\n        }\n    }\n\n    /** This is the publis cahh\n     * @param {*} content someom\n     * @returns {Promise} something here\n     */\n    publish(content) {\n        return cometdAdapter.publish(this, content);\n    }\n\n    async subscribe(update, options) {\n        if (this.subscription) await this.unsubscribe();\n        this.update = update;\n        return cometdAdapter.add(this, update, options).then((subscription) => {\n            this.subscription = subscription;\n            return subscription;\n        });\n    }\n\n    async unsubscribe() {\n        if (this.subscription) {\n            await cometdAdapter.remove(this.subscription);\n            this.subscription = null;\n        }\n    }\n}"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[{"title":"param","name":"scope","lineNumber":2,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"wordsd here"}]}]},"type":{"type":"AllLiteral"}}],"properties":[],"returns":[],"sees":[],"throws":[],"todos":[],"yields":[]},"name":"Channel","kind":"class","members":{"global":[],"inner":[],"instance":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This is the publis cahh"}]}]},"context":{"file":"/Users/wallaceluk/Projects/epicenter-libs/src/adapters/channel.js","sortKey":"!/Users/wallaceluk/Projects/epicenter-libs/src/adapters/channel.js 00000039"},"augments":[],"errors":[],"examples":[],"implements":[],"params":[{"title":"param","name":"content","lineNumber":1,"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"someom"}]}]},"type":{"type":"AllLiteral"}}],"properties":[],"returns":[{"description":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"something here"}]}]},"title":"returns","type":{"type":"NameExpression","name":"Promise"}}],"sees":[],"throws":[],"todos":[],"yields":[],"name":"publish","kind":"function","memberof":"Channel","scope":"instance","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"path":[{"name":"Channel","kind":"class"},{"name":"publish","kind":"function","scope":"instance"}],"namespace":"Channel#publish"}],"events":[],"static":[]},"path":[{"name":"Channel","kind":"class"}],"namespace":"Channel"}]