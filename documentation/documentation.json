[{"name":"Geography","kind":"note","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[]},"hasMembers":0,"memberHeading":"","descriptionHTML":"<p>These are Mapbox GL JS's ways of representing locations\nand areas on the sphere. There are things <strong>here</strong></p><p>Maybe they're worth looking at?</p><p>Maybe not.</p>"},{"name":"config","kind":"namespace","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"apiProtocol","kind":"member","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Protocol used to make network requests (whether <code>http://</code> or <code>https://</code>). It is typically set on-load based on your browser's URL. For local development, this is defaulted to <code>https</code>, and can be overwritten if desired.</p>"},{"name":"apiHost","kind":"member","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Hostname used to make network requests. It is typically set on-load based on your browser's URL. For local development, this is defaulted to <code>forio.com</code>, and can be overwritten if desired.</p>"},{"name":"apiVersion","kind":"member","typeName":"number","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Version used to make network requests. This is read-only variable intended for internal use.</p>"},{"name":"accountShortName","kind":"member","typeName":"string","examples":[{"description":"// with browser URL: https://forio.com/app/acme-simulations/foobar-game\n\nconsole.log(epicenter.config.accountShortName);\n// should log 'acme-simulations'\n\nepicenter.runAdapter.get(123);\n// instantiates a GET call with the URL: https://forio.com/api/v3/acme-simulations/foobar-game/run/123\n\nepicenter.config.accountShortName = 'globex-simuations';\nepicenter.runAdapter.get(123);\n// now instantiates a GET with the URL: https://forio.com/api/v3/globex-simulations/foobar-game/run/123\n\nepicenter.runAdapter.get(123, { accountShortName: 'initech-simulations' });\n// now instantiates a GET with the URL: https://forio.com/api/v3/initech-simulations/foobar-game/run/123"}],"returns":[],"params":[],"descriptionHTML":"<p>Account name used for making network requests. This is the default value used by Epicenter API adapters when making network requests without explicitly defining an account to use. It is defined on-load based on your browser's URL, and can be overwritten for local development.</p>"},{"name":"projectShortName","kind":"member","typeName":"string","examples":[{"description":"// with browser URL: https://forio.com/app/acme-simulations/foobar-game\n\nconsole.log(epicenter.config.projectShortName);\n// should log 'foobar-game'\n\nepicenter.runAdapter.get(123);\n// instantiates a GET call with the URL: https://forio.com/api/v3/acme-simulations/foobar-game/run/123\n\nepicenter.config.projectShortName = 'barfoo-game';\nepicenter.runAdapter.get(123);\n// now instantiates a GET with the URL: https://forio.com/api/v3/acme-simulations/barfoo-game/run/123\n\nepicenter.runAdapter.get(123, { projectShortName: 'barbaz-game' });\n// now instantiates a GET with the URL: https://forio.com/api/v3/acme-simulations/barbaz-game/run/123"}],"returns":[],"params":[],"descriptionHTML":"<p>Project name used for making network requests. This is the default value used by Epicenter API adapters when making network requests without explicitly defining an account to use. It is defined on-load based on your browser's URL, and can be overwritten for local development.</p>"},{"name":"isLocal","kind":"function","typeName":"Function","examples":[],"returns":[{"typeName":"Boolean","descriptionHTML":"<p>whether or not environment is local.</p>"}],"params":[],"descriptionHTML":"<p>Use to determines whether or not the environment is local.</p>"}]},"hasMembers":6,"memberHeading":"Methods","descriptionHTML":"<p>Configuration -- used to set up and configure global settings for Epicenter JS libs.</p>"},{"name":"runAdapter","kind":"namespace","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"create","kind":"function","typeName":"Function","examples":[{"description":"const { runAdapter } = epicenter;\nrunAdapter.create('myModal.py', {\n     scopeBoundary:\n     scope:\n});"}],"returns":[{"typeName":"Object","descriptionHTML":"<p>Response with the run in the \"body\"</p>"}],"params":[{"name":"model","properties":[],"typeName":"string","descriptionHTML":"<p>Name of the <strong>model EMPEEEE</strong> file that is hosted on Epicenter <a>Link!?</a></p>"},{"name":"scope","properties":[{"name":"scope.scopeBoundary","properties":[],"typeName":"string","descriptionHTML":"<p>Scope Boundary (one of enumeration of values)</p>"},{"name":"scope.scopeKey","properties":[],"typeName":"string","descriptionHTML":"<p>Key value of item bounded by the scope</p>"},{"name":"scope.pseudonymKey","properties":[],"typeName":"string","descriptionHTML":"<p>Key of the user creating the run.</p>"}],"typeName":"Object","descriptionHTML":"<p>Object with the fields necessary to provide scoping for your channel</p>"},{"name":"optionals","properties":[],"default":"{}","typeName":"Object","isOptional":"{}","descriptionHTML":"<p>Object for all optional fields</p>"}],"descriptionHTML":"<p>Create a run</p>"},{"name":"clone","kind":"function","typeName":"Function","examples":[],"returns":[{"typeName":"Object","descriptionHTML":"<p>Response with the run in the \"body\"</p>"}],"params":[{"name":"runKey","properties":[],"typeName":"string","descriptionHTML":"<p>Run's key</p>"},{"name":"optionals","properties":[],"default":"{}","typeName":"Object","isOptional":"{}","descriptionHTML":"<p>Object for all optional fields</p>"}],"descriptionHTML":"<p>Clone a run</p>"}]},"hasMembers":2,"memberHeading":"Methods","descriptionHTML":"<p>Has all the run adapters see this other <a href=\"https://github.com/forio\">Forio</a> more comment here</p>"},{"name":"RITUAL","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"NONE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>???</p>"},{"name":"INTER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>???</p>"},{"name":"REANIMATE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>A run with this ritual will be pulled into memory as needed, and will stay in memory until it's lifespan (defined in your project Settings) has expired.</p>"},{"name":"EXORCISE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>A run with this ritual will be pulled into memory as needed, and removed from memory afterwards.</p>"}]},"hasMembers":4,"memberHeading":"Members","descriptionHTML":"<p>Rituals are used to define the way in which the Epicenter stores a run while running actions like getting variables, saving meta data, and call model operations. Runs can exist in-memory for a certain amount of time before expiring, and requiring their revival again before use.</p>"},{"name":"Channel","kind":"class","members":{"global":[],"inner":[],"instance":[{"name":"publish","kind":"function","typeName":"Function","examples":[],"returns":[{"typeName":"Promise","descriptionHTML":"<p>something here</p>"}],"params":[{"name":"content","properties":[],"isOptional":true,"descriptionHTML":"<p>someom</p>"}],"descriptionHTML":"<p>This is the publis cahh</p>"}],"events":[],"static":[]},"hasMembers":1,"memberHeading":"Methods","descriptionHTML":"<p>Channel thingy</p>"},{"name":"SCOPE_BOUNDARY","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"PROJECT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by project, users and facilitators are allowed access so long as they are a user in a group on the project.</p>"},{"name":"GROUP","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by group, users and facilitators are allowed access only if they are in the associated group</p>"},{"name":"EPISODE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by episode, not sure what this one is permission-wise</p>"},{"name":"WORLD","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Runs scoped by world, users are only allowed access to the if they are assigned to the associated world. Facilitators need only to belong on the group that created the world</p>"},{"name":"RUN","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Run scoped runs are only accessible to the user who created the run, and facilitators that exist in the same group as that user.</p>"}]},"hasMembers":5,"memberHeading":"Members","descriptionHTML":"<p>Scope boundaries are values associated with runs. They help to define the <strong>default</strong> user permissions used when a run is created, althought further permission configuration can be done with <a href=\"#LOCK_TYPE\">lock types</a>. Scopes also provide an index that in which a run can be queried for.</p>"},{"name":"PUSH_CATEGORY","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"CHAT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Used for messaging users, (isn't this somewhat general?)</p>"},{"name":"CONSENSUS","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Used for the <a href=\"https://github.com/forio\">Consensus API</a></p>"},{"name":"CONTROL","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>No idea what this is for...</p>"},{"name":"PRESENCE","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Used for the <a href=\"https://github.com/forio\">Presence API</a></p>"},{"name":"RUN","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Used for the <a href=\"https://github.com/forio\">Run API</a></p>"},{"name":"SYSTEM","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Send help..</p>"}]},"hasMembers":6,"memberHeading":"Members","descriptionHTML":"<p>Push categories are pre-defined channels types in which one might use to receive push channel updates</p>"},{"name":"LOCK_TYPE","kind":"enum","members":{"global":[],"inner":[],"instance":[],"events":[],"static":[{"name":"SYSTEM","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>System?</p>"},{"name":"MONITER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>No idea</p>"},{"name":"AUTHOR","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Author</p>"},{"name":"SUPPORT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Team Members</p>"},{"name":"FACILITATOR","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Facilitators</p>"},{"name":"REVIEWER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Reviewers</p>"},{"name":"USER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Users</p>"},{"name":"LEADER","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Leader</p>"},{"name":"PARTICIPANT","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Participant</p>"},{"name":"ANONYMOUS","kind":"constant","typeName":"string","examples":[],"returns":[],"params":[],"descriptionHTML":"<p>Anonymous</p>"}]},"hasMembers":10,"memberHeading":"Members","descriptionHTML":"<p>Lock types are used to define permissions in runs. They define which roles have which specific privileges associated with the run.</p>"}]